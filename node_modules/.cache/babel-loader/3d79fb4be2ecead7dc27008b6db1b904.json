{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/DialogsPage/DialogsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport s from \"./dialogPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMessageAC } from \"../../store/reducers/dialogsReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DialogsPage = props => {\n  _s();\n\n  const dialogsState = useSelector(state => state.dialogsPage);\n  const dispatch = useDispatch();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n\n  const addMessage = () => {\n    dispatch(addMessageAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogPageContainer,\n    children: \"Dialog Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DialogsPage, \"eu/Knd/KsOOnmKHgmM9M0U0m4/g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DialogsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/DialogsPage/DialogsPage.tsx"],"names":["React","useState","s","useDispatch","useSelector","addMessageAC","DialogsPage","props","dialogsState","state","dialogsPage","dispatch","textAreaValue","setTextAreaValue","addMessage","dialogPageContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,CAAP,MAAc,yBAAd;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAIEC,YAJF,QAKO,qCALP;;AAWA,OAAO,MAAMC,WAAiC,GAAIC,KAAD,IAAW;AAAA;;AAC1D,QAAMC,YAAY,GAAGJ,WAAW,CAC7BK,KAAD,IAAWA,KAAK,CAACC,WADa,CAAhC;AAGA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAS,EAAT,CAAlD;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAACN,YAAY,CAACO,aAAD,CAAb,CAAR;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAHD;;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAEX,CAAC,CAACa,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAhBM;;GAAMT,W;UACUF,W,EAGJD,W;;;KAJNG,W","sourcesContent":["import React, { FC, useState } from \"react\";\nimport s from \"./dialogPage.module.css\";\nimport DialogItem from \"../../components/DialogItem\";\nimport Message from \"../../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  DialogPageType,\n  DialogType,\n  MessageType,\n  addMessageAC,\n} from \"../../store/reducers/dialogsReducer\";\nimport TextArea from \"../../shared/TextArea\";\nimport { Button } from \"../../shared/Button\";\n\ntype DialogsPageProps = {};\n\nexport const DialogsPage: FC<DialogsPageProps> = (props) => {\n  const dialogsState = useSelector<RootState, DialogPageType>(\n    (state) => state.dialogsPage\n  );\n  const dispatch = useDispatch();\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addMessage = () => {\n    dispatch(addMessageAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  return <div className={s.dialogPageContainer}>\n    Dialog Page\n  </div>;\n};\n"]},"metadata":{},"sourceType":"module"}