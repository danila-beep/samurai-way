{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styles from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currentPageChengerAC, followUserAC, getUsersTC, nextPagesPaginationAC, unfollowUserAC } from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersPage = () => {\n  _s();\n\n  //getting data from redux\n  const usersPageData = useSelector(state => state.usersPage);\n  const dispatch = useDispatch(); //API call\n\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]); //pagination logic\n\n  const pagesCount = Math.ceil(usersPageData.totalUsersCount / usersPageData.pageSize);\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n\n  const previousPages = () => {\n    const previousPagesArray = [...usersPageData.paginationCount];\n\n    if (previousPagesArray[0] <= 1) {\n      setPagesForRender(previousPagesArray);\n    } else {\n      previousPagesArray.pop();\n      previousPagesArray.unshift(previousPagesArray[0] - 1);\n      setPagesForRender(previousPagesArray);\n    }\n  };\n\n  const followButtonHandler = (isFollowed, userId) => {\n    if (isFollowed) {\n      dispatch(unfollowUserAC(userId));\n    } else {\n      dispatch(followUserAC(userId));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.usersPageWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.usersList,\n      children: usersPageData.users.items.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardHeader,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNJywAxz6Z9hzwF0VZ3FdVkZ9o1I1_7wN72w&usqp=CAU\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardUserInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.photos.small ? user.photos.small : \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\",\n              width: 100,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardFollowButtons,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => followButtonHandler(user.followed, user.id),\n              children: user.followed ? \"Unfollow\" : \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagesWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.pagesListChanger,\n        onClick: previousPages,\n        children: /*#__PURE__*/_jsxDEV(UilArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), pagesForRender.map((p, index) => {\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `friends`,\n          className: styles.pageItem,\n          onClick: () => {\n            dispatch(currentPageChengerAC(p));\n          },\n          children: p\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: nextPages,\n        children: /*#__PURE__*/_jsxDEV(UilArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersPage, \"Gk/M3zRD8a3uFewu5WqVluEnTh4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx"],"names":["React","useEffect","styles","useDispatch","useSelector","currentPageChengerAC","followUserAC","getUsersTC","nextPagesPaginationAC","unfollowUserAC","Button","UilArrowLeft","UilArrowRight","NavLink","UsersPage","usersPageData","state","usersPage","dispatch","currentPage","pageSize","pagesCount","Math","ceil","totalUsersCount","nextPages","previousPages","previousPagesArray","paginationCount","setPagesForRender","pop","unshift","followButtonHandler","isFollowed","userId","usersPageWrapper","usersList","users","items","map","user","userCard","userCardHeader","userCardUserInfo","photos","small","name","userCardFollowButtons","followed","id","pagesWrapper","pagesListChanger","pagesForRender","p","index","pageItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UserPageType,\n  currentPageChengerAC,\n  followUserAC,\n  getUsersTC,\n  nextPagesPaginationAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n} from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSessionStorage } from \"usehooks-ts\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const dispatch = useDispatch();\n\n  //API call\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]);\n\n  //pagination logic\n\n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount))\n  };\n  const previousPages = () => {\n    const previousPagesArray: Array<number> = [...usersPageData.paginationCount];\n    if (previousPagesArray[0] <= 1) {\n      setPagesForRender(previousPagesArray);\n    } else {\n      previousPagesArray.pop();\n      previousPagesArray.unshift(previousPagesArray[0] - 1);\n      setPagesForRender(previousPagesArray);\n    }\n  };\n\n  const followButtonHandler = (isFollowed: boolean, userId: number) => {\n    if (isFollowed) {\n      dispatch(unfollowUserAC(userId));\n    } else {\n      dispatch(followUserAC(userId));\n    }\n  };\n\n  return (\n    <div className={styles.usersPageWrapper}>\n      <div className={styles.usersList}>\n        {usersPageData.users.items.map((user) => {\n          return (\n            <div key={user.id} className={styles.userCard}>\n              <div className={styles.userCardHeader}>\n                <img\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNJywAxz6Z9hzwF0VZ3FdVkZ9o1I1_7wN72w&usqp=CAU\"\n                  alt=\"\"\n                />\n              </div>\n              <div className={styles.userCardUserInfo}>\n                <img\n                  src={\n                    user.photos.small\n                      ? user.photos.small\n                      : \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\"\n                  }\n                  width={100}\n                  alt=\"\"\n                />\n                <span>{user.name}</span>\n              </div>\n              <div className={styles.userCardFollowButtons}>\n                <Button\n                  onClick={() => followButtonHandler(user.followed, user.id)}\n                >\n                  {user.followed ? \"Unfollow\" : \"Follow\"}\n                </Button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className={styles.pagesWrapper}>\n        <span className={styles.pagesListChanger} onClick={previousPages}>\n          <UilArrowLeft />\n        </span>\n        {pagesForRender.map((p, index) => {\n          return (\n            <NavLink\n              to={`friends`}\n              className={styles.pageItem}\n              key={index}\n              onClick={() => {\n                dispatch(currentPageChengerAC(p));\n              }}\n            >\n              {p}\n            </NavLink>\n          );\n        })}\n        <span onClick={nextPages}>\n          <UilArrowRight />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}