{"ast":null,"code":"import { socialMediaAPI } from \"../../api/socialMediaAPI\"; //initial State\n\nconst usersState = {\n  users: {\n    items: [],\n    totalUsersCount: 0,\n    error: null\n  },\n  pageSize: 6,\n  totalUsersCount: 0,\n  currentPage: 1,\n  paginationCount: [1, 2, 3, 4, 5],\n  isFetching: true\n}; //Reducer\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : usersState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"usersPage/followUser\":\n      return { ...state,\n        users: { ...state.users,\n          items: [...state.users.items.map(user => {\n            if (user.id === action.userId) {\n              return { ...user,\n                followed: true\n              };\n            } else {\n              return { ...user\n              };\n            }\n          })]\n        }\n      };\n\n    case \"usersPage/unFollowUser\":\n      return { ...state,\n        users: { ...state.users,\n          items: [...state.users.items.map(user => {\n            if (user.id === action.userId) {\n              return { ...user,\n                followed: false\n              };\n            } else {\n              return { ...user\n              };\n            }\n          })]\n        }\n      };\n\n    case \"usersPage/setUsers\":\n      return { ...state,\n        users: action.users\n      };\n\n    case \"usersPage/changeCurrentPage\":\n      return { ...state,\n        currentPage: action.value\n      };\n\n    case \"usersPage/setTotalUsersCount\":\n      return { ...state,\n        totalUsersCount: action.value\n      };\n\n    case \"usersPage/nextPagesPagination\":\n      {\n        const nextPagesArray = [...state.paginationCount];\n\n        if (nextPagesArray[4] >= action.pagesCount) {\n          return { ...state,\n            paginationCount: nextPagesArray\n          };\n        } else {\n          nextPagesArray.push(nextPagesArray[4] + 1);\n          nextPagesArray.shift();\n          return { ...state,\n            paginationCount: nextPagesArray\n          };\n        }\n      }\n\n    case \"usersPage/previousPagesPagination\":\n      {\n        const previousPagesArray = [...state.paginationCount];\n\n        if (previousPagesArray[0] <= 1) {\n          return { ...state,\n            paginationCount: previousPagesArray\n          };\n        } else {\n          previousPagesArray.pop();\n          previousPagesArray.unshift(previousPagesArray[0] - 1);\n          return { ...state,\n            paginationCount: previousPagesArray\n          };\n        }\n      }\n\n    default:\n      return state;\n  }\n}; //Action Creators\n\n\nexport const followUserAC = userId => {\n  return {\n    type: \"usersPage/followUser\",\n    userId\n  };\n};\nexport const unfollowUserAC = userId => {\n  return {\n    type: \"usersPage/unFollowUser\",\n    userId\n  };\n};\nexport const setUsersAC = users => {\n  return {\n    type: \"usersPage/setUsers\",\n    users\n  };\n};\nexport const currentPageChengerAC = value => {\n  return {\n    type: \"usersPage/changeCurrentPage\",\n    value\n  };\n};\nexport const setTotalUsersCount = value => {\n  return {\n    type: \"usersPage/setTotalUsersCount\",\n    value\n  };\n};\nexport const nextPagesPaginationAC = pagesCount => {\n  return {\n    type: \"usersPage/nextPagesPagination\",\n    pagesCount\n  };\n};\nexport const previousPagesPaginationAC = pagesCount => {\n  return {\n    type: \"usersPage/previousPagesPagination\",\n    pagesCount\n  };\n};\nexport const setFetching = () => {\n  return {\n    type: \"usersPage\"\n  };\n}; //Thunk Creators\n\nexport const getUsersTC = (currentPage, pageSize) => async dispatch => {\n  if (currentPage && pageSize) {\n    socialMediaAPI.getUsers(currentPage, pageSize).then(res => {\n      const data = res.data;\n      dispatch(setUsersAC(data));\n      dispatch(setTotalUsersCount(data.totalCount));\n    }).catch(error => {\n      console.log(error.message);\n    });\n  } else {\n    socialMediaAPI.getUsers().then(res => {\n      dispatch(setUsersAC(res.data));\n      dispatch(setTotalUsersCount(res.data.totalCount));\n    });\n  }\n};\nexport const followUserTC = userId => async dispatch => {\n  socialMediaAPI.followUser(userId).then(res => {\n    dispatch(followUserAC(userId));\n  });\n};\nexport const unfollowUserTC = userId => async dispatch => {\n  socialMediaAPI.unfollowUser(userId).then(res => {\n    dispatch(unfollowUserAC(userId));\n  });\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/usersReducer.ts"],"names":["socialMediaAPI","usersState","users","items","totalUsersCount","error","pageSize","currentPage","paginationCount","isFetching","usersReducer","state","action","type","map","user","id","userId","followed","value","nextPagesArray","pagesCount","push","shift","previousPagesArray","pop","unshift","followUserAC","unfollowUserAC","setUsersAC","currentPageChengerAC","setTotalUsersCount","nextPagesPaginationAC","previousPagesPaginationAC","setFetching","getUsersTC","dispatch","getUsers","then","res","data","totalCount","catch","console","log","message","followUserTC","followUser","unfollowUserTC","unfollowUser"],"mappings":"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","sourcesContent":["import { Dispatch } from \"redux\";\nimport { socialMediaAPI } from \"../../api/socialMediaAPI\";\n\n//initial State\nconst usersState = {\n  users: {\n    items: [],\n    totalUsersCount: 0,\n    error: null,\n  },\n  pageSize: 6,\n  totalUsersCount: 0,\n  currentPage: 1,\n  paginationCount: [1, 2, 3, 4, 5],\n  isFetching: true,\n};\n\n//Reducer\nconst usersReducer = (\n  state: UserPageType = usersState,\n  action: ActionsType\n) => {\n  switch (action.type) {\n    case \"usersPage/followUser\":\n      return {\n        ...state,\n        users: {\n          ...state.users,\n          items: [\n            ...state.users.items.map((user) => {\n              if (user.id === action.userId) {\n                return { ...user, followed: true };\n              } else {\n                return { ...user };\n              }\n            }),\n          ],\n        },\n      };\n    case \"usersPage/unFollowUser\":\n      return {\n        ...state,\n        users: {\n          ...state.users,\n          items: [\n            ...state.users.items.map((user) => {\n              if (user.id === action.userId) {\n                return { ...user, followed: false };\n              } else {\n                return { ...user };\n              }\n            }),\n          ],\n        },\n      };\n    case \"usersPage/setUsers\":\n      return { ...state, users: action.users };\n    case \"usersPage/changeCurrentPage\":\n      return { ...state, currentPage: action.value };\n    case \"usersPage/setTotalUsersCount\":\n      return { ...state, totalUsersCount: action.value };\n    case \"usersPage/nextPagesPagination\": {\n      const nextPagesArray: Array<number> = [...state.paginationCount];\n      if (nextPagesArray[4] >= action.pagesCount) {\n        return {\n          ...state,\n          paginationCount: nextPagesArray,\n        };\n      } else {\n        nextPagesArray.push(nextPagesArray[4] + 1);\n        nextPagesArray.shift();\n        return {\n          ...state,\n          paginationCount: nextPagesArray,\n        };\n      }\n    }\n    case \"usersPage/previousPagesPagination\": {\n      const previousPagesArray: Array<number> = [...state.paginationCount];\n      if (previousPagesArray[0] <= 1) {\n        return {\n          ...state,\n          paginationCount: previousPagesArray,\n        };\n      } else {\n        previousPagesArray.pop();\n        previousPagesArray.unshift(previousPagesArray[0] - 1);\n        return {\n          ...state,\n          paginationCount: previousPagesArray,\n        };\n      }\n    }\n    default:\n      return state;\n  }\n};\n\n//Action Creators\nexport const followUserAC = (userId: number) => {\n  return { type: \"usersPage/followUser\", userId } as const;\n};\nexport const unfollowUserAC = (userId: number) => {\n  return { type: \"usersPage/unFollowUser\", userId } as const;\n};\nexport const setUsersAC = (users: UsersListType) => {\n  return { type: \"usersPage/setUsers\", users } as const;\n};\nexport const currentPageChengerAC = (value: number) => {\n  return { type: \"usersPage/changeCurrentPage\", value } as const;\n};\nexport const setTotalUsersCount = (value: number) => {\n  return { type: \"usersPage/setTotalUsersCount\", value } as const;\n};\nexport const nextPagesPaginationAC = (pagesCount: number) => {\n  return { type: \"usersPage/nextPagesPagination\", pagesCount } as const;\n};\nexport const previousPagesPaginationAC = (pagesCount: number) => {\n  return { type: \"usersPage/previousPagesPagination\", pagesCount } as const;\n};\nexport const setFetching = () => {\n  return {type: \"usersPage\"}\n}\n\n//Thunk Creators\nexport const getUsersTC =\n  (currentPage?: number, pageSize?: number) => async (dispatch: Dispatch) => {\n    if (currentPage && pageSize) {\n      socialMediaAPI\n        .getUsers(currentPage, pageSize)\n        .then((res) => {\n          const data = res.data;\n          dispatch(setUsersAC(data));\n          dispatch(setTotalUsersCount(data.totalCount));\n        })\n        .catch((error) => {\n          console.log(error.message);\n        });\n    } else {\n      socialMediaAPI.getUsers().then((res) => {\n        dispatch(setUsersAC(res.data));\n        dispatch(setTotalUsersCount(res.data.totalCount));\n      });\n    }\n  };\nexport const followUserTC = (userId: number) => async (dispatch: Dispatch) => {\n  socialMediaAPI.followUser(userId).then((res) => {\n    dispatch(followUserAC(userId));\n  });\n};\nexport const unfollowUserTC =\n  (userId: number) => async (dispatch: Dispatch) => {\n    socialMediaAPI.unfollowUser(userId).then((res) => {\n      dispatch(unfollowUserAC(userId));\n    });\n  };\n\nexport type UserPageType = {\n  users: UsersListType;\n  pageSize: number;\n  totalUsersCount: number;\n  currentPage: number;\n  paginationCount: number[];\n  isFetching: boolean;\n};\n\nexport type UsersListType = {\n  items: UserType[];\n  totalUsersCount: number;\n  error: string | null;\n};\n\nexport type UserType = {\n  name: string;\n  id: number;\n  photos: {\n    small: string | null;\n    large: string | null;\n  };\n  status: string | null;\n  followed: boolean;\n};\n\ntype ActionsType =\n  | ReturnType<typeof followUserAC>\n  | ReturnType<typeof unfollowUserAC>\n  | ReturnType<typeof setUsersAC>\n  | ReturnType<typeof currentPageChengerAC>\n  | ReturnType<typeof setTotalUsersCount>\n  | ReturnType<typeof nextPagesPaginationAC>\n  | ReturnType<typeof previousPagesPaginationAC>;\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}