{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { useEffect, useReducer, useRef } from 'react';\n\nfunction useFetch(url, options) {\n  const cache = useRef({});\n  const cancelRequest = useRef(false);\n  const initialState = {\n    error: undefined,\n    data: undefined\n  };\n\n  const fetchReducer = (state, action) => {\n    switch (action.type) {\n      case 'loading':\n        return Object.assign({}, initialState);\n\n      case 'fetched':\n        return Object.assign(Object.assign({}, initialState), {\n          data: action.payload\n        });\n\n      case 'error':\n        return Object.assign(Object.assign({}, initialState), {\n          error: action.payload\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n  useEffect(() => {\n    if (!url) return;\n    cancelRequest.current = false;\n\n    const fetchData = () => __awaiter(this, void 0, void 0, function* () {\n      dispatch({\n        type: 'loading'\n      });\n\n      if (cache.current[url]) {\n        dispatch({\n          type: 'fetched',\n          payload: cache.current[url]\n        });\n        return;\n      }\n\n      try {\n        const response = yield fetch(url, options);\n\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const data = yield response.json();\n        cache.current[url] = data;\n        if (cancelRequest.current) return;\n        dispatch({\n          type: 'fetched',\n          payload: data\n        });\n      } catch (error) {\n        if (cancelRequest.current) return;\n        dispatch({\n          type: 'error',\n          payload: error\n        });\n      }\n    });\n\n    void fetchData();\n    return () => {\n      cancelRequest.current = true;\n    };\n  }, [url]);\n  return state;\n}\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/usehooks-ts/dist/esm/useFetch/useFetch.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","useEffect","useReducer","useRef","useFetch","url","options","cache","cancelRequest","initialState","error","undefined","data","fetchReducer","state","action","type","Object","assign","payload","dispatch","current","fetchData","response","fetch","ok","Error","statusText","json"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useEffect, useReducer, useRef } from 'react';\nfunction useFetch(url, options) {\n    const cache = useRef({});\n    const cancelRequest = useRef(false);\n    const initialState = {\n        error: undefined,\n        data: undefined,\n    };\n    const fetchReducer = (state, action) => {\n        switch (action.type) {\n            case 'loading':\n                return Object.assign({}, initialState);\n            case 'fetched':\n                return Object.assign(Object.assign({}, initialState), { data: action.payload });\n            case 'error':\n                return Object.assign(Object.assign({}, initialState), { error: action.payload });\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\n    useEffect(() => {\n        if (!url)\n            return;\n        cancelRequest.current = false;\n        const fetchData = () => __awaiter(this, void 0, void 0, function* () {\n            dispatch({ type: 'loading' });\n            if (cache.current[url]) {\n                dispatch({ type: 'fetched', payload: cache.current[url] });\n                return;\n            }\n            try {\n                const response = yield fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const data = (yield response.json());\n                cache.current[url] = data;\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'fetched', payload: data });\n            }\n            catch (error) {\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'error', payload: error });\n            }\n        });\n        void fetchData();\n        return () => {\n            cancelRequest.current = true;\n        };\n    }, [url]);\n    return state;\n}\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}