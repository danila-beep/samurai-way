{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styles from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currentPageChengerAC, followUserAC, setTotalUsersCount, setUsersAC, unfollowUserAC } from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSessionStorage } from \"usehooks-ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersPage = () => {\n  _s();\n\n  //getting data from redux\n  const usersPageData = useSelector(state => state.usersPage);\n  const dispatch = useDispatch(); //API call\n\n  useEffect(() => {\n    const getUsersFromApi = async () => {\n      try {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${usersPageData.currentPage}&count=${usersPageData.pageSize}`).then(response => {\n          const data = response.data;\n          console.log(data);\n          dispatch(setUsersAC(data));\n          dispatch(setTotalUsersCount(data.totalCount));\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getUsersFromApi();\n  }, [usersPageData.currentPage, usersPageData.pageSize]); //pagination logic\n\n  const pagesCount = Math.ceil(usersPageData.totalUsersCount / usersPageData.pageSize);\n  const [pagesForRender, setPagesForRender] = useSessionStorage(\"listOfPages\", [1, 2, 3, 4, 5]);\n\n  const nextPages = () => {\n    const nextPagesArray = [...pagesForRender];\n\n    if (nextPagesArray[4] >= pagesCount) {\n      setPagesForRender(nextPagesArray);\n    } else {\n      nextPagesArray.push(nextPagesArray[4] + 1);\n      nextPagesArray.shift();\n      setPagesForRender(nextPagesArray);\n    }\n  };\n\n  const previousPages = () => {\n    const previousPagesArray = [...pagesForRender];\n\n    if (previousPagesArray[0] <= 1) {\n      setPagesForRender(previousPagesArray);\n    } else {\n      previousPagesArray.pop();\n      previousPagesArray.unshift(previousPagesArray[0] - 1);\n      setPagesForRender(previousPagesArray);\n    }\n  };\n\n  const followButtonHandler = (isFollowed, userId) => {\n    if (isFollowed) {\n      dispatch(unfollowUserAC(userId));\n    } else {\n      dispatch(followUserAC(userId));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.usersPageWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.usersList,\n      children: usersPageData.users.items.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardHeader,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNJywAxz6Z9hzwF0VZ3FdVkZ9o1I1_7wN72w&usqp=CAU\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardUserInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.photos.small ? user.photos.small : \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\",\n              width: 100,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardFollowButtons,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => followButtonHandler(user.followed, user.id),\n              children: user.followed ? \"Unfollow\" : \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagesWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.pagesListChanger,\n        onClick: previousPages,\n        children: /*#__PURE__*/_jsxDEV(UilArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), pagesForRender.map((p, index) => {\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: `friends`,\n          className: styles.pageItem,\n          onClick: () => {\n            dispatch(currentPageChengerAC(p));\n          },\n          children: p\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: nextPages,\n        children: /*#__PURE__*/_jsxDEV(UilArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersPage, \"fwSeDa21IEId6+ArDSQ3EjiPu5s=\", false, function () {\n  return [useSelector, useDispatch, useSessionStorage];\n});\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx"],"names":["React","useEffect","styles","useDispatch","useSelector","currentPageChengerAC","followUserAC","setTotalUsersCount","setUsersAC","unfollowUserAC","Button","axios","UilArrowLeft","UilArrowRight","NavLink","useSessionStorage","UsersPage","usersPageData","state","usersPage","dispatch","getUsersFromApi","get","currentPage","pageSize","then","response","data","console","log","totalCount","error","pagesCount","Math","ceil","totalUsersCount","pagesForRender","setPagesForRender","nextPages","nextPagesArray","push","shift","previousPages","previousPagesArray","pop","unshift","followButtonHandler","isFollowed","userId","usersPageWrapper","usersList","users","items","map","user","userCard","userCardHeader","userCardUserInfo","photos","small","name","userCardFollowButtons","followed","id","pagesWrapper","pagesListChanger","p","index","pageItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UserPageType,\n  currentPageChengerAC,\n  followUserAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n} from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSessionStorage } from \"usehooks-ts\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const dispatch = useDispatch();\n\n  //API call\n  useEffect(() => {\n    const getUsersFromApi = async () => {\n      try {\n        axios\n          .get(\n            `https://social-network.samuraijs.com/api/1.0/users?page=${usersPageData.currentPage}&count=${usersPageData.pageSize}`\n          )\n          .then((response) => {\n            const data = response.data;\n            console.log(data);\n            \n            dispatch(setUsersAC(data));\n            dispatch(setTotalUsersCount(data.totalCount));\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUsersFromApi();\n  }, [usersPageData.currentPage, usersPageData.pageSize]);\n\n  //pagination logic\n\n  \n\n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n\n  const [pagesForRender, setPagesForRender] = useSessionStorage<Array<number>>(\"listOfPages\", [1, 2, 3, 4, 5]);\n\n\n  const nextPages = () => {\n    const nextPagesArray: Array<number> = [...pagesForRender];\n    if (nextPagesArray[4] >= pagesCount) {\n      setPagesForRender(nextPagesArray);\n    } else {\n      nextPagesArray.push(nextPagesArray[4] + 1);\n      nextPagesArray.shift();\n      setPagesForRender(nextPagesArray);\n    }\n  };\n  const previousPages = () => {\n    const previousPagesArray: Array<number> = [...pagesForRender];\n    if (previousPagesArray[0] <= 1) {\n      setPagesForRender(previousPagesArray);\n    } else {\n      previousPagesArray.pop();\n      previousPagesArray.unshift(previousPagesArray[0] - 1);\n      setPagesForRender(previousPagesArray);\n    }\n  };\n\n  const followButtonHandler = (isFollowed: boolean, userId: number) => {\n    if (isFollowed) {\n      dispatch(unfollowUserAC(userId))\n    }\n    else {\n      dispatch(followUserAC(userId))\n    }\n  }\n\n  return (\n    <div className={styles.usersPageWrapper}>\n      <div className={styles.usersList}>\n        {usersPageData.users.items.map((user) => {\n          return (\n            <div key={user.id} className={styles.userCard}>\n              <div className={styles.userCardHeader}>\n                <img\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNJywAxz6Z9hzwF0VZ3FdVkZ9o1I1_7wN72w&usqp=CAU\"\n                  alt=\"\"\n                />\n              </div>\n              <div className={styles.userCardUserInfo}>\n                <img\n                  src={\n                    user.photos.small\n                      ? user.photos.small\n                      : \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\"\n                  }\n                  width={100}\n                  alt=\"\"\n                />\n                <span>{user.name}</span>\n              </div>\n              <div className={styles.userCardFollowButtons}>\n                <Button onClick={() => followButtonHandler(user.followed, user.id)}>\n                  {user.followed ? \"Unfollow\" : \"Follow\"}\n                </Button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className={styles.pagesWrapper}>\n        <span className={styles.pagesListChanger} onClick={previousPages}>\n          <UilArrowLeft />\n        </span>\n        {pagesForRender.map((p, index) => {\n          return (\n            <NavLink\n              to={`friends`}\n              className={styles.pageItem}\n              key={index}\n              onClick={() => {\n                dispatch(currentPageChengerAC(p));\n              }}\n            >\n              {p}\n            </NavLink>\n          );\n        })}\n        <span onClick={nextPages}>\n          <UilArrowRight />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}