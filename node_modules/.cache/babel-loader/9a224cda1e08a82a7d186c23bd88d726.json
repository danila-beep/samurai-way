{"ast":null,"code":"import React from 'react';\nvar Loader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var loadAnimation = props.loadAnimation,\n      loading = props.loading,\n      locale = props.locale,\n      addPrefix = props.addPrefix,\n      renderLoading = props.renderLoading;\n  var loadingElement = /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: addPrefix('loader-wrapper')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: addPrefix('loader')\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: addPrefix('loader-icon')\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: addPrefix('loader-text')\n  }, locale === null || locale === void 0 ? void 0 : locale.loading))); // Custom render a loader\n\n  if (typeof renderLoading === 'function') {\n    return loading ? renderLoading(loadingElement) : null;\n  } // If loadAnimation is true , it returns the DOM element,\n  // and controls whether the loader is displayed through CSS to achieve animation effect.\n\n\n  return loading || loadAnimation ? loadingElement : null;\n});\nLoader.displayName = 'Table.Loader';\nexport default Loader;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/rsuite-table/es/Loader.js"],"names":["React","Loader","forwardRef","props","ref","loadAnimation","loading","locale","addPrefix","renderLoading","loadingElement","createElement","className","displayName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,MAAM,GAAG,aAAaD,KAAK,CAACE,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC/D,MAAIC,aAAa,GAAGF,KAAK,CAACE,aAA1B;AAAA,MACIC,OAAO,GAAGH,KAAK,CAACG,OADpB;AAAA,MAEIC,MAAM,GAAGJ,KAAK,CAACI,MAFnB;AAAA,MAGIC,SAAS,GAAGL,KAAK,CAACK,SAHtB;AAAA,MAIIC,aAAa,GAAGN,KAAK,CAACM,aAJ1B;AAKA,MAAIC,cAAc,GAAG,aAAaV,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AAC3DP,IAAAA,GAAG,EAAEA,GADsD;AAE3DQ,IAAAA,SAAS,EAAEJ,SAAS,CAAC,gBAAD;AAFuC,GAA3B,EAG/B,aAAaR,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AACzCC,IAAAA,SAAS,EAAEJ,SAAS,CAAC,QAAD;AADqB,GAA3B,EAEb,aAAaR,KAAK,CAACW,aAAN,CAAoB,GAApB,EAAyB;AACvCC,IAAAA,SAAS,EAAEJ,SAAS,CAAC,aAAD;AADmB,GAAzB,CAFA,EAIZ,aAAaR,KAAK,CAACW,aAAN,CAAoB,MAApB,EAA4B;AAC3CC,IAAAA,SAAS,EAAEJ,SAAS,CAAC,aAAD;AADuB,GAA5B,EAEdD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACD,OAFzC,CAJD,CAHkB,CAAlC,CAN+D,CAeO;;AAEtE,MAAI,OAAOG,aAAP,KAAyB,UAA7B,EAAyC;AACvC,WAAOH,OAAO,GAAGG,aAAa,CAACC,cAAD,CAAhB,GAAmC,IAAjD;AACD,GAnB8D,CAmB7D;AACF;;;AAGA,SAAOJ,OAAO,IAAID,aAAX,GAA2BK,cAA3B,GAA4C,IAAnD;AACD,CAxByB,CAA1B;AAyBAT,MAAM,CAACY,WAAP,GAAqB,cAArB;AACA,eAAeZ,MAAf","sourcesContent":["import React from 'react';\nvar Loader = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var loadAnimation = props.loadAnimation,\n      loading = props.loading,\n      locale = props.locale,\n      addPrefix = props.addPrefix,\n      renderLoading = props.renderLoading;\n  var loadingElement = /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: addPrefix('loader-wrapper')\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: addPrefix('loader')\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: addPrefix('loader-icon')\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: addPrefix('loader-text')\n  }, locale === null || locale === void 0 ? void 0 : locale.loading))); // Custom render a loader\n\n  if (typeof renderLoading === 'function') {\n    return loading ? renderLoading(loadingElement) : null;\n  } // If loadAnimation is true , it returns the DOM element,\n  // and controls whether the loader is displayed through CSS to achieve animation effect.\n\n\n  return loading || loadAnimation ? loadingElement : null;\n});\nLoader.displayName = 'Table.Loader';\nexport default Loader;"]},"metadata":{},"sourceType":"module"}