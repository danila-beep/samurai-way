{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/MainContent/Profile/ProfilePage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport Post from \"./Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TextArea from \"../../../shared/TextArea\";\nimport { Button } from \"../../../shared/Button\";\nimport { addPostAC } from \"../../../store/reducers/profileReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = props => {\n  _s();\n\n  const profilePageData = useSelector(state => state.profilePage);\n  const dispatch = useDispatch();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n\n  const addPost = () => {\n    const action = addPostAC(\"New Post\");\n    dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        value: textAreaValue,\n        onChange: e => setTextAreaValue(e.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addPost,\n      children: \"Add New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), profilePageData.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        postText: post.postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(ProfilePage, \"799PSM/+LXdm+tpF2Wl6hPcpG+I=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/MainContent/Profile/ProfilePage.tsx"],"names":["React","useState","ProfileInfo","Post","useDispatch","useSelector","TextArea","Button","addPostAC","ProfilePage","props","profilePageData","state","profilePage","dispatch","textAreaValue","setTextAreaValue","addPost","action","e","currentTarget","value","posts","map","post","postText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,SAAT,QAA0B,wCAA1B;;;;AAIA,MAAMC,WAAiC,GAAIC,KAAD,IAAW;AAAA;;AACnD,QAAMC,eAAe,GAAGN,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACC,WAA7B,CAAnC;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAS,EAAT,CAAlD;;AAEA,QAAMgB,OAAO,GAAG,MAAM;AACpB,UAAMC,MAAM,GAAGV,SAAS,CAAC,UAAD,CAAxB;AACAM,IAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEH,aAAjB;AAAgC,QAAA,QAAQ,EAAEI,CAAC,IAAIH,gBAAgB,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGN,eAAe,CAACW,KAAhB,CAAsBC,GAAtB,CAA2BC,IAAD,IAAU;AACnC,0BAAO,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA,IAAI,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CAPH;AAAA,kBADF;AAaD,CAxBD;;GAAMhB,W;UACoBJ,W,EACPD,W;;;KAFbK,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React, { FC, useState } from \"react\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport NewPostTextArea from \"../../../shared/TextArea\";\nimport Post from \"./Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../store/store\";\nimport TextArea from \"../../../shared/TextArea\";\nimport { Button } from \"../../../shared/Button\";\nimport { addPostAC } from \"../../../store/reducers/profileReducer\";\n\ntype ProfilePageProps = {};\n\nconst ProfilePage: FC<ProfilePageProps> = (props) => {\n  const profilePageData = useSelector((state: RootState) => state.profilePage);\n  const dispatch = useDispatch();\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addPost = () => {\n    const action = addPostAC(\"New Post\");\n    dispatch(action);\n  };\n\n  return (\n    <>\n      <ProfileInfo />\n      <h2>My Posts</h2>\n      <div>\n        <TextArea value={textAreaValue} onChange={e => setTextAreaValue(e.currentTarget.value)}/>\n      </div>\n      <Button onClick={addPost}>Add New Post</Button>\n      {profilePageData.posts.map((post) => {\n        return <Post postText={post.postText} />;\n      })}\n    </>\n  );\n};\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"module"}