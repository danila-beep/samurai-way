{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport isNil from 'lodash/isNil';\nimport AngleLeft from '@rsuite/icons/legacy/AngleLeft';\nimport AngleRight from '@rsuite/icons/legacy/AngleRight';\nimport { mergeRefs, useClassNames, useCustom } from '../utils';\nimport { NavbarContext } from '.';\nimport Disclosure from '../Disclosure';\nimport NavContext from '../Nav/NavContext';\nimport deprecatePropType from '../utils/deprecatePropType';\n/**\n * @private this component is not supposed to be used directly\n *          Instead it's rendered by a <Nav.Menu> within a <Navbar>\n *\n * <Navbar>\n *   <Nav>\n *     <Nav.Menu>\n *       <Nav.Menu title=\"menu\"> -> This submenu will render <NavbarDropdownMenu> component\n *       </Nav.Menu>\n *     </Nav.Menu>\n *   </Nav>\n * </Navbar>\n */\n\nvar NavbarDropdownMenu = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var navbar = useContext(NavbarContext);\n  var nav = useContext(NavContext);\n\n  if (!navbar || !nav) {\n    throw new Error('<Navbar.Dropdown.Menu> must be rendered within a <Nav> within a <Navbar> component.');\n  }\n\n  var _onToggle = props.onToggle,\n      eventKey = props.eventKey,\n      title = props.title,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'dropdown-menu' : _props$classPrefix,\n      children = props.children,\n      _props$openDirection = props.openDirection,\n      openDirection = _props$openDirection === void 0 ? 'end' : _props$openDirection,\n      rest = _objectWithoutPropertiesLoose(props, [\"onToggle\", \"eventKey\", \"title\", \"classPrefix\", \"children\", \"openDirection\"]);\n\n  var _useCustom = useCustom('DropdownMenu'),\n      rtl = _useCustom.rtl;\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix;\n\n  var _useClassNames2 = useClassNames('dropdown-menu'),\n      withMenuClassPrefix = _useClassNames2.withClassPrefix,\n      mergeMenuClassName = _useClassNames2.merge;\n\n  var _useClassNames3 = useClassNames('dropdown-item'),\n      mergeItemClassNames = _useClassNames3.merge,\n      withItemClassPrefix = _useClassNames3.withClassPrefix,\n      prefixItemClassName = _useClassNames3.prefix; // Parent menu exists. This is a submenu.\n  // Should render a `menuitem` that controls this submenu.\n\n\n  var _omit = omit(rest, ['trigger']),\n      icon = _omit.icon,\n      className = _omit.className,\n      disabled = _omit.disabled,\n      menuProps = _objectWithoutPropertiesLoose(_omit, [\"icon\", \"className\", \"disabled\"]);\n\n  var Icon = rtl ? AngleLeft : AngleRight;\n  return /*#__PURE__*/React.createElement(Disclosure, {\n    hideOnClickOutside: true,\n    trigger: ['click', 'hover'],\n    onToggle: function onToggle(open, event) {\n      return _onToggle === null || _onToggle === void 0 ? void 0 : _onToggle(open, undefined, event);\n    }\n  }, function (_ref, containerRef) {\n    var open = _ref.open,\n        props = _objectWithoutPropertiesLoose(_ref, [\"open\"]);\n\n    var classes = mergeItemClassNames(className, withItemClassPrefix({\n      disabled: disabled,\n      open: open,\n      submenu: true\n    }));\n    return /*#__PURE__*/React.createElement(\"li\", _extends({\n      ref: mergeRefs(ref, containerRef),\n      className: classes\n    }, props), /*#__PURE__*/React.createElement(Disclosure.Button, null, function (_ref2, buttonRef) {\n      var open = _ref2.open,\n          buttonProps = _objectWithoutPropertiesLoose(_ref2, [\"open\"]);\n\n      var classes = mergeItemClassNames(className, prefixItemClassName(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"toggle\"]))), withItemClassPrefix({\n        'with-icon': icon,\n        open: open,\n        disabled: disabled\n      }));\n      var dataAttributes = {\n        'data-event-key': eventKey\n      };\n\n      if (!isNil(eventKey) && typeof eventKey !== 'string') {\n        dataAttributes['data-event-key-type'] = typeof eventKey;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", _extends({\n        ref: mergeRefs(buttonRef, buttonRef),\n        className: classes\n      }, dataAttributes, buttonProps), icon && /*#__PURE__*/React.cloneElement(icon, {\n        className: prefix('menu-icon')\n      }), title, /*#__PURE__*/React.createElement(Icon, {\n        className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"toggle-icon\"])))\n      }));\n    }), /*#__PURE__*/React.createElement(Disclosure.Content, null, function (_ref3, elementRef) {\n      var open = _ref3.open;\n      var menuClassName = mergeMenuClassName(className, withMenuClassPrefix());\n      return /*#__PURE__*/React.createElement(\"ul\", _extends({\n        ref: elementRef,\n        className: menuClassName,\n        hidden: !open,\n        \"data-direction\": openDirection\n      }, menuProps), children);\n    }));\n  });\n});\nNavbarDropdownMenu.displayName = 'Nav.Dropdown.Menu';\nNavbarDropdownMenu.propTypes = {\n  active: PropTypes.bool,\n  activeKey: PropTypes.any,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  icon: PropTypes.any,\n  classPrefix: PropTypes.string,\n  pullLeft: deprecatePropType(PropTypes.bool, 'Use openDirection=\"start\" instead.'),\n  openDirection: PropTypes.oneOf(['start', 'end']),\n  title: PropTypes.node,\n  open: PropTypes.bool,\n  eventKey: PropTypes.any,\n  expanded: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  onToggle: PropTypes.func\n};\nexport default NavbarDropdownMenu;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/rsuite/esm/Navbar/NavbarDropdownMenu.js"],"names":["_extends","_taggedTemplateLiteralLoose","_objectWithoutPropertiesLoose","_templateObject","_templateObject2","React","useContext","PropTypes","omit","isNil","AngleLeft","AngleRight","mergeRefs","useClassNames","useCustom","NavbarContext","Disclosure","NavContext","deprecatePropType","NavbarDropdownMenu","forwardRef","props","ref","navbar","nav","Error","_onToggle","onToggle","eventKey","title","_props$classPrefix","classPrefix","children","_props$openDirection","openDirection","rest","_useCustom","rtl","_useClassNames","prefix","_useClassNames2","withMenuClassPrefix","withClassPrefix","mergeMenuClassName","merge","_useClassNames3","mergeItemClassNames","withItemClassPrefix","prefixItemClassName","_omit","icon","className","disabled","menuProps","Icon","createElement","hideOnClickOutside","trigger","open","event","undefined","_ref","containerRef","classes","submenu","Button","_ref2","buttonRef","buttonProps","dataAttributes","cloneElement","Content","_ref3","elementRef","menuClassName","hidden","displayName","propTypes","active","bool","activeKey","any","string","node","pullLeft","oneOf","expanded","collapsible","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport isNil from 'lodash/isNil';\nimport AngleLeft from '@rsuite/icons/legacy/AngleLeft';\nimport AngleRight from '@rsuite/icons/legacy/AngleRight';\nimport { mergeRefs, useClassNames, useCustom } from '../utils';\nimport { NavbarContext } from '.';\nimport Disclosure from '../Disclosure';\nimport NavContext from '../Nav/NavContext';\nimport deprecatePropType from '../utils/deprecatePropType';\n\n/**\n * @private this component is not supposed to be used directly\n *          Instead it's rendered by a <Nav.Menu> within a <Navbar>\n *\n * <Navbar>\n *   <Nav>\n *     <Nav.Menu>\n *       <Nav.Menu title=\"menu\"> -> This submenu will render <NavbarDropdownMenu> component\n *       </Nav.Menu>\n *     </Nav.Menu>\n *   </Nav>\n * </Navbar>\n */\nvar NavbarDropdownMenu = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var navbar = useContext(NavbarContext);\n  var nav = useContext(NavContext);\n\n  if (!navbar || !nav) {\n    throw new Error('<Navbar.Dropdown.Menu> must be rendered within a <Nav> within a <Navbar> component.');\n  }\n\n  var _onToggle = props.onToggle,\n      eventKey = props.eventKey,\n      title = props.title,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'dropdown-menu' : _props$classPrefix,\n      children = props.children,\n      _props$openDirection = props.openDirection,\n      openDirection = _props$openDirection === void 0 ? 'end' : _props$openDirection,\n      rest = _objectWithoutPropertiesLoose(props, [\"onToggle\", \"eventKey\", \"title\", \"classPrefix\", \"children\", \"openDirection\"]);\n\n  var _useCustom = useCustom('DropdownMenu'),\n      rtl = _useCustom.rtl;\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix;\n\n  var _useClassNames2 = useClassNames('dropdown-menu'),\n      withMenuClassPrefix = _useClassNames2.withClassPrefix,\n      mergeMenuClassName = _useClassNames2.merge;\n\n  var _useClassNames3 = useClassNames('dropdown-item'),\n      mergeItemClassNames = _useClassNames3.merge,\n      withItemClassPrefix = _useClassNames3.withClassPrefix,\n      prefixItemClassName = _useClassNames3.prefix; // Parent menu exists. This is a submenu.\n  // Should render a `menuitem` that controls this submenu.\n\n\n  var _omit = omit(rest, ['trigger']),\n      icon = _omit.icon,\n      className = _omit.className,\n      disabled = _omit.disabled,\n      menuProps = _objectWithoutPropertiesLoose(_omit, [\"icon\", \"className\", \"disabled\"]);\n\n  var Icon = rtl ? AngleLeft : AngleRight;\n  return /*#__PURE__*/React.createElement(Disclosure, {\n    hideOnClickOutside: true,\n    trigger: ['click', 'hover'],\n    onToggle: function onToggle(open, event) {\n      return _onToggle === null || _onToggle === void 0 ? void 0 : _onToggle(open, undefined, event);\n    }\n  }, function (_ref, containerRef) {\n    var open = _ref.open,\n        props = _objectWithoutPropertiesLoose(_ref, [\"open\"]);\n\n    var classes = mergeItemClassNames(className, withItemClassPrefix({\n      disabled: disabled,\n      open: open,\n      submenu: true\n    }));\n    return /*#__PURE__*/React.createElement(\"li\", _extends({\n      ref: mergeRefs(ref, containerRef),\n      className: classes\n    }, props), /*#__PURE__*/React.createElement(Disclosure.Button, null, function (_ref2, buttonRef) {\n      var open = _ref2.open,\n          buttonProps = _objectWithoutPropertiesLoose(_ref2, [\"open\"]);\n\n      var classes = mergeItemClassNames(className, prefixItemClassName(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"toggle\"]))), withItemClassPrefix({\n        'with-icon': icon,\n        open: open,\n        disabled: disabled\n      }));\n      var dataAttributes = {\n        'data-event-key': eventKey\n      };\n\n      if (!isNil(eventKey) && typeof eventKey !== 'string') {\n        dataAttributes['data-event-key-type'] = typeof eventKey;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", _extends({\n        ref: mergeRefs(buttonRef, buttonRef),\n        className: classes\n      }, dataAttributes, buttonProps), icon && /*#__PURE__*/React.cloneElement(icon, {\n        className: prefix('menu-icon')\n      }), title, /*#__PURE__*/React.createElement(Icon, {\n        className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"toggle-icon\"])))\n      }));\n    }), /*#__PURE__*/React.createElement(Disclosure.Content, null, function (_ref3, elementRef) {\n      var open = _ref3.open;\n      var menuClassName = mergeMenuClassName(className, withMenuClassPrefix());\n      return /*#__PURE__*/React.createElement(\"ul\", _extends({\n        ref: elementRef,\n        className: menuClassName,\n        hidden: !open,\n        \"data-direction\": openDirection\n      }, menuProps), children);\n    }));\n  });\n});\nNavbarDropdownMenu.displayName = 'Nav.Dropdown.Menu';\nNavbarDropdownMenu.propTypes = {\n  active: PropTypes.bool,\n  activeKey: PropTypes.any,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  icon: PropTypes.any,\n  classPrefix: PropTypes.string,\n  pullLeft: deprecatePropType(PropTypes.bool, 'Use openDirection=\"start\" instead.'),\n  openDirection: PropTypes.oneOf(['start', 'end']),\n  title: PropTypes.node,\n  open: PropTypes.bool,\n  eventKey: PropTypes.any,\n  expanded: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  onToggle: PropTypes.func\n};\nexport default NavbarDropdownMenu;"]},"metadata":{},"sourceType":"module"}