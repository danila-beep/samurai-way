{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/DialogsPage/DialogsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport DialogItem from \"../../components/DialogItem\";\nimport Message from \"../../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMessageAC } from \"../../store/reducers/dialogsReducer\";\nimport TextArea from \"../../shared/TextArea\";\nimport { Button } from \"../../shared/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DialogsPage = props => {\n  _s();\n\n  const dialogsState = useSelector(state => state.dialogsPage);\n  const dispatch = useDispatch();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n\n  const addMessage = () => {\n    const action = addMessageAC(textAreaValue);\n    dispatch(action);\n    setTextAreaValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(DialogsPageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(DialogsListWrapper, {\n      children: /*#__PURE__*/_jsxDEV(DialogsList, {\n        children: dialogsState.dialogs.map(d => {\n          return /*#__PURE__*/_jsxDEV(DialogItem, {\n            id: d.id,\n            userName: d.userName\n          }, d.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessengerWrapper, {\n      children: [dialogsState.messages.map((m, index) => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          messageText: m.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(TextArea, {\n        value: textAreaValue,\n        onChange: e => setTextAreaValue(e.currentTarget.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addMessage,\n        children: \"Add new Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DialogsPage, \"eu/Knd/KsOOnmKHgmM9M0U0m4/g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DialogsPage;\nconst DialogsPageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  gap: 5rem;\n`;\n_c2 = DialogsPageWrapper;\nconst DialogsListWrapper = styled.div``;\n_c3 = DialogsListWrapper;\nconst DialogsList = styled.div``;\n_c4 = DialogsList;\nconst MessengerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c5 = MessengerWrapper;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DialogsPage\");\n$RefreshReg$(_c2, \"DialogsPageWrapper\");\n$RefreshReg$(_c3, \"DialogsListWrapper\");\n$RefreshReg$(_c4, \"DialogsList\");\n$RefreshReg$(_c5, \"MessengerWrapper\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/DialogsPage/DialogsPage.tsx"],"names":["React","useState","styled","DialogItem","Message","useDispatch","useSelector","addMessageAC","TextArea","Button","DialogsPage","props","dialogsState","state","dialogsPage","dispatch","textAreaValue","setTextAreaValue","addMessage","action","dialogs","map","d","id","userName","messages","m","index","text","e","currentTarget","value","DialogsPageWrapper","div","DialogsListWrapper","DialogsList","MessengerWrapper"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAIEC,YAJF,QAKO,qCALP;AAMA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAIA,OAAO,MAAMC,WAAiC,GAAIC,KAAD,IAAW;AAAA;;AAC1D,QAAMC,YAAY,GAAGN,WAAW,CAC7BO,KAAD,IAAWA,KAAK,CAACC,WADa,CAAhC;AAGA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAS,EAAT,CAAlD;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAGZ,YAAY,CAACS,aAAD,CAA3B;AACAD,IAAAA,QAAQ,CAACI,MAAD,CAAR;AACAF,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAJD;;AAMA,sBACE,QAAC,kBAAD;AAAA,4BACE,QAAC,kBAAD;AAAA,6BACE,QAAC,WAAD;AAAA,kBACGL,YAAY,CAACQ,OAAb,CAAqBC,GAArB,CAA0BC,CAAD,IAAmB;AAC3C,8BAAO,QAAC,UAAD;AAAuB,YAAA,EAAE,EAAEA,CAAC,CAACC,EAA7B;AAAiC,YAAA,QAAQ,EAAED,CAAC,CAACE;AAA7C,aAAiBF,CAAC,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,gBAAD;AAAA,iBACGX,YAAY,CAACa,QAAb,CAAsBJ,GAAtB,CAA0B,CAACK,CAAD,EAAiBC,KAAjB,KAAmC;AAC5D,4BAAO,QAAC,OAAD;AAAqB,UAAA,WAAW,EAAED,CAAC,CAACE;AAApC,WAAcD,KAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA,CADH,eAIE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEX,aADT;AAEE,QAAA,QAAQ,EAAGa,CAAD,IAAOZ,gBAAgB,CAACY,CAAC,CAACC,aAAF,CAAgBC,KAAjB;AAFnC;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEb,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAnCM;;GAAMR,W;UACUJ,W,EAGJD,W;;;KAJNK,W;AAqCb,MAAMsB,kBAAkB,GAAG9B,MAAM,CAAC+B,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,kB;AAQN,MAAME,kBAAkB,GAAGhC,MAAM,CAAC+B,GAAI,EAAtC;MAAMC,kB;AACN,MAAMC,WAAW,GAAGjC,MAAM,CAAC+B,GAAI,EAA/B;MAAME,W;AAEN,MAAMC,gBAAgB,GAAGlC,MAAM,CAAC+B,GAAI;AACpC;AACA;AACA,CAHA;MAAMG,gB","sourcesContent":["import React, { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport DialogItem from \"../../components/DialogItem\";\nimport Message from \"../../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  DialogPageType,\n  DialogType,\n  MessageType,\n  addMessageAC,\n} from \"../../store/reducers/dialogsReducer\";\nimport TextArea from \"../../shared/TextArea\";\nimport { Button } from \"../../shared/Button\";\n\ntype DialogsPageProps = {};\n\nexport const DialogsPage: FC<DialogsPageProps> = (props) => {\n  const dialogsState = useSelector<RootState, DialogPageType>(\n    (state) => state.dialogsPage\n  );\n  const dispatch = useDispatch();\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addMessage = () => {\n    const action = addMessageAC(textAreaValue);\n    dispatch(action);\n    setTextAreaValue(\"\");\n  };\n\n  return (\n    <DialogsPageWrapper>\n      <DialogsListWrapper>\n        <DialogsList>\n          {dialogsState.dialogs.map((d: DialogType) => {\n            return <DialogItem key={d.id} id={d.id} userName={d.userName} />;\n          })}\n        </DialogsList>\n      </DialogsListWrapper>\n      <MessengerWrapper>\n        {dialogsState.messages.map((m: MessageType, index: number) => {\n          return <Message key={index} messageText={m.text} />;\n        })}\n        <TextArea\n          value={textAreaValue}\n          onChange={(e) => setTextAreaValue(e.currentTarget.value)}\n        />\n        <Button onClick={addMessage}>Add new Message</Button>\n      </MessengerWrapper>\n    </DialogsPageWrapper>\n  );\n};\n\nconst DialogsPageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  gap: 5rem;\n`;\n\nconst DialogsListWrapper = styled.div``;\nconst DialogsList = styled.div``;\n\nconst MessengerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n"]},"metadata":{},"sourceType":"module"}