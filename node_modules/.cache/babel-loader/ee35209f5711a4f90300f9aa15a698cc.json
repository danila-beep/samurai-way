{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport s from \"./feedPage.module.css\";\nimport Post from \"../../components/Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"../../shared/Button\";\nimport { addPostAC } from \"../../store/reducers/profileReducer\";\nimport { UilPen, UilUser } from \"@iconscout/react-unicons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedPage = props => {\n  _s();\n\n  const profilePageData = useSelector(state => state.profilePage);\n  const dispatch = useDispatch();\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n\n  const addPost = () => {\n    const action = addPostAC(textAreaValue);\n    dispatch(action);\n    setTextAreaValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.feedPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.addPostFormWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.createPostButton,\n        children: [/*#__PURE__*/_jsxDEV(UilPen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.createPostTextArea,\n        children: [/*#__PURE__*/_jsxDEV(UilUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"\",\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addPost,\n      children: \"Add New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), profilePageData.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        postText: post.postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedPage, \"799PSM/+LXdm+tpF2Wl6hPcpG+I=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FeedPage;\nexport default FeedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx"],"names":["React","useState","s","Post","useDispatch","useSelector","Button","addPostAC","UilPen","UilUser","FeedPage","props","profilePageData","state","profilePage","dispatch","textAreaValue","setTextAreaValue","addPost","action","feedPage","addPostFormWrapper","createPostButton","createPostTextArea","posts","map","post","postText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,0BAAhC;;;AAIA,MAAMC,QAA2B,GAAIC,KAAD,IAAW;AAAA;;AAC7C,QAAMC,eAAe,GAAGP,WAAW,CAAEQ,KAAD,IAAsBA,KAAK,CAACC,WAA7B,CAAnC;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAS,EAAT,CAAlD;;AAEA,QAAMiB,OAAO,GAAG,MAAM;AACpB,UAAMC,MAAM,GAAGZ,SAAS,CAACS,aAAD,CAAxB;AACAD,IAAAA,QAAQ,CAACI,MAAD,CAAR;AACAF,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEf,CAAC,CAACkB,QAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAElB,CAAC,CAACmB,kBAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEnB,CAAC,CAACoB,gBAAlB;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEpB,CAAC,CAACqB,kBAAlB;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAU,UAAA,IAAI,EAAC,EAAf;AAAkB,UAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAYGN,eAAe,CAACY,KAAhB,CAAsBC,GAAtB,CAA2BC,IAAD,IAAU;AACnC,0BAAO,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA,IAAI,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA9BD;;GAAMjB,Q;UACoBL,W,EACPD,W;;;KAFbM,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { FC, useState } from \"react\"\nimport s from \"./feedPage.module.css\"\nimport Post from \"../../components/Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport TextArea from \"../../shared/TextArea\";\nimport { Button } from \"../../shared/Button\";\nimport { addPostAC } from \"../../store/reducers/profileReducer\";\nimport { UilPen, UilUser } from \"@iconscout/react-unicons\";\n\ntype FeedPageProps = {};\n\nconst FeedPage: FC<FeedPageProps> = (props) => {\n  const profilePageData = useSelector((state: RootState) => state.profilePage);\n  const dispatch = useDispatch();\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addPost = () => {\n    const action = addPostAC(textAreaValue);\n    dispatch(action);\n    setTextAreaValue(\"\");\n  };\n\n  return (\n    <div className={s.feedPage}>\n      <div className={s.addPostFormWrapper}>\n        <div className={s.createPostButton}>\n          <UilPen />\n          <p>Create Post</p>\n        </div>\n        <div className={s.createPostTextArea}>\n          <UilUser />\n          <textarea name=\"\" id=\"\" />\n        </div>\n      </div>\n      <Button onClick={addPost}>Add New Post</Button>\n      {profilePageData.posts.map((post) => {\n        return <Post postText={post.postText} />;\n      })}\n    </div>\n  );\n};\n\nexport default FeedPage;\n"]},"metadata":{},"sourceType":"module"}