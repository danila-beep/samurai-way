{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styles from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currentPageChengerAC, followUserTC, getUsersTC, nextPagesPaginationAC, previousPagesPaginationAC, unfollowUserTC } from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport Preloader from \"../../shared/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersPage = () => {\n  _s();\n\n  //getting data from redux\n  const usersPageData = useSelector(state => state.usersPage);\n  const dispatch = useDispatch(); //API \"get\" call\n\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]); //pagination logic\n\n  const pagesCount = Math.ceil(usersPageData.totalUsersCount / usersPageData.pageSize);\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n\n  const previousPages = () => {\n    dispatch(previousPagesPaginationAC(pagesCount));\n  }; //follow / unfollow\n\n\n  const followButtonHandler = (isFollowed, userId) => {\n    if (isFollowed) {\n      dispatch(unfollowUserTC(userId));\n    } else {\n      dispatch(followUserTC(userId));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.usersPageWrapper,\n    children: usersPageData.isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.preloaderContainer,\n      children: /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.usersList,\n        children: usersPageData.users.items.map(user => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.userCardHeader,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNJywAxz6Z9hzwF0VZ3FdVkZ9o1I1_7wN72w&usqp=CAU\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.userCardUserInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.photos.small ? user.photos.small : \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\",\n                width: 100,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.userCardFollowButtons,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => followButtonHandler(user.followed, user.id),\n                children: user.followed ? \"Unfollow\" : \"Follow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagesWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.pagesListChanger,\n          onClick: previousPages,\n          children: /*#__PURE__*/_jsxDEV(UilArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), usersPageData.paginationCount.map((p, index) => {\n          return /*#__PURE__*/_jsxDEV(NavLink, {\n            to: `friends`,\n            className: styles.pageItem,\n            onClick: () => {\n              dispatch(currentPageChengerAC(p));\n            },\n            children: p\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: nextPages,\n          children: /*#__PURE__*/_jsxDEV(UilArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersPage, \"Gk/M3zRD8a3uFewu5WqVluEnTh4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx"],"names":["React","useEffect","styles","useDispatch","useSelector","currentPageChengerAC","followUserTC","getUsersTC","nextPagesPaginationAC","previousPagesPaginationAC","unfollowUserTC","Button","UilArrowLeft","UilArrowRight","NavLink","Preloader","UsersPage","usersPageData","state","usersPage","dispatch","currentPage","pageSize","pagesCount","Math","ceil","totalUsersCount","nextPages","previousPages","followButtonHandler","isFollowed","userId","usersPageWrapper","isFetching","preloaderContainer","usersList","users","items","map","user","userCard","userCardHeader","userCardUserInfo","photos","small","name","userCardFollowButtons","followed","id","pagesWrapper","pagesListChanger","paginationCount","p","index","pageItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UserPageType,\n  currentPageChengerAC,\n  followUserAC,\n  followUserTC,\n  getUsersTC,\n  nextPagesPaginationAC,\n  previousPagesPaginationAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n  unfollowUserTC,\n} from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSessionStorage } from \"usehooks-ts\";\nimport Preloader from \"../../shared/Preloader\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const dispatch = useDispatch();\n\n  //API \"get\" call\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]);\n\n  //pagination logic\n\n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n  const previousPages = () => {\n    dispatch(previousPagesPaginationAC(pagesCount));\n  };\n\n  //follow / unfollow\n\n  const followButtonHandler = (isFollowed: boolean, userId: number) => {\n    if (isFollowed) {\n      dispatch(unfollowUserTC(userId));\n    } else {\n      dispatch(followUserTC(userId));\n    }\n  };\n\n  return (\n    <div className={styles.usersPageWrapper}>\n      {usersPageData.isFetching ? (\n        <div className={styles.preloaderContainer}>\n          <Preloader />\n        </div>\n      ) : (\n        <div>\n          <div className={styles.usersList}>\n            {usersPageData.users.items.map((user) => {\n              return (\n                <div key={user.id} className={styles.userCard}>\n                  <div className={styles.userCardHeader}>\n                    <img\n                      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNJywAxz6Z9hzwF0VZ3FdVkZ9o1I1_7wN72w&usqp=CAU\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className={styles.userCardUserInfo}>\n                    <img\n                      src={\n                        user.photos.small\n                          ? user.photos.small\n                          : \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\"\n                      }\n                      width={100}\n                      alt=\"\"\n                    />\n                    <span>{user.name}</span>\n                  </div>\n                  <div className={styles.userCardFollowButtons}>\n                    <Button\n                      onClick={() =>\n                        followButtonHandler(user.followed, user.id)\n                      }\n                    >\n                      {user.followed ? \"Unfollow\" : \"Follow\"}\n                    </Button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div className={styles.pagesWrapper}>\n            <span className={styles.pagesListChanger} onClick={previousPages}>\n              <UilArrowLeft />\n            </span>\n            {usersPageData.paginationCount.map((p, index) => {\n              return (\n                <NavLink\n                  to={`friends`}\n                  className={styles.pageItem}\n                  key={index}\n                  onClick={() => {\n                    dispatch(currentPageChengerAC(p));\n                  }}\n                >\n                  {p}\n                </NavLink>\n              );\n            })}\n            <span onClick={nextPages}>\n              <UilArrowRight />\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}