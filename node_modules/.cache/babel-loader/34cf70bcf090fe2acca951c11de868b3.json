{"ast":null,"code":"import { socialMediaAPI } from \"../../api/socialMediaAPI\";\nconst initialState = {};\nexport const appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"appData/setLoggedUserInfo\":\n      return { ...state,\n        ...action.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const setLoggedUserDataAC = data => {\n  return {\n    type: \"appData/setLoggedUserInfo\",\n    data\n  };\n};\nexport const getLoggedUserDataTC = userId => dispatch => {\n  socialMediaAPI.getUserProfile(userId).then(res => {\n    dispatch(setLoggedUserDataAC(res.data));\n  });\n};","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/appReducer.ts"],"names":["socialMediaAPI","initialState","appReducer","state","action","type","data","setLoggedUserDataAC","getLoggedUserDataTC","userId","dispatch","getUserProfile","then","res"],"mappings":"AAEA,SAASA,cAAT,QAA+B,0BAA/B;AAEA,MAAMC,YAA6B,GAAG,EAAtC;AAEA,OAAO,MAAMC,UAAU,GAAG,YAA8C;AAAA,MAA7CC,KAA6C,uEAArCF,YAAqC;AAAA,MAAvBG,MAAuB;;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,2BAAL;AACE,aAAO,EACL,GAAGF,KADE;AAEL,WAAGC,MAAM,CAACE;AAFL,OAAP;;AAKF;AACE,aAAOH,KAAP;AARJ;AAUD,CAXM;AAaP,OAAO,MAAMI,mBAAmB,GAAID,IAAD,IAA2B;AAC5D,SAAO;AAAED,IAAAA,IAAI,EAAE,2BAAR;AAAqCC,IAAAA;AAArC,GAAP;AACD,CAFM;AAIP,OAAO,MAAME,mBAAmB,GAAIC,MAAD,IAAqBC,QAAD,IAAwB;AAE7EV,EAAAA,cAAc,CAACW,cAAf,CAA8BF,MAA9B,EAAsCG,IAAtC,CAA4CC,GAAD,IAAS;AAClDH,IAAAA,QAAQ,CAACH,mBAAmB,CAACM,GAAG,CAACP,IAAL,CAApB,CAAR;AACD,GAFD;AAGD,CALM","sourcesContent":["import { Dispatch } from \"redux\";\nimport { ProfileInfoType } from \"./profileReducer\";\nimport { socialMediaAPI } from \"../../api/socialMediaAPI\";\n\nconst initialState: ProfileInfoType = {};\n\nexport const appReducer = (state = initialState, action: ActionType) => {\n  switch (action.type) {\n    case \"appData/setLoggedUserInfo\":\n      return {\n        ...state,\n        ...action.data,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setLoggedUserDataAC = (data: ProfileInfoType) => {\n  return { type: \"appData/setLoggedUserInfo\", data } as const;\n};\n\nexport const getLoggedUserDataTC = (userId: number) => (dispatch: Dispatch) => {\n    \n  socialMediaAPI.getUserProfile(userId).then((res) => {\n    dispatch(setLoggedUserDataAC(res.data));\n  });\n};\n\nexport type SetLoggedUserDataActionType = ReturnType<\n  typeof setLoggedUserDataAC\n>;\n\ntype ActionType = SetLoggedUserDataActionType;\n"]},"metadata":{},"sourceType":"module"}