{"ast":null,"code":"export default {\n  mixed: {\n    isRequired: '${name} is a required field',\n    isRequiredOrEmpty: '${name} is a required field'\n  },\n  array: {\n    type: '${name} must be an array',\n    rangeLength: '${name} must contain ${minLength} to ${maxLength} items',\n    minLength: '${name} field must have at least ${minLength} items',\n    maxLength: '${name} field must have less than or equal to ${maxLength} items',\n    unrepeatable: '${name} must have non-repeatable items'\n  },\n  boolean: {\n    type: '${name} must be a boolean'\n  },\n  date: {\n    type: '${name} must be a date',\n    min: '${name} field must be later than ${min}',\n    max: '${name} field must be at earlier than ${max}',\n    range: '${name} field must be between ${min} and ${max}'\n  },\n  number: {\n    type: '${name} must be a number',\n    isInteger: '${name} must be an integer',\n    pattern: '${name} is invalid',\n    isOneOf: '${name} must be one of the following values: ${values}',\n    range: '${name} field must be between ${min} and ${max}',\n    min: '${name} must be greater than or equal to ${min}',\n    max: '${name} must be less than or equal to ${max}'\n  },\n  string: {\n    type: '${name} must be a string',\n    containsLetter: '${name} field must contain letters',\n    containsUppercaseLetter: '${name} must be a upper case string',\n    containsLowercaseLetter: '${name} must be a lowercase string',\n    containsLetterOnly: '${name} must all be letters',\n    containsNumber: '${name} field must contain numbers',\n    isOneOf: '${name} must be one of the following values: ${values}',\n    isEmail: '${name} must be a valid email',\n    isURL: '${name} must be a valid URL',\n    isHex: '${name} must be a valid hexadecimal',\n    pattern: '${name} is invalid',\n    rangeLength: '${name} must contain ${minLength} to ${maxLength} characters',\n    minLength: '${name} must be at least ${minLength} characters',\n    maxLength: '${name} must be at most ${maxLength} characters'\n  },\n  object: {\n    type: '${name} must be an object'\n  }\n};","map":{"version":3,"mappings":"AAAA,eAAe;AACbA,OAAK,EAAE;AACLC,cAAU,EAAE,6BADP;AAELC,qBAAiB,EAAE;AAFd,GADM;AAKbC,OAAK,EAAE;AACLC,QAAI,EAAE,0BADD;AAELC,eAAW,EAAE,yDAFR;AAGLC,aAAS,EAAE,qDAHN;AAILC,aAAS,EAAE,kEAJN;AAKLC,gBAAY,EAAE;AALT,GALM;AAYbC,SAAO,EAAE;AACPL,QAAI,EAAE;AADC,GAZI;AAebM,MAAI,EAAE;AACJN,QAAI,EAAE,wBADF;AAEJO,OAAG,EAAE,yCAFD;AAGJC,OAAG,EAAE,8CAHD;AAIJC,SAAK,EAAE;AAJH,GAfO;AAqBbC,QAAM,EAAE;AACNV,QAAI,EAAE,0BADA;AAENW,aAAS,EAAE,4BAFL;AAGNC,WAAO,EAAE,oBAHH;AAINC,WAAO,EAAE,wDAJH;AAKNJ,SAAK,EAAE,iDALD;AAMNF,OAAG,EAAE,iDANC;AAONC,OAAG,EAAE;AAPC,GArBK;AA8BbM,QAAM,EAAE;AACNd,QAAI,EAAE,0BADA;AAENe,kBAAc,EAAE,oCAFV;AAGNC,2BAAuB,EAAE,qCAHnB;AAINC,2BAAuB,EAAE,oCAJnB;AAKNC,sBAAkB,EAAE,6BALd;AAMNC,kBAAc,EAAE,oCANV;AAONN,WAAO,EAAE,wDAPH;AAQNO,WAAO,EAAE,+BARH;AASNC,SAAK,EAAE,6BATD;AAUNC,SAAK,EAAE,qCAVD;AAWNV,WAAO,EAAE,oBAXH;AAYNX,eAAW,EAAE,8DAZP;AAaNC,aAAS,EAAE,kDAbL;AAcNC,aAAS,EAAE;AAdL,GA9BK;AA8CboB,QAAM,EAAE;AACNvB,QAAI,EAAE;AADA;AA9CK,CAAf","names":["mixed","isRequired","isRequiredOrEmpty","array","type","rangeLength","minLength","maxLength","unrepeatable","boolean","date","min","max","range","number","isInteger","pattern","isOneOf","string","containsLetter","containsUppercaseLetter","containsLowercaseLetter","containsLetterOnly","containsNumber","isEmail","isURL","isHex","object"],"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/schema-typed/src/locales/default.ts"],"sourcesContent":["export default {\n  mixed: {\n    isRequired: '${name} is a required field',\n    isRequiredOrEmpty: '${name} is a required field'\n  },\n  array: {\n    type: '${name} must be an array',\n    rangeLength: '${name} must contain ${minLength} to ${maxLength} items',\n    minLength: '${name} field must have at least ${minLength} items',\n    maxLength: '${name} field must have less than or equal to ${maxLength} items',\n    unrepeatable: '${name} must have non-repeatable items'\n  },\n  boolean: {\n    type: '${name} must be a boolean'\n  },\n  date: {\n    type: '${name} must be a date',\n    min: '${name} field must be later than ${min}',\n    max: '${name} field must be at earlier than ${max}',\n    range: '${name} field must be between ${min} and ${max}'\n  },\n  number: {\n    type: '${name} must be a number',\n    isInteger: '${name} must be an integer',\n    pattern: '${name} is invalid',\n    isOneOf: '${name} must be one of the following values: ${values}',\n    range: '${name} field must be between ${min} and ${max}',\n    min: '${name} must be greater than or equal to ${min}',\n    max: '${name} must be less than or equal to ${max}'\n  },\n  string: {\n    type: '${name} must be a string',\n    containsLetter: '${name} field must contain letters',\n    containsUppercaseLetter: '${name} must be a upper case string',\n    containsLowercaseLetter: '${name} must be a lowercase string',\n    containsLetterOnly: '${name} must all be letters',\n    containsNumber: '${name} field must contain numbers',\n    isOneOf: '${name} must be one of the following values: ${values}',\n    isEmail: '${name} must be a valid email',\n    isURL: '${name} must be a valid URL',\n    isHex: '${name} must be a valid hexadecimal',\n    pattern: '${name} is invalid',\n    rangeLength: '${name} must contain ${minLength} to ${maxLength} characters',\n    minLength: '${name} must be at least ${minLength} characters',\n    maxLength: '${name} must be at most ${maxLength} characters'\n  },\n  object: {\n    type: '${name} must be an object'\n  }\n};\n"]},"metadata":{},"sourceType":"module"}