{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"classPrefix\", \"width\", \"left\", \"headerHeight\", \"depth\", \"height\", \"style\", \"className\", \"fullText\", \"firstColumn\", \"lastColumn\", \"isHeaderCell\", \"align\", \"children\", \"rowData\", \"dataKey\", \"rowIndex\", \"removed\", \"rowKey\", \"rowSpan\", \"wordWrap\", \"verticalAlign\", \"expanded\", \"treeCol\", \"hasChildren\", \"predefinedStyle\", \"renderCell\", \"renderTreeToggle\", \"onClick\", \"onTreeToggle\"];\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport isNil from 'lodash/isNil';\nimport get from 'lodash/get';\nimport { LAYER_WIDTH, ROW_HEADER_HEIGHT, ROW_HEIGHT } from './constants';\nimport { useClassNames } from './utils';\nimport TableContext from './TableContext';\nimport ArrowRight from '@rsuite/icons/ArrowRight';\nimport ArrowDown from '@rsuite/icons/ArrowDown';\nimport { columnHandledProps } from './Column';\nvar groupKeys = ['groupCount', 'groupHeader', 'groupHeaderHeight', 'groupAlign', 'groupVerticalAlign', 'renderSortIcon'];\nvar Cell = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _extends2, _extends3;\n\n  var _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'cell' : _props$classPrefix,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 0 : _props$width,\n      _props$left = props.left,\n      left = _props$left === void 0 ? 0 : _props$left,\n      _props$headerHeight = props.headerHeight,\n      headerHeight = _props$headerHeight === void 0 ? ROW_HEADER_HEIGHT : _props$headerHeight,\n      _props$depth = props.depth,\n      depth = _props$depth === void 0 ? 0 : _props$depth,\n      _props$height = props.height,\n      height = _props$height === void 0 ? ROW_HEIGHT : _props$height,\n      style = props.style,\n      className = props.className,\n      fullText = props.fullText,\n      firstColumn = props.firstColumn,\n      lastColumn = props.lastColumn,\n      isHeaderCell = props.isHeaderCell,\n      align = props.align,\n      children = props.children,\n      rowData = props.rowData,\n      dataKey = props.dataKey,\n      rowIndex = props.rowIndex,\n      removed = props.removed,\n      rowKey = props.rowKey,\n      rowSpan = props.rowSpan,\n      wordWrap = props.wordWrap,\n      verticalAlign = props.verticalAlign,\n      expanded = props.expanded,\n      treeCol = props.treeCol,\n      hasChildren = props.hasChildren,\n      predefinedStyle = props.predefinedStyle,\n      renderCell = props.renderCell,\n      renderTreeToggle = props.renderTreeToggle,\n      onClick = props.onClick,\n      onTreeToggle = props.onTreeToggle,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useContext = React.useContext(TableContext),\n      rtl = _React$useContext.rtl,\n      hasCustomTreeCol = _React$useContext.hasCustomTreeCol,\n      isTree = _React$useContext.isTree;\n\n  var isTreeCol = treeCol || !hasCustomTreeCol && firstColumn && isTree;\n  var cellHeight = typeof height === 'function' ? height(rowData) : height;\n\n  if (isTreeCol && !isHeaderCell && !rowData) {\n    throw new Error('[Table.Cell]: `rowData` is required for tree column');\n  }\n\n  var handleTreeToggle = useCallback(function (event) {\n    onTreeToggle === null || onTreeToggle === void 0 ? void 0 : onTreeToggle(rowKey, rowIndex, rowData, event);\n  }, [onTreeToggle, rowData, rowIndex, rowKey]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix({\n    expanded: expanded && isTreeCol,\n    first: firstColumn,\n    last: lastColumn,\n    rowspan: rowSpan && !isHeaderCell,\n    'full-text': fullText\n  }));\n  var nextHeight = isHeaderCell ? headerHeight : cellHeight;\n\n  var styles = _extends({}, predefinedStyle, (_extends2 = {}, _extends2[fullText ? 'minWidth' : 'width'] = width, _extends2.height = nextHeight, _extends2.zIndex = depth, _extends2[rtl ? 'right' : 'left'] = left, _extends2));\n\n  var paddingKey = rtl ? 'paddingRight' : 'paddingLeft';\n\n  var contentStyles = _extends({}, style, (_extends3 = {\n    width: fullText ? width - 1 : width,\n    height: nextHeight,\n    textAlign: align\n  }, _extends3[paddingKey] = isTreeCol ? depth * LAYER_WIDTH + 10 : (style === null || style === void 0 ? void 0 : style[paddingKey]) || (style === null || style === void 0 ? void 0 : style.padding), _extends3));\n\n  if (verticalAlign) {\n    contentStyles.display = 'table-cell';\n    contentStyles.verticalAlign = verticalAlign;\n  }\n\n  if (wordWrap) {\n    contentStyles.wordBreak = typeof wordWrap === 'boolean' ? 'break-all' : wordWrap;\n    contentStyles.overflowWrap = wordWrap === 'break-word' ? wordWrap : undefined;\n  }\n\n  var cellContent = isNil(children) && rowData && dataKey ? get(rowData, dataKey) : children;\n\n  if (typeof children === 'function') {\n    cellContent = children(rowData, rowIndex);\n  }\n\n  var renderTreeNodeExpandIcon = function renderTreeNodeExpandIcon() {\n    var ExpandIconComponent = expanded ? ArrowDown : ArrowRight;\n    var expandButton = /*#__PURE__*/React.createElement(ExpandIconComponent, {\n      className: prefix('expand-icon')\n    });\n\n    if (isTreeCol && hasChildren) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        role: \"button\",\n        tabIndex: -1,\n        className: prefix('expand-wrapper'),\n        onClick: handleTreeToggle\n      }, renderTreeToggle ? renderTreeToggle(expandButton, rowData, expanded) : expandButton);\n    }\n\n    return null;\n  };\n\n  var content = wordWrap ? /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('wrap')\n  }, renderTreeNodeExpandIcon(), renderCell ? renderCell(cellContent) : cellContent) : /*#__PURE__*/React.createElement(React.Fragment, null, renderTreeNodeExpandIcon(), renderCell ? renderCell(cellContent) : cellContent);\n\n  if (removed) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    role: isHeaderCell ? 'columnheader' : 'gridcell'\n  }, omit(rest, [].concat(groupKeys, columnHandledProps)), {\n    onClick: onClick,\n    className: classes,\n    style: styles\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('content'),\n    style: contentStyles\n  }, content));\n});\nCell.displayName = 'Table.Cell';\nCell.propTypes = {\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n  verticalAlign: PropTypes.oneOf(['top', 'middle', 'bottom']),\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  dataKey: PropTypes.string,\n  isHeaderCell: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  left: PropTypes.number,\n  headerHeight: PropTypes.number,\n  style: PropTypes.object,\n  firstColumn: PropTypes.bool,\n  lastColumn: PropTypes.bool,\n  hasChildren: PropTypes.bool,\n  children: PropTypes.any,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowIndex: PropTypes.number,\n  rowData: PropTypes.object,\n  depth: PropTypes.number,\n  onTreeToggle: PropTypes.func,\n  renderTreeToggle: PropTypes.func,\n  renderCell: PropTypes.func,\n  wordWrap: PropTypes.any,\n  removed: PropTypes.bool,\n  treeCol: PropTypes.bool,\n  expanded: PropTypes.bool,\n  fullText: PropTypes.bool\n};\nexport default Cell;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/rsuite-table/es/Cell.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","useCallback","PropTypes","omit","isNil","get","LAYER_WIDTH","ROW_HEADER_HEIGHT","ROW_HEIGHT","useClassNames","TableContext","ArrowRight","ArrowDown","columnHandledProps","groupKeys","Cell","forwardRef","props","ref","_extends2","_extends3","_props$classPrefix","classPrefix","_props$width","width","_props$left","left","_props$headerHeight","headerHeight","_props$depth","depth","_props$height","height","style","className","fullText","firstColumn","lastColumn","isHeaderCell","align","children","rowData","dataKey","rowIndex","removed","rowKey","rowSpan","wordWrap","verticalAlign","expanded","treeCol","hasChildren","predefinedStyle","renderCell","renderTreeToggle","onClick","onTreeToggle","rest","_React$useContext","useContext","rtl","hasCustomTreeCol","isTree","isTreeCol","cellHeight","Error","handleTreeToggle","event","_useClassNames","withClassPrefix","merge","prefix","classes","first","last","rowspan","nextHeight","styles","zIndex","paddingKey","contentStyles","textAlign","padding","display","wordBreak","overflowWrap","undefined","cellContent","renderTreeNodeExpandIcon","ExpandIconComponent","expandButton","createElement","role","tabIndex","content","Fragment","concat","displayName","propTypes","oneOf","string","bool","number","oneOfType","func","object","any"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"classPrefix\", \"width\", \"left\", \"headerHeight\", \"depth\", \"height\", \"style\", \"className\", \"fullText\", \"firstColumn\", \"lastColumn\", \"isHeaderCell\", \"align\", \"children\", \"rowData\", \"dataKey\", \"rowIndex\", \"removed\", \"rowKey\", \"rowSpan\", \"wordWrap\", \"verticalAlign\", \"expanded\", \"treeCol\", \"hasChildren\", \"predefinedStyle\", \"renderCell\", \"renderTreeToggle\", \"onClick\", \"onTreeToggle\"];\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport isNil from 'lodash/isNil';\nimport get from 'lodash/get';\nimport { LAYER_WIDTH, ROW_HEADER_HEIGHT, ROW_HEIGHT } from './constants';\nimport { useClassNames } from './utils';\nimport TableContext from './TableContext';\nimport ArrowRight from '@rsuite/icons/ArrowRight';\nimport ArrowDown from '@rsuite/icons/ArrowDown';\nimport { columnHandledProps } from './Column';\nvar groupKeys = ['groupCount', 'groupHeader', 'groupHeaderHeight', 'groupAlign', 'groupVerticalAlign', 'renderSortIcon'];\nvar Cell = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _extends2, _extends3;\n\n  var _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'cell' : _props$classPrefix,\n      _props$width = props.width,\n      width = _props$width === void 0 ? 0 : _props$width,\n      _props$left = props.left,\n      left = _props$left === void 0 ? 0 : _props$left,\n      _props$headerHeight = props.headerHeight,\n      headerHeight = _props$headerHeight === void 0 ? ROW_HEADER_HEIGHT : _props$headerHeight,\n      _props$depth = props.depth,\n      depth = _props$depth === void 0 ? 0 : _props$depth,\n      _props$height = props.height,\n      height = _props$height === void 0 ? ROW_HEIGHT : _props$height,\n      style = props.style,\n      className = props.className,\n      fullText = props.fullText,\n      firstColumn = props.firstColumn,\n      lastColumn = props.lastColumn,\n      isHeaderCell = props.isHeaderCell,\n      align = props.align,\n      children = props.children,\n      rowData = props.rowData,\n      dataKey = props.dataKey,\n      rowIndex = props.rowIndex,\n      removed = props.removed,\n      rowKey = props.rowKey,\n      rowSpan = props.rowSpan,\n      wordWrap = props.wordWrap,\n      verticalAlign = props.verticalAlign,\n      expanded = props.expanded,\n      treeCol = props.treeCol,\n      hasChildren = props.hasChildren,\n      predefinedStyle = props.predefinedStyle,\n      renderCell = props.renderCell,\n      renderTreeToggle = props.renderTreeToggle,\n      onClick = props.onClick,\n      onTreeToggle = props.onTreeToggle,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useContext = React.useContext(TableContext),\n      rtl = _React$useContext.rtl,\n      hasCustomTreeCol = _React$useContext.hasCustomTreeCol,\n      isTree = _React$useContext.isTree;\n\n  var isTreeCol = treeCol || !hasCustomTreeCol && firstColumn && isTree;\n  var cellHeight = typeof height === 'function' ? height(rowData) : height;\n\n  if (isTreeCol && !isHeaderCell && !rowData) {\n    throw new Error('[Table.Cell]: `rowData` is required for tree column');\n  }\n\n  var handleTreeToggle = useCallback(function (event) {\n    onTreeToggle === null || onTreeToggle === void 0 ? void 0 : onTreeToggle(rowKey, rowIndex, rowData, event);\n  }, [onTreeToggle, rowData, rowIndex, rowKey]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix({\n    expanded: expanded && isTreeCol,\n    first: firstColumn,\n    last: lastColumn,\n    rowspan: rowSpan && !isHeaderCell,\n    'full-text': fullText\n  }));\n  var nextHeight = isHeaderCell ? headerHeight : cellHeight;\n\n  var styles = _extends({}, predefinedStyle, (_extends2 = {}, _extends2[fullText ? 'minWidth' : 'width'] = width, _extends2.height = nextHeight, _extends2.zIndex = depth, _extends2[rtl ? 'right' : 'left'] = left, _extends2));\n\n  var paddingKey = rtl ? 'paddingRight' : 'paddingLeft';\n\n  var contentStyles = _extends({}, style, (_extends3 = {\n    width: fullText ? width - 1 : width,\n    height: nextHeight,\n    textAlign: align\n  }, _extends3[paddingKey] = isTreeCol ? depth * LAYER_WIDTH + 10 : (style === null || style === void 0 ? void 0 : style[paddingKey]) || (style === null || style === void 0 ? void 0 : style.padding), _extends3));\n\n  if (verticalAlign) {\n    contentStyles.display = 'table-cell';\n    contentStyles.verticalAlign = verticalAlign;\n  }\n\n  if (wordWrap) {\n    contentStyles.wordBreak = typeof wordWrap === 'boolean' ? 'break-all' : wordWrap;\n    contentStyles.overflowWrap = wordWrap === 'break-word' ? wordWrap : undefined;\n  }\n\n  var cellContent = isNil(children) && rowData && dataKey ? get(rowData, dataKey) : children;\n\n  if (typeof children === 'function') {\n    cellContent = children(rowData, rowIndex);\n  }\n\n  var renderTreeNodeExpandIcon = function renderTreeNodeExpandIcon() {\n    var ExpandIconComponent = expanded ? ArrowDown : ArrowRight;\n    var expandButton = /*#__PURE__*/React.createElement(ExpandIconComponent, {\n      className: prefix('expand-icon')\n    });\n\n    if (isTreeCol && hasChildren) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        role: \"button\",\n        tabIndex: -1,\n        className: prefix('expand-wrapper'),\n        onClick: handleTreeToggle\n      }, renderTreeToggle ? renderTreeToggle(expandButton, rowData, expanded) : expandButton);\n    }\n\n    return null;\n  };\n\n  var content = wordWrap ? /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('wrap')\n  }, renderTreeNodeExpandIcon(), renderCell ? renderCell(cellContent) : cellContent) : /*#__PURE__*/React.createElement(React.Fragment, null, renderTreeNodeExpandIcon(), renderCell ? renderCell(cellContent) : cellContent);\n\n  if (removed) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    role: isHeaderCell ? 'columnheader' : 'gridcell'\n  }, omit(rest, [].concat(groupKeys, columnHandledProps)), {\n    onClick: onClick,\n    className: classes,\n    style: styles\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('content'),\n    style: contentStyles\n  }, content));\n});\nCell.displayName = 'Table.Cell';\nCell.propTypes = {\n  align: PropTypes.oneOf(['left', 'center', 'right']),\n  verticalAlign: PropTypes.oneOf(['top', 'middle', 'bottom']),\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  dataKey: PropTypes.string,\n  isHeaderCell: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  left: PropTypes.number,\n  headerHeight: PropTypes.number,\n  style: PropTypes.object,\n  firstColumn: PropTypes.bool,\n  lastColumn: PropTypes.bool,\n  hasChildren: PropTypes.bool,\n  children: PropTypes.any,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowIndex: PropTypes.number,\n  rowData: PropTypes.object,\n  depth: PropTypes.number,\n  onTreeToggle: PropTypes.func,\n  renderTreeToggle: PropTypes.func,\n  renderCell: PropTypes.func,\n  wordWrap: PropTypes.any,\n  removed: PropTypes.bool,\n  treeCol: PropTypes.bool,\n  expanded: PropTypes.bool,\n  fullText: PropTypes.bool\n};\nexport default Cell;"]},"metadata":{},"sourceType":"module"}