{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n    _excluded2 = [\"depth\", \"rowIndex\"],\n    _excluded3 = [\"cellHeight\"];\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH, ROW_HEADER_HEIGHT, ROW_HEIGHT } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\n\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    if (rowKey) {\n      var parents = findAllParents(rowData, rowKey);\n\n      var _expanded = shouldShowRowByExpanded(expandedRowKeys, parents); // FIXME This function is supposed to be pure.\n      //       Don't mutate rowData in-place!\n\n\n      rowData[EXPANDED_KEY] = _expanded;\n      rowData[TREE_DEPTH] = parents.length;\n      return _expanded;\n    }\n  });\n};\n\nvar DATA_PLACEHOLDER = [];\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n      children = props.children,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n      className = props.className,\n      _props$data = props.data,\n      dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n      _props$defaultSortTyp = props.defaultSortType,\n      defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n      widthProp = props.width,\n      expandedRowKeysProp = props.expandedRowKeys,\n      defaultExpandAllRows = props.defaultExpandAllRows,\n      defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n      style = props.style,\n      id = props.id,\n      isTree = props.isTree,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? true : _props$hover,\n      bordered = props.bordered,\n      cellBordered = props.cellBordered,\n      wordWrap = props.wordWrap,\n      loading = props.loading,\n      _props$locale = props.locale,\n      locale = _props$locale === void 0 ? {\n    emptyMessage: 'No data found',\n    loading: 'Loading...'\n  } : _props$locale,\n      _props$showHeader = props.showHeader,\n      showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n      sortColumn = props.sortColumn,\n      _props$rowHeight = props.rowHeight,\n      rowHeight = _props$rowHeight === void 0 ? ROW_HEIGHT : _props$rowHeight,\n      sortTypeProp = props.sortType,\n      _props$headerHeight = props.headerHeight,\n      headerHeightProp = _props$headerHeight === void 0 ? ROW_HEADER_HEIGHT : _props$headerHeight,\n      _props$minHeight = props.minHeight,\n      minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 200 : _props$height,\n      autoHeight = props.autoHeight,\n      fillHeight = props.fillHeight,\n      rtlProp = props.rtl,\n      translate3d = props.translate3d,\n      rowKey = props.rowKey,\n      virtualized = props.virtualized,\n      rowClassName = props.rowClassName,\n      _props$rowExpandedHei = props.rowExpandedHeight,\n      rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n      disabledScroll = props.disabledScroll,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      loadAnimation = props.loadAnimation,\n      _props$shouldUpdateSc = props.shouldUpdateScroll,\n      shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n      renderRowProp = props.renderRow,\n      renderRowExpandedProp = props.renderRowExpanded,\n      renderLoading = props.renderLoading,\n      renderEmpty = props.renderEmpty,\n      onSortColumn = props.onSortColumn,\n      onScroll = props.onScroll,\n      renderTreeToggle = props.renderTreeToggle,\n      onRowClick = props.onRowClick,\n      onRowContextMenu = props.onRowContextMenu,\n      onExpandChange = props.onExpandChange,\n      onTouchStart = props.onTouchStart,\n      onTouchMove = props.onTouchMove,\n      onTouchEnd = props.onTouchEnd,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      mergeCls = _useClassNames.merge,\n      prefix = _useClassNames.prefix; // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n      expandedRowKeys = _useControlled[0],\n      setExpandedRowKeys = _useControlled[1];\n\n  var _useState = useState(function () {\n    return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  if (isTree) {\n    if (!rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    } else if (data.length > 0) {\n      if (!data[0].hasOwnProperty(rowKey)) {\n        throw new Error('The `rowKey` is not found in data');\n      }\n    }\n  }\n\n  var _useTableRows = useTableRows({\n    data: dataProp,\n    expandedRowKeys: expandedRowKeys,\n    wordWrap: wordWrap,\n    prefix: prefix\n  }),\n      tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n      bindTableRowsRef = _useTableRows.bindTableRowsRef;\n\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n\n  var getRowHeight = function getRowHeight() {\n    return typeof rowHeight === 'function' ? rowHeight() : rowHeight;\n  };\n\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  })); // Check for the existence of fixed columns in all column properties.\n\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  }); // Check all column properties for the existence of rowSpan.\n\n  var shouldRowSpanColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props2;\n\n    return child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n\n    if (event === 'bodyWidthChanged') {\n      deferUpdatePosition();\n    }\n  };\n\n  var _useTableDimension = useTableDimension({\n    data: dataProp,\n    width: widthProp,\n    rowHeight: rowHeight,\n    tableRef: tableRef,\n    headerWrapperRef: headerWrapperRef,\n    prefix: prefix,\n    affixHeader: affixHeader,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    headerHeight: headerHeight,\n    height: height,\n    minHeight: minHeight,\n    autoHeight: autoHeight,\n    fillHeight: fillHeight,\n    children: children,\n    expandedRowKeys: expandedRowKeys,\n    showHeader: showHeader,\n    bordered: bordered,\n    onTableScroll: debounce(function (coords) {\n      return onScrollTo(coords);\n    }, 100),\n    onTableResizeChange: handleTableResizeChange\n  }),\n      contentHeight = _useTableDimension.contentHeight,\n      contentWidth = _useTableDimension.contentWidth,\n      minScrollY = _useTableDimension.minScrollY,\n      minScrollX = _useTableDimension.minScrollX,\n      scrollY = _useTableDimension.scrollY,\n      scrollX = _useTableDimension.scrollX,\n      tableWidth = _useTableDimension.tableWidth,\n      tableOffset = _useTableDimension.tableOffset,\n      headerOffset = _useTableDimension.headerOffset,\n      setScrollY = _useTableDimension.setScrollY,\n      setScrollX = _useTableDimension.setScrollX,\n      getTableHeight = _useTableDimension.getTableHeight;\n\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n\n  var _usePosition = usePosition({\n    data: dataProp,\n    height: height,\n    tableWidth: tableWidth,\n    tableRef: tableRef,\n    prefix: prefix,\n    translateDOMPositionXY: translateDOMPositionXY,\n    wheelWrapperRef: wheelWrapperRef,\n    headerWrapperRef: headerWrapperRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef,\n    tableHeaderRef: tableHeaderRef,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    contentWidth: contentWidth,\n    shouldFixedColumn: shouldFixedColumn\n  }),\n      forceUpdatePosition = _usePosition.forceUpdatePosition,\n      deferUpdatePosition = _usePosition.deferUpdatePosition;\n\n  var _useScrollListener = useScrollListener({\n    rtl: rtl,\n    data: dataProp,\n    height: height,\n    virtualized: virtualized,\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    headerHeight: headerHeight,\n    autoHeight: autoHeight,\n    tableBodyRef: tableBodyRef,\n    scrollbarXRef: scrollbarXRef,\n    scrollbarYRef: scrollbarYRef,\n    disabledScroll: disabledScroll,\n    loading: loading,\n    tableRef: tableRef,\n    contentWidth: contentWidth,\n    tableWidth: tableWidth,\n    scrollY: scrollY,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    setScrollX: setScrollX,\n    setScrollY: setScrollY,\n    forceUpdatePosition: forceUpdatePosition,\n    deferUpdatePosition: deferUpdatePosition,\n    onScroll: onScroll,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }),\n      isScrolling = _useScrollListener.isScrolling,\n      onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n      onScrollVertical = _useScrollListener.onScrollVertical,\n      onScrollBody = _useScrollListener.onScrollBody,\n      onScrollTop = _useScrollListener.onScrollTop,\n      onScrollLeft = _useScrollListener.onScrollLeft,\n      onScrollTo = _useScrollListener.onScrollTo;\n\n  var _useCellDescriptor = useCellDescriptor({\n    children: children,\n    rtl: rtl,\n    mouseAreaRef: mouseAreaRef,\n    tableRef: tableRef,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerHeight: headerHeight,\n    showHeader: showHeader,\n    sortType: sortTypeProp,\n    defaultSortType: defaultSortType,\n    sortColumn: sortColumn,\n    prefix: prefix,\n    onSortColumn: onSortColumn,\n    // Force table update after column width change, so scrollbar re-renders.\n    onHeaderCellResize: forceUpdate,\n    rowHeight: rowHeight\n  }),\n      headerCells = _useCellDescriptor.headerCells,\n      bodyCells = _useCellDescriptor.bodyCells,\n      allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n      hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n\n      get body() {\n        return wheelWrapperRef.current;\n      },\n\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current; // Whether to show vertical scroll bar\n\n  var hasVerticalScrollbar = !autoHeight && contentHeight.current > getTableHeight() - headerHeight; // Whether to show the horizontal scroll bar\n\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover && !shouldRowSpanColumn,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n\n  var renderRowExpanded = useCallback(function (rowData) {\n    var styles = {\n      height: rowExpandedHeight\n    };\n\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n        rowIndex = props.rowIndex,\n        restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData, rowIndex);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n\n    var rowRight = 0;\n\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n\n    var rowNode = null; // IF there are fixed columns, add a fixed group\n\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n            fixed = _cell$props.fixed,\n            width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0,\n      rowIndex: -1\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    }; // Affix header\n\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n\n  var rowSpanState = useRef({});\n\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    var cellHeight = props.cellHeight,\n        restRowProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n    var rowProps = _extends({}, restRowProps, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _rowSpanState$current, _cell$props3, _rowSpanState$current2;\n\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = _cell$props2.rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props2, rowData);\n      var dataCellHeight = rowSpan ? rowSpan * (cellHeight || ROW_HEIGHT) : cellHeight;\n\n      var _cellKey = cell.props.dataKey || i; // Record the cell state of the merged row\n\n\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1; // Restart counting when merged to the last cell.\n\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      } // Cells marked as deleted when checking for merged cell.\n\n\n      var removedCell = (_cell$props3 = cell.props) !== null && _cell$props3 !== void 0 && _cell$props3.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        rowIndex: props.rowIndex,\n        wordWrap: wordWrap,\n        height: dataCellHeight,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    var scrollbars = [];\n\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n\n    return scrollbars;\n  };\n\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n\n    if (data) {\n      var _top = 0; // Row position\n\n      var minTop = Math.abs(scrollY.current);\n      var maxTop = minTop + height + rowExpandedHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap; // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var expandedRow = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n          var cellHeight = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n            cellHeight = nextRowHeight;\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n            cellHeight = nextRowHeight;\n\n            if (expandedRow) {\n              // If the row is expanded, the height of the expanded row is added.\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: _top,\n            rowIndex: index,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight,\n            cellHeight: cellHeight\n          };\n          _top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (_top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (_top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, expandedRow));\n        }\n      } else {\n        /** virtualized */\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length); // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            rowIndex: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight,\n            cellHeight: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid' // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.number,\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/rsuite-table/es/Table.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","React","useState","useRef","useCallback","useImperativeHandle","useReducer","getTranslateDOMPositionXY","PropTypes","isFunction","flatten","debounce","Row","CellGroup","Scrollbar","MouseArea","Loader","EmptyMessage","TableContext","SCROLLBAR_WIDTH","CELL_PADDING_HEIGHT","SORT_TYPE","EXPANDED_KEY","TREE_DEPTH","ROW_HEADER_HEIGHT","ROW_HEIGHT","mergeCells","flattenData","isRTL","findRowKeys","findAllParents","shouldShowRowByExpanded","resetLeftForCells","useClassNames","useControlled","useUpdateEffect","useCellDescriptor","useTableDimension","useTableRows","useAffix","useScrollListener","usePosition","isSupportTouchEvent","filterTreeData","data","expandedRowKeys","rowKey","filter","rowData","parents","_expanded","length","DATA_PLACEHOLDER","Table","forwardRef","props","ref","affixHeader","children","_props$classPrefix","classPrefix","className","_props$data","dataProp","_props$defaultSortTyp","defaultSortType","DESC","widthProp","width","expandedRowKeysProp","defaultExpandAllRows","defaultExpandedRowKeys","style","id","isTree","_props$hover","hover","bordered","cellBordered","wordWrap","loading","_props$locale","locale","emptyMessage","_props$showHeader","showHeader","sortColumn","_props$rowHeight","rowHeight","sortTypeProp","sortType","_props$headerHeight","headerHeight","headerHeightProp","_props$minHeight","minHeight","_props$height","height","autoHeight","fillHeight","rtlProp","rtl","translate3d","virtualized","rowClassName","_props$rowExpandedHei","rowExpandedHeight","disabledScroll","affixHorizontalScrollbar","loadAnimation","_props$shouldUpdateSc","shouldUpdateScroll","renderRowProp","renderRow","renderRowExpandedProp","renderRowExpanded","renderLoading","renderEmpty","onSortColumn","onScroll","renderTreeToggle","onRowClick","onRowContextMenu","onExpandChange","onTouchStart","onTouchMove","onTouchEnd","rest","_useClassNames","withClassPrefix","mergeCls","merge","prefix","_useReducer","x","forceUpdate","_useControlled","setExpandedRowKeys","_useState","setData","Error","hasOwnProperty","_useTableRows","tableRowsMaxHeight","bindTableRowsRef","getRowHeight","translateDOMPositionXY","forceUseTransform","enable3DTransform","shouldFixedColumn","Array","from","some","child","_child$props","fixed","shouldRowSpanColumn","_child$props2","rowSpan","visibleRows","mouseAreaRef","tableRef","tableHeaderRef","affixHeaderWrapperRef","headerWrapperRef","tableBodyRef","wheelWrapperRef","scrollbarXRef","scrollbarYRef","handleTableResizeChange","_prevSize","event","onScrollTo","vertical","onScrollTop","onScrollLeft","deferUpdatePosition","_useTableDimension","onTableScroll","coords","onTableResizeChange","contentHeight","contentWidth","minScrollY","minScrollX","scrollY","scrollX","tableWidth","tableOffset","headerOffset","setScrollY","setScrollX","getTableHeight","_usePosition","forceUpdatePosition","_useScrollListener","isScrolling","onScrollHorizontal","onScrollVertical","onScrollBody","_useCellDescriptor","onHeaderCellResize","headerCells","bodyCells","allColumnsWidth","hasCustomTreeCol","colCounts","current","root","body","scrollTop","scrollLeft","rowWidth","hasVerticalScrollbar","hasHorizontalScrollbar","classes","treetable","styles","createElement","cells","shouldRenderExpandedRow","depth","rowIndex","restRowProps","rowStyles","rowRight","right","rowNode","fixedLeftCells","fixedRightCells","scrollCells","fixedLeftCellGroupWidth","fixedRightCellGroupWidth","i","cell","_cell$props","isFixedStart","isFixedEnd","push","Fragment","isHeaderRow","undefined","left","renderTableHeader","top","rowProps","rowRef","fixedStyle","position","overflow","header","role","key","bindRowClick","bindRowContextMenu","handleTreeToggle","treeRowKey","_rowIndex","open","nextExpandedRowKeys","rowSpanState","renderRowData","hasChildren","isArray","nextRowKey","cellHeight","onClick","onContextMenu","expanded","_cell$props2","_cell$props2$rowSpan","_rowSpanState$current","_cell$props3","_rowSpanState$current2","call","dataCellHeight","_cellKey","dataKey","removedCell","cloneElement","onTreeToggle","removed","renderScrollbar","scrollbars","tableId","scrollLength","renderTableBody","_visibleRows$current","bodyHeight","bodyStyles","topHideHeight","bottomHideHeight","_top","minTop","Math","abs","maxTop","isCustomRowHeight","isUncertainHeight","coveredHeight","max","index","_rowData","maxHeight","expandedRow","nextRowHeight","_nextRowHeight","startIndex","floor","endIndex","min","ceil","coveredCount","_index","_rowData2","_rowProps","wheelStyles","pointerEvents","topRowStyles","bottomRowStyles","addPrefix","contextValue","useMemo","Provider","value","displayName","propTypes","bool","oneOfType","number","string","any","array","object","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n    _excluded2 = [\"depth\", \"rowIndex\"],\n    _excluded3 = [\"cellHeight\"];\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH, ROW_HEADER_HEIGHT, ROW_HEIGHT } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    if (rowKey) {\n      var parents = findAllParents(rowData, rowKey);\n\n      var _expanded = shouldShowRowByExpanded(expandedRowKeys, parents); // FIXME This function is supposed to be pure.\n      //       Don't mutate rowData in-place!\n\n\n      rowData[EXPANDED_KEY] = _expanded;\n      rowData[TREE_DEPTH] = parents.length;\n      return _expanded;\n    }\n  });\n};\n\nvar DATA_PLACEHOLDER = [];\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n      children = props.children,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n      className = props.className,\n      _props$data = props.data,\n      dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n      _props$defaultSortTyp = props.defaultSortType,\n      defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n      widthProp = props.width,\n      expandedRowKeysProp = props.expandedRowKeys,\n      defaultExpandAllRows = props.defaultExpandAllRows,\n      defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n      style = props.style,\n      id = props.id,\n      isTree = props.isTree,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? true : _props$hover,\n      bordered = props.bordered,\n      cellBordered = props.cellBordered,\n      wordWrap = props.wordWrap,\n      loading = props.loading,\n      _props$locale = props.locale,\n      locale = _props$locale === void 0 ? {\n    emptyMessage: 'No data found',\n    loading: 'Loading...'\n  } : _props$locale,\n      _props$showHeader = props.showHeader,\n      showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n      sortColumn = props.sortColumn,\n      _props$rowHeight = props.rowHeight,\n      rowHeight = _props$rowHeight === void 0 ? ROW_HEIGHT : _props$rowHeight,\n      sortTypeProp = props.sortType,\n      _props$headerHeight = props.headerHeight,\n      headerHeightProp = _props$headerHeight === void 0 ? ROW_HEADER_HEIGHT : _props$headerHeight,\n      _props$minHeight = props.minHeight,\n      minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 200 : _props$height,\n      autoHeight = props.autoHeight,\n      fillHeight = props.fillHeight,\n      rtlProp = props.rtl,\n      translate3d = props.translate3d,\n      rowKey = props.rowKey,\n      virtualized = props.virtualized,\n      rowClassName = props.rowClassName,\n      _props$rowExpandedHei = props.rowExpandedHeight,\n      rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n      disabledScroll = props.disabledScroll,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      loadAnimation = props.loadAnimation,\n      _props$shouldUpdateSc = props.shouldUpdateScroll,\n      shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n      renderRowProp = props.renderRow,\n      renderRowExpandedProp = props.renderRowExpanded,\n      renderLoading = props.renderLoading,\n      renderEmpty = props.renderEmpty,\n      onSortColumn = props.onSortColumn,\n      onScroll = props.onScroll,\n      renderTreeToggle = props.renderTreeToggle,\n      onRowClick = props.onRowClick,\n      onRowContextMenu = props.onRowContextMenu,\n      onExpandChange = props.onExpandChange,\n      onTouchStart = props.onTouchStart,\n      onTouchMove = props.onTouchMove,\n      onTouchEnd = props.onTouchEnd,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      mergeCls = _useClassNames.merge,\n      prefix = _useClassNames.prefix; // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n      expandedRowKeys = _useControlled[0],\n      setExpandedRowKeys = _useControlled[1];\n\n  var _useState = useState(function () {\n    return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  if (isTree) {\n    if (!rowKey) {\n      throw new Error('The `rowKey` is required when set isTree');\n    } else if (data.length > 0) {\n      if (!data[0].hasOwnProperty(rowKey)) {\n        throw new Error('The `rowKey` is not found in data');\n      }\n    }\n  }\n\n  var _useTableRows = useTableRows({\n    data: dataProp,\n    expandedRowKeys: expandedRowKeys,\n    wordWrap: wordWrap,\n    prefix: prefix\n  }),\n      tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n      bindTableRowsRef = _useTableRows.bindTableRowsRef;\n\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n\n  var getRowHeight = function getRowHeight() {\n    return typeof rowHeight === 'function' ? rowHeight() : rowHeight;\n  };\n\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  })); // Check for the existence of fixed columns in all column properties.\n\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  }); // Check all column properties for the existence of rowSpan.\n\n  var shouldRowSpanColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props2;\n\n    return child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n\n    if (event === 'bodyWidthChanged') {\n      deferUpdatePosition();\n    }\n  };\n\n  var _useTableDimension = useTableDimension({\n    data: dataProp,\n    width: widthProp,\n    rowHeight: rowHeight,\n    tableRef: tableRef,\n    headerWrapperRef: headerWrapperRef,\n    prefix: prefix,\n    affixHeader: affixHeader,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    headerHeight: headerHeight,\n    height: height,\n    minHeight: minHeight,\n    autoHeight: autoHeight,\n    fillHeight: fillHeight,\n    children: children,\n    expandedRowKeys: expandedRowKeys,\n    showHeader: showHeader,\n    bordered: bordered,\n    onTableScroll: debounce(function (coords) {\n      return onScrollTo(coords);\n    }, 100),\n    onTableResizeChange: handleTableResizeChange\n  }),\n      contentHeight = _useTableDimension.contentHeight,\n      contentWidth = _useTableDimension.contentWidth,\n      minScrollY = _useTableDimension.minScrollY,\n      minScrollX = _useTableDimension.minScrollX,\n      scrollY = _useTableDimension.scrollY,\n      scrollX = _useTableDimension.scrollX,\n      tableWidth = _useTableDimension.tableWidth,\n      tableOffset = _useTableDimension.tableOffset,\n      headerOffset = _useTableDimension.headerOffset,\n      setScrollY = _useTableDimension.setScrollY,\n      setScrollX = _useTableDimension.setScrollX,\n      getTableHeight = _useTableDimension.getTableHeight;\n\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n\n  var _usePosition = usePosition({\n    data: dataProp,\n    height: height,\n    tableWidth: tableWidth,\n    tableRef: tableRef,\n    prefix: prefix,\n    translateDOMPositionXY: translateDOMPositionXY,\n    wheelWrapperRef: wheelWrapperRef,\n    headerWrapperRef: headerWrapperRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef,\n    tableHeaderRef: tableHeaderRef,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    contentWidth: contentWidth,\n    shouldFixedColumn: shouldFixedColumn\n  }),\n      forceUpdatePosition = _usePosition.forceUpdatePosition,\n      deferUpdatePosition = _usePosition.deferUpdatePosition;\n\n  var _useScrollListener = useScrollListener({\n    rtl: rtl,\n    data: dataProp,\n    height: height,\n    virtualized: virtualized,\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    headerHeight: headerHeight,\n    autoHeight: autoHeight,\n    tableBodyRef: tableBodyRef,\n    scrollbarXRef: scrollbarXRef,\n    scrollbarYRef: scrollbarYRef,\n    disabledScroll: disabledScroll,\n    loading: loading,\n    tableRef: tableRef,\n    contentWidth: contentWidth,\n    tableWidth: tableWidth,\n    scrollY: scrollY,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    setScrollX: setScrollX,\n    setScrollY: setScrollY,\n    forceUpdatePosition: forceUpdatePosition,\n    deferUpdatePosition: deferUpdatePosition,\n    onScroll: onScroll,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }),\n      isScrolling = _useScrollListener.isScrolling,\n      onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n      onScrollVertical = _useScrollListener.onScrollVertical,\n      onScrollBody = _useScrollListener.onScrollBody,\n      onScrollTop = _useScrollListener.onScrollTop,\n      onScrollLeft = _useScrollListener.onScrollLeft,\n      onScrollTo = _useScrollListener.onScrollTo;\n\n  var _useCellDescriptor = useCellDescriptor({\n    children: children,\n    rtl: rtl,\n    mouseAreaRef: mouseAreaRef,\n    tableRef: tableRef,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerHeight: headerHeight,\n    showHeader: showHeader,\n    sortType: sortTypeProp,\n    defaultSortType: defaultSortType,\n    sortColumn: sortColumn,\n    prefix: prefix,\n    onSortColumn: onSortColumn,\n    // Force table update after column width change, so scrollbar re-renders.\n    onHeaderCellResize: forceUpdate,\n    rowHeight: rowHeight\n  }),\n      headerCells = _useCellDescriptor.headerCells,\n      bodyCells = _useCellDescriptor.bodyCells,\n      allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n      hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n\n      get body() {\n        return wheelWrapperRef.current;\n      },\n\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current; // Whether to show vertical scroll bar\n\n  var hasVerticalScrollbar = !autoHeight && contentHeight.current > getTableHeight() - headerHeight; // Whether to show the horizontal scroll bar\n\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover && !shouldRowSpanColumn,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n\n  var renderRowExpanded = useCallback(function (rowData) {\n    var styles = {\n      height: rowExpandedHeight\n    };\n\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n        rowIndex = props.rowIndex,\n        restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData, rowIndex);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n\n    var rowRight = 0;\n\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n\n    var rowNode = null; // IF there are fixed columns, add a fixed group\n\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n            fixed = _cell$props.fixed,\n            width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0,\n      rowIndex: -1\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    }; // Affix header\n\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n\n  var rowSpanState = useRef({});\n\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    var cellHeight = props.cellHeight,\n        restRowProps = _objectWithoutPropertiesLoose(props, _excluded3);\n\n    var rowProps = _extends({}, restRowProps, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _rowSpanState$current, _cell$props3, _rowSpanState$current2;\n\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = _cell$props2.rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props2, rowData);\n      var dataCellHeight = rowSpan ? rowSpan * (cellHeight || ROW_HEIGHT) : cellHeight;\n\n      var _cellKey = cell.props.dataKey || i; // Record the cell state of the merged row\n\n\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1; // Restart counting when merged to the last cell.\n\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      } // Cells marked as deleted when checking for merged cell.\n\n\n      var removedCell = (_cell$props3 = cell.props) !== null && _cell$props3 !== void 0 && _cell$props3.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        rowIndex: props.rowIndex,\n        wordWrap: wordWrap,\n        height: dataCellHeight,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    var scrollbars = [];\n\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n\n    return scrollbars;\n  };\n\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n\n    if (data) {\n      var _top = 0; // Row position\n\n      var minTop = Math.abs(scrollY.current);\n      var maxTop = minTop + height + rowExpandedHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap; // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var expandedRow = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n          var cellHeight = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n            cellHeight = nextRowHeight;\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n            cellHeight = nextRowHeight;\n\n            if (expandedRow) {\n              // If the row is expanded, the height of the expanded row is added.\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: _top,\n            rowIndex: index,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight,\n            cellHeight: cellHeight\n          };\n          _top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (_top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (_top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, expandedRow));\n        }\n      } else {\n        /** virtualized */\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length); // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            rowIndex: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight,\n            cellHeight: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid' // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.number,\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;"]},"metadata":{},"sourceType":"module"}