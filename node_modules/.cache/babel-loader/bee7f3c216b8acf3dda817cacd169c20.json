{"ast":null,"code":"import camelizeStyleName from './utils/camelizeStyleName';\nimport getComputedStyle from './utils/getComputedStyle';\nimport hyphenateStyleName from './utils/hyphenateStyleName';\n/**\n * Gets the value for a style property\n * @param node  The DOM element\n * @param property  The style property\n * @returns The value of the style property\n */\n\nexport default function getStyle(node, property) {\n  if (property) {\n    var value = node.style[camelizeStyleName(property)];\n\n    if (value) {\n      return value;\n    }\n\n    var styles = getComputedStyle(node);\n\n    if (styles) {\n      return styles.getPropertyValue(hyphenateStyleName(property));\n    }\n  }\n\n  return node.style || getComputedStyle(node);\n}","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/dom-lib/esm/getStyle.js"],"names":["camelizeStyleName","getComputedStyle","hyphenateStyleName","getStyle","node","property","value","style","styles","getPropertyValue"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;AAC/C,MAAIA,QAAJ,EAAc;AACZ,QAAIC,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAWP,iBAAiB,CAACK,QAAD,CAA5B,CAAZ;;AAEA,QAAIC,KAAJ,EAAW;AACT,aAAOA,KAAP;AACD;;AAED,QAAIE,MAAM,GAAGP,gBAAgB,CAACG,IAAD,CAA7B;;AAEA,QAAII,MAAJ,EAAY;AACV,aAAOA,MAAM,CAACC,gBAAP,CAAwBP,kBAAkB,CAACG,QAAD,CAA1C,CAAP;AACD;AACF;;AAED,SAAOD,IAAI,CAACG,KAAL,IAAcN,gBAAgB,CAACG,IAAD,CAArC;AACD","sourcesContent":["import camelizeStyleName from './utils/camelizeStyleName';\nimport getComputedStyle from './utils/getComputedStyle';\nimport hyphenateStyleName from './utils/hyphenateStyleName';\n/**\n * Gets the value for a style property\n * @param node  The DOM element\n * @param property  The style property\n * @returns The value of the style property\n */\n\nexport default function getStyle(node, property) {\n  if (property) {\n    var value = node.style[camelizeStyleName(property)];\n\n    if (value) {\n      return value;\n    }\n\n    var styles = getComputedStyle(node);\n\n    if (styles) {\n      return styles.getPropertyValue(hyphenateStyleName(property));\n    }\n  }\n\n  return node.style || getComputedStyle(node);\n}"]},"metadata":{},"sourceType":"module"}