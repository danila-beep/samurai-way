{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport s from \"./feedPage.module.css\";\nimport Post from \"../../components/Post/Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPostAC, setUserProfileAC } from \"../../store/reducers/profileReducer\";\nimport { UilPen, UilPlus, UilUser } from \"@iconscout/react-unicons\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedPage = props => {\n  _s();\n\n  var _profilePageData$post;\n\n  const profilePageData = useSelector(state => state.profilePage);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/profile/2\").then(res => {\n      dispatch(setUserProfileAC(res.data));\n    });\n  }, []);\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n\n  const addPost = () => {\n    dispatch(addPostAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.feedPageWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.addPostFormWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.createPostTextArea,\n        children: [/*#__PURE__*/_jsxDEV(UilUser, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: textAreaValue,\n          onChange: e => setTextAreaValue(e.currentTarget.value),\n          placeholder: \"What`s on your mind...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.createPostShareContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.createPostButton,\n          onClick: addPost,\n          children: [/*#__PURE__*/_jsxDEV(UilPen, {\n            size: \"1rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UilPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), (_profilePageData$post = profilePageData.posts) === null || _profilePageData$post === void 0 ? void 0 : _profilePageData$post.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        postText: post.postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedPage, \"is+Cs3X+veeUJZ6Td9dw4uivKLE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FeedPage;\nexport default FeedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx"],"names":["React","useEffect","useState","s","Post","useDispatch","useSelector","addPostAC","setUserProfileAC","UilPen","UilPlus","UilUser","axios","FeedPage","props","profilePageData","state","profilePage","dispatch","get","then","res","data","textAreaValue","setTextAreaValue","addPost","feedPageWrapper","addPostFormWrapper","createPostTextArea","e","currentTarget","value","createPostShareContainer","createPostButton","posts","map","post","postText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,qCAA5C;AACA,SAEEC,MAFF,EAGEC,OAHF,EAIEC,OAJF,QAKO,0BALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,QAA2B,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAC7C,QAAMC,eAAe,GAAGT,WAAW,CAAEU,KAAD,IAAsBA,KAAK,CAACC,WAA7B,CAAnC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CACFO,GADH,CACO,wDADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACV,gBAAgB,CAACa,GAAG,CAACC,IAAL,CAAjB,CAAR;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAS,EAAT,CAAlD;;AAEA,QAAMuB,OAAO,GAAG,MAAM;AACpBP,IAAAA,QAAQ,CAACX,SAAS,CAACgB,aAAD,CAAV,CAAR;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAErB,CAAC,CAACuB,eAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEvB,CAAC,CAACwB,kBAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAExB,CAAC,CAACyB,kBAAlB;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,KAAK,EAAEL,aADT;AAEE,UAAA,QAAQ,EAAGM,CAAD,IAAOL,gBAAgB,CAACK,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAFnC;AAGE,UAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAE5B,CAAC,CAAC6B,wBAAlB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAE7B,CAAC,CAAC8B,gBAAlB;AAAoC,UAAA,OAAO,EAAER,OAA7C;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,2BAkBGV,eAAe,CAACmB,KAlBnB,0DAkBG,sBAAuBC,GAAvB,CAA4BC,IAAD,IAAU;AACpC,0BAAO,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA,IAAI,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CAlBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA3CD;;GAAMxB,Q;UACoBP,W,EACPD,W;;;KAFbQ,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport s from \"./feedPage.module.css\";\nimport Post from \"../../components/Post/Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport TextArea from \"../../shared/TextArea\";\nimport { Button } from \"../../shared/Button\";\nimport { addPostAC, setUserProfileAC } from \"../../store/reducers/profileReducer\";\nimport {\n  UilCommentDots,\n  UilPen,\n  UilPlus,\n  UilUser,\n} from \"@iconscout/react-unicons\";\nimport axios from \"axios\";\n\ntype FeedPageProps = {};\n\nconst FeedPage: FC<FeedPageProps> = (props) => {\n  const profilePageData = useSelector((state: RootState) => state.profilePage);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .get(\"https://social-network.samuraijs.com/api/1.0/profile/2\")\n      .then((res) => {\n        dispatch(setUserProfileAC(res.data));\n      });\n  }, []);\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addPost = () => {\n    dispatch(addPostAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  return (\n    <div className={s.feedPageWrapper}>\n      <div className={s.addPostFormWrapper}>\n        <div className={s.createPostTextArea}>\n          <UilUser />\n          <textarea\n            value={textAreaValue}\n            onChange={(e) => setTextAreaValue(e.currentTarget.value)}\n            placeholder=\"What`s on your mind...\"\n          />\n        </div>\n        <div className={s.createPostShareContainer}>\n          <div className={s.createPostButton} onClick={addPost}>\n            <UilPen size={\"1rem\"} />\n            <p>Create Post</p>\n          </div>\n          <UilPlus />\n        </div>\n      </div>\n      {profilePageData.posts?.map((post) => {\n        return <Post postText={post.postText} />;\n      })}\n    </div>\n  );\n};\n\nexport default FeedPage;\n"]},"metadata":{},"sourceType":"module"}