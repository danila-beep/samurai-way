{"ast":null,"code":"import { useCallback } from 'react';\nimport { useBoolean, useCounter, useInterval } from '..';\n\nfunction useCountdown(countdownOption) {\n  let isDeprecated = false;\n  let countStart, intervalMs, isIncrement, countStop;\n\n  if ('seconds' in countdownOption) {\n    console.warn('[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.');\n    isDeprecated = true;\n    countStart = countdownOption.seconds;\n    intervalMs = countdownOption.interval;\n    isIncrement = countdownOption.isIncrement;\n  } else {\n    ;\n    ({\n      countStart,\n      intervalMs,\n      isIncrement,\n      countStop\n    } = countdownOption);\n  }\n\n  intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1000;\n  isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n  countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n  const {\n    count,\n    increment,\n    decrement,\n    reset: resetCounter\n  } = useCounter(countStart);\n  const {\n    value: isCountdownRunning,\n    setTrue: startCountdown,\n    setFalse: stopCountdown\n  } = useBoolean(false);\n\n  const resetCountdown = () => {\n    stopCountdown();\n    resetCounter();\n  };\n\n  const countdownCallback = useCallback(() => {\n    if (count === countStop) {\n      stopCountdown();\n      return;\n    }\n\n    if (isIncrement) {\n      increment();\n    } else {\n      decrement();\n    }\n  }, [count, countStop, decrement, increment, isIncrement, stopCountdown]);\n  useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n  return isDeprecated ? [count, {\n    start: startCountdown,\n    stop: stopCountdown,\n    reset: resetCountdown\n  }] : [count, {\n    startCountdown,\n    stopCountdown,\n    resetCountdown\n  }];\n}\n\nexport default useCountdown;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/usehooks-ts/dist/esm/useCountdown/useCountdown.js"],"names":["useCallback","useBoolean","useCounter","useInterval","useCountdown","countdownOption","isDeprecated","countStart","intervalMs","isIncrement","countStop","console","warn","seconds","interval","count","increment","decrement","reset","resetCounter","value","isCountdownRunning","setTrue","startCountdown","setFalse","stopCountdown","resetCountdown","countdownCallback","start","stop"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,WAAjC,QAAoD,IAApD;;AACA,SAASC,YAAT,CAAsBC,eAAtB,EAAuC;AACnC,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,UAAJ,EAAgBC,UAAhB,EAA4BC,WAA5B,EAAyCC,SAAzC;;AACA,MAAI,aAAaL,eAAjB,EAAkC;AAC9BM,IAAAA,OAAO,CAACC,IAAR,CAAa,oKAAb;AACAN,IAAAA,YAAY,GAAG,IAAf;AACAC,IAAAA,UAAU,GAAGF,eAAe,CAACQ,OAA7B;AACAL,IAAAA,UAAU,GAAGH,eAAe,CAACS,QAA7B;AACAL,IAAAA,WAAW,GAAGJ,eAAe,CAACI,WAA9B;AACH,GAND,MAOK;AACD;AACA,KAAC;AAAEF,MAAAA,UAAF;AAAcC,MAAAA,UAAd;AAA0BC,MAAAA,WAA1B;AAAuCC,MAAAA;AAAvC,QAAqDL,eAAtD;AACH;;AACDG,EAAAA,UAAU,GAAGA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4D,IAAzE;AACAC,EAAAA,WAAW,GAAGA,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiDA,WAAjD,GAA+D,KAA7E;AACAC,EAAAA,SAAS,GAAGA,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6CA,SAA7C,GAAyD,CAArE;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA,KAAK,EAAEC;AAAtC,MAAwDjB,UAAU,CAACK,UAAD,CAAxE;AACA,QAAM;AAAEa,IAAAA,KAAK,EAAEC,kBAAT;AAA6BC,IAAAA,OAAO,EAAEC,cAAtC;AAAsDC,IAAAA,QAAQ,EAAEC;AAAhE,MAAmFxB,UAAU,CAAC,KAAD,CAAnG;;AACA,QAAMyB,cAAc,GAAG,MAAM;AACzBD,IAAAA,aAAa;AACbN,IAAAA,YAAY;AACf,GAHD;;AAIA,QAAMQ,iBAAiB,GAAG3B,WAAW,CAAC,MAAM;AACxC,QAAIe,KAAK,KAAKL,SAAd,EAAyB;AACrBe,MAAAA,aAAa;AACb;AACH;;AACD,QAAIhB,WAAJ,EAAiB;AACbO,MAAAA,SAAS;AACZ,KAFD,MAGK;AACDC,MAAAA,SAAS;AACZ;AACJ,GAXoC,EAWlC,CAACF,KAAD,EAAQL,SAAR,EAAmBO,SAAnB,EAA8BD,SAA9B,EAAyCP,WAAzC,EAAsDgB,aAAtD,CAXkC,CAArC;AAYAtB,EAAAA,WAAW,CAACwB,iBAAD,EAAoBN,kBAAkB,GAAGb,UAAH,GAAgB,IAAtD,CAAX;AACA,SAAOF,YAAY,GACb,CACES,KADF,EAEE;AACIa,IAAAA,KAAK,EAAEL,cADX;AAEIM,IAAAA,IAAI,EAAEJ,aAFV;AAGIP,IAAAA,KAAK,EAAEQ;AAHX,GAFF,CADa,GASb,CACEX,KADF,EAEE;AACIQ,IAAAA,cADJ;AAEIE,IAAAA,aAFJ;AAGIC,IAAAA;AAHJ,GAFF,CATN;AAiBH;;AACD,eAAetB,YAAf","sourcesContent":["import { useCallback } from 'react';\nimport { useBoolean, useCounter, useInterval } from '..';\nfunction useCountdown(countdownOption) {\n    let isDeprecated = false;\n    let countStart, intervalMs, isIncrement, countStop;\n    if ('seconds' in countdownOption) {\n        console.warn('[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.');\n        isDeprecated = true;\n        countStart = countdownOption.seconds;\n        intervalMs = countdownOption.interval;\n        isIncrement = countdownOption.isIncrement;\n    }\n    else {\n        ;\n        ({ countStart, intervalMs, isIncrement, countStop } = countdownOption);\n    }\n    intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1000;\n    isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n    countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n    const { count, increment, decrement, reset: resetCounter, } = useCounter(countStart);\n    const { value: isCountdownRunning, setTrue: startCountdown, setFalse: stopCountdown, } = useBoolean(false);\n    const resetCountdown = () => {\n        stopCountdown();\n        resetCounter();\n    };\n    const countdownCallback = useCallback(() => {\n        if (count === countStop) {\n            stopCountdown();\n            return;\n        }\n        if (isIncrement) {\n            increment();\n        }\n        else {\n            decrement();\n        }\n    }, [count, countStop, decrement, increment, isIncrement, stopCountdown]);\n    useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n    return isDeprecated\n        ? [\n            count,\n            {\n                start: startCountdown,\n                stop: stopCountdown,\n                reset: resetCountdown,\n            },\n        ]\n        : [\n            count,\n            {\n                startCountdown,\n                stopCountdown,\n                resetCountdown,\n            },\n        ];\n}\nexport default useCountdown;\n"]},"metadata":{},"sourceType":"module"}