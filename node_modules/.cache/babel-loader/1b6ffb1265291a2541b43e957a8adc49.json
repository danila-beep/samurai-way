{"ast":null,"code":"import isEmpty from './isEmpty';\n/**\n * formatErrorMessage('${name} is a required field', {name: 'email'});\n * output: 'email is a required field'\n */\n\nexport default function formatErrorMessage(errorMessage, params) {\n  if (typeof errorMessage === 'string') {\n    return errorMessage.replace(/\\$\\{\\s*(\\w+)\\s*\\}/g, (_, key) => {\n      return isEmpty(params === null || params === void 0 ? void 0 : params[key]) ? `[${key}]` : params === null || params === void 0 ? void 0 : params[key];\n    });\n  }\n\n  return errorMessage;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA;;;;;AAIA,eAAc,SAAUC,kBAAV,CAAgCC,YAAhC,EAA2DC,MAA3D,EAAuE;AACnF,MAAI,OAAOD,YAAP,KAAwB,QAA5B,EAAsC;AACpC,WAAOA,YAAY,CAACE,OAAb,CAAqB,oBAArB,EAA2C,CAACC,CAAD,EAAIC,GAAJ,KAAW;AAC3D,aAAON,OAAO,CAACG,MAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAGG,GAAH,CAAP,CAAP,GAAyB,IAAIA,GAAG,GAAhC,GAAsCH,MAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAGG,GAAH,CAAnD;AACD,KAFM,CAAP;AAGD;;AAED,SAAOJ,YAAP;AACD","names":["isEmpty","formatErrorMessage","errorMessage","params","replace","_","key"],"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/schema-typed/src/utils/formatErrorMessage.ts"],"sourcesContent":["import isEmpty from './isEmpty';\n\n/**\n * formatErrorMessage('${name} is a required field', {name: 'email'});\n * output: 'email is a required field'\n */\nexport default function formatErrorMessage<E>(errorMessage?: string | E, params?: any) {\n  if (typeof errorMessage === 'string') {\n    return errorMessage.replace(/\\$\\{\\s*(\\w+)\\s*\\}/g, (_, key) => {\n      return isEmpty(params?.[key]) ? `[${key}]` : params?.[key];\n    });\n  }\n\n  return errorMessage;\n}\n"]},"metadata":{},"sourceType":"module"}