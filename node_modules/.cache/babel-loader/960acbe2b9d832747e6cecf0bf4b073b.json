{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport s from \"./feedPage.module.css\";\nimport { addPostAC } from \"../../store/reducers/profileReducer\";\nimport { SideBar } from \"../../components/SideBar/SideBar\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\nimport { useAppDispatch } from \"../../utils/hooks/useAppDispatch\";\nimport FeedPosts from \"../../components/FeedPosts/FeedPosts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedPage = props => {\n  _s();\n\n  const profilePageData = useAppSelector(state => state.profilePage);\n  const dispatch = useAppDispatch();\n  const isAuthorized = useAppSelector(state => state.auth.isAuthorized);\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n\n  const addPost = () => {\n    dispatch(addPostAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.feedPageWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.feedPageSideBar,\n      children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedPosts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedPage, \"cw9GaFAmITriAz/baSlF3kbPJSQ=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n\n_c = FeedPage;\nexport default FeedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx"],"names":["React","useState","s","addPostAC","SideBar","useAppSelector","useAppDispatch","FeedPosts","FeedPage","props","profilePageData","state","profilePage","dispatch","isAuthorized","auth","textAreaValue","setTextAreaValue","addPost","feedPageWrapper","feedPageSideBar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,CAAP,MAAc,uBAAd;AAEA,SAASC,SAAT,QAA0B,qCAA1B;AAUA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;;AAIA,MAAMC,QAA2B,GAAIC,KAAD,IAAW;AAAA;;AAC7C,QAAMC,eAAe,GAAGL,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAAtC;AACA,QAAMC,QAAQ,GAAGP,cAAc,EAA/B;AACA,QAAMQ,YAAY,GAAGT,cAAc,CAAEM,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWD,YAAvB,CAAnC;AAEA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAS,EAAT,CAAlD;;AAEA,QAAMiB,OAAO,GAAG,MAAM;AACpBL,IAAAA,QAAQ,CAACV,SAAS,CAACa,aAAD,CAAV,CAAR;AACAC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEf,CAAC,CAACiB,eAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEjB,CAAC,CAACkB,eAAlB;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvBD;;GAAMZ,Q;UACoBH,c,EACPC,c,EACID,c;;;KAHjBG,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, { FC, useState } from \"react\";\nimport s from \"./feedPage.module.css\";\nimport Post from \"../../components/Post/Post\";\nimport { addPostAC } from \"../../store/reducers/profileReducer\";\nimport {\n  UilArrowRight,\n  UilEmoji,\n  UilImage,\n  UilPlus,\n  UilSmile,\n  UilUser,\n  UilVideo,\n} from \"@iconscout/react-unicons\";\nimport { SideBar } from \"../../components/SideBar/SideBar\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\nimport { useAppDispatch } from \"../../utils/hooks/useAppDispatch\";\nimport FeedPosts from \"../../components/FeedPosts/FeedPosts\";\n\ntype FeedPageProps = {};\n\nconst FeedPage: FC<FeedPageProps> = (props) => {\n  const profilePageData = useAppSelector((state) => state.profilePage);\n  const dispatch = useAppDispatch();\n  const isAuthorized = useAppSelector((state) => state.auth.isAuthorized);\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addPost = () => {\n    dispatch(addPostAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  return (\n    <div className={s.feedPageWrapper}>\n      <div className={s.feedPageSideBar}>\n        <SideBar />\n      </div>\n\n      <FeedPosts />\n\n      \n    </div>\n  );\n};\n\nexport default FeedPage;\n"]},"metadata":{},"sourceType":"module"}