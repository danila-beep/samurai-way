{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/MainContent/Users/UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { followUserAC, unfollowUserAC } from '../../../store/reducers/usersReducer';\nimport { Button } from '../../../shared/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersPage = () => {\n  _s();\n\n  const usersPageData = useSelector(state => state.usersPage);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: usersPageData.users.map(user => {\n      console.log(usersPageData);\n      console.log(user.isFollowed);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\",\n          padding: \"10px\",\n          margin: \"10px\",\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.userPhoto,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => dispatch(followUserAC(user.id)),\n            children: \"Follow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => dispatch(unfollowUserAC(user.id)),\n            children: \"Unfollow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: user.isFollowed.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersPage, \"9ck2MoDtTMHiz2b46ABypYnA6HA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/MainContent/Users/UsersPage.tsx"],"names":["React","useDispatch","useSelector","followUserAC","unfollowUserAC","Button","UsersPage","usersPageData","state","usersPage","dispatch","users","map","user","console","log","isFollowed","display","padding","margin","border","userPhoto","firstName","lastName","id","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAiCC,YAAjC,EAA+CC,cAA/C,QAAqE,sCAArE;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,aAAa,GAAGL,WAAW,CAA0BM,KAAK,IAAIA,KAAK,CAACC,SAAzC,CAAjC;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAGA,sBACE;AAAA,cAAMM,aAAa,CAACI,KAAd,CAAoBC,GAApB,CAAwBC,IAAI,IAAI;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,UAAjB;AACA,0BACE;AAAmB,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,cAAV;AAA0BC,UAAAA,OAAO,EAAE,MAAnC;AAA2CC,UAAAA,MAAM,EAAE,MAAnD;AAA2DC,UAAAA,MAAM,EAAE;AAAnE,SAA1B;AAAA,gCACE;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEP,IAAI,CAACQ,SAAf;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBAAOR,IAAI,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAOT,IAAI,CAACU;AAAZ;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,kCACA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMb,QAAQ,CAACP,YAAY,CAACU,IAAI,CAACW,EAAN,CAAb,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMd,QAAQ,CAACN,cAAc,CAACS,IAAI,CAACW,EAAN,CAAf,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAUE;AAAA,oBACGX,IAAI,CAACG,UAAL,CAAgBS,QAAhB;AADH;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAAUZ,IAAI,CAACW,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD,KAnBK;AAAN;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA3BD;;GAAMlB,S;UACkBJ,W,EACLD,W;;;KAFbK,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../../../store/store'\nimport { UserPageType, UserType, followUserAC, unfollowUserAC } from '../../../store/reducers/usersReducer'\nimport { Button } from '../../../shared/Button'\n\nconst UsersPage = () => {\n  const usersPageData = useSelector<RootState, UserPageType>(state => state.usersPage)\n  const dispatch = useDispatch()\n\n\n  return (\n    <div>{usersPageData.users.map(user => {\n      console.log(usersPageData);\n      console.log(user.isFollowed);\n      return (\n        <div key={user.id} style={{display: \"inline-block\", padding: \"10px\", margin: \"10px\", border: \"1px solid black\"}}>\n          <div>\n            <img src={user.userPhoto} alt=\"\" />\n          </div>\n          <span>{user.firstName}</span>\n          <span>{user.lastName}</span>\n          <div>\n          <Button onClick={() => dispatch(followUserAC(user.id))}>Follow</Button>\n          <Button onClick={() => dispatch(unfollowUserAC(user.id))}>Unfollow</Button>\n          </div>\n          <div>\n            {user.isFollowed.toString()}\n          </div>\n        </div>\n      )\n    })}</div>\n  )\n}\n\nexport default UsersPage"]},"metadata":{},"sourceType":"module"}