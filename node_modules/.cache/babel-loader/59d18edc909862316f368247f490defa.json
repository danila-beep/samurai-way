{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Post/Post.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport s from \"./post.module.css\";\nimport { UilComment, UilElipsisDoubleVAlt, UilThumbsDown, UilThumbsUp } from \"@iconscout/react-unicons\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\nimport { NavLink } from \"react-router-dom\";\nimport { getRandomName } from \"../../utils/userNameGenerator\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const {\n    postText\n  } = props;\n  const imagesForPosts = useAppSelector(state => state.feed.images);\n  const avatarGenerator = new AvatarGenerator();\n  const loggedUserId = useAppSelector(state => state.app.userId);\n  const loggedUserName = useAppSelector(state => state.app.fullName); //НЕВОЗМОЖНО РЕАЛИЗОВАТЬ ТАК КАК ЕСТЬ ОГРАНИЧЕНИЕ НА КОЛИЧЕСТВО ЗАПРОСОВ\n  // const [localPostData, setLocalPostData] = useState<ProfileInfoType>();\n  // useEffect(() => {\n  //   socialMediaAPI.getUserProfile(props.userId).then((res) => {\n  //     setLocalPostData(res.data);\n  //   });\n  // }, [props.userId]);\n  // console.log(localPostData);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postHeader,\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/profile/${Math.floor(Math.random() * 29826)}`,\n        className: s.postHeaderUserName,\n        children: [props.userId === loggedUserId ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: miniAva,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarGenerator.generateRandomAvatar(),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), props.userId === loggedUserId ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: loggedUserName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: getRandomName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.postHeaderOptions,\n        children: /*#__PURE__*/_jsxDEV(UilElipsisDoubleVAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postBody,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: postText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagesForPosts[Math.floor(Math.random() * imagesForPosts.length)],\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postShare,\n      children: [/*#__PURE__*/_jsxDEV(UilComment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UilThumbsUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UilThumbsDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"CJU8Pkolnn2mIyd3VrlM74BIZdk=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Post/Post.tsx"],"names":["React","s","UilComment","UilElipsisDoubleVAlt","UilThumbsDown","UilThumbsUp","useAppSelector","NavLink","getRandomName","miniAva","AvatarGenerator","Post","props","postText","imagesForPosts","state","feed","images","avatarGenerator","loggedUserId","app","userId","loggedUserName","fullName","postWrapper","postHeader","Math","floor","random","postHeaderUserName","generateRandomAvatar","postHeaderOptions","postBody","length","postShare"],"mappings":"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","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport s from \"./post.module.css\";\nimport {\n  UilComment,\n  UilElipsisDoubleVAlt,\n  UilThumbsDown,\n  UilThumbsUp,\n  UilUser,\n} from \"@iconscout/react-unicons\";\nimport { useAppDispatch } from \"../../utils/hooks/useAppDispatch\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\nimport { socialMediaAPI } from \"../../api/socialMediaAPI\";\nimport { ProfileInfoType } from \"../../store/reducers/profileReducer\";\nimport { NavLink } from \"react-router-dom\";\nimport { getRandomName } from \"../../utils/userNameGenerator\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\n\ntype PostProps = {\n  postText: string;\n  postId: number;\n  userId: number;\n};\n\nconst Post: FC<PostProps> = (props) => {\n  const { postText } = props;\n  const imagesForPosts = useAppSelector<string[]>((state) => state.feed.images);\n  const avatarGenerator = new AvatarGenerator();\n  const loggedUserId = useAppSelector((state) => state.app.userId);\n  const loggedUserName = useAppSelector((state) => state.app.fullName);\n\n  //НЕВОЗМОЖНО РЕАЛИЗОВАТЬ ТАК КАК ЕСТЬ ОГРАНИЧЕНИЕ НА КОЛИЧЕСТВО ЗАПРОСОВ\n\n  // const [localPostData, setLocalPostData] = useState<ProfileInfoType>();\n\n  // useEffect(() => {\n  //   socialMediaAPI.getUserProfile(props.userId).then((res) => {\n  //     setLocalPostData(res.data);\n  //   });\n  // }, [props.userId]);\n\n  // console.log(localPostData);\n\n  return (\n    <div className={s.postWrapper}>\n      <div className={s.postHeader}>\n        <NavLink\n          to={`/profile/${Math.floor(Math.random() * 29826)}`}\n          className={s.postHeaderUserName}\n        >\n          {props.userId === loggedUserId ? (\n            <img src={miniAva} alt=\"\" />\n          ) : (\n            <img src={avatarGenerator.generateRandomAvatar()} alt=\"\" />\n          )}\n          {props.userId === loggedUserId ? (\n            <h3>{loggedUserName}</h3>\n          ) : (\n            <h3>{getRandomName()}</h3>\n          )}\n        </NavLink>\n        <div className={s.postHeaderOptions}>\n          <UilElipsisDoubleVAlt />\n        </div>\n      </div>\n      <div className={s.postBody}>\n        <p>{postText}</p>\n        <img\n          src={\n            imagesForPosts[Math.floor(Math.random() * imagesForPosts.length)]\n          }\n          alt=\"\"\n        />\n      </div>\n      <div className={s.postShare}>\n        <UilComment />\n        <UilThumbsUp />\n        <UilThumbsDown />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}