{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport s from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { followUserTC, getUsersTC, nextPagesPaginationAC, previousPagesPaginationAC, unfollowUserTC } from \"../../store/reducers/usersReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersPage = () => {\n  _s();\n\n  //getting data from redux\n  const usersPageData = useSelector(state => state.usersPage);\n  const dispatch = useDispatch(); //API \"get\" call\n\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]); //pagination logic\n\n  const pagesCount = Math.ceil(usersPageData.totalUsersCount / usersPageData.pageSize);\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n\n  const previousPages = () => {\n    dispatch(previousPagesPaginationAC(pagesCount));\n  }; //follow / unfollow\n\n\n  const followButtonHandler = (isFollowed, userId) => {\n    if (isFollowed) {\n      dispatch(unfollowUserTC(userId));\n    } else {\n      dispatch(followUserTC(userId));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.userPageContainer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersPage, \"Gk/M3zRD8a3uFewu5WqVluEnTh4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx"],"names":["React","useEffect","s","useDispatch","useSelector","followUserTC","getUsersTC","nextPagesPaginationAC","previousPagesPaginationAC","unfollowUserTC","UsersPage","usersPageData","state","usersPage","dispatch","currentPage","pageSize","pagesCount","Math","ceil","totalUsersCount","nextPages","previousPages","followButtonHandler","isFollowed","userId","userPageContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAIEC,YAJF,EAKEC,UALF,EAMEC,qBANF,EAOEC,yBAPF,EAWEC,cAXF,QAYO,mCAZP;;;AAqBA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAMC,aAAa,GAAGP,WAAW,CAC9BQ,KAAD,IAAWA,KAAK,CAACC,SADc,CAAjC;AAGA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CALsB,CAOtB;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACR,UAAU,CAACK,aAAa,CAACI,WAAf,EAA4BJ,aAAa,CAACK,QAA1C,CAAX,CAAR;AACD,GAFQ,EAEN,CAACF,QAAD,EAAWH,aAAa,CAACI,WAAzB,EAAsCJ,aAAa,CAACK,QAApD,CAFM,CAAT,CARsB,CAYtB;;AAEA,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CACjBR,aAAa,CAACS,eAAd,GAAgCT,aAAa,CAACK,QAD7B,CAAnB;;AAIA,QAAMK,SAAS,GAAG,MAAM;AACtBP,IAAAA,QAAQ,CAACP,qBAAqB,CAACU,UAAD,CAAtB,CAAR;AACD,GAFD;;AAGA,QAAMK,aAAa,GAAG,MAAM;AAC1BR,IAAAA,QAAQ,CAACN,yBAAyB,CAACS,UAAD,CAA1B,CAAR;AACD,GAFD,CArBsB,CAyBtB;;;AAEA,QAAMM,mBAAmB,GAAG,CAACC,UAAD,EAAsBC,MAAtB,KAAyC;AACnE,QAAID,UAAJ,EAAgB;AACdV,MAAAA,QAAQ,CAACL,cAAc,CAACgB,MAAD,CAAf,CAAR;AACD,KAFD,MAEO;AACLX,MAAAA,QAAQ,CAACT,YAAY,CAACoB,MAAD,CAAb,CAAR;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEvB,CAAC,CAACwB;AAAlB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;GAAMhB,S;UAEkBN,W,EAGLD,W;;;KALbO,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport s from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UserPageType,\n  currentPageChengerAC,\n  followUserAC,\n  followUserTC,\n  getUsersTC,\n  nextPagesPaginationAC,\n  previousPagesPaginationAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n  unfollowUserTC,\n} from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSessionStorage } from \"usehooks-ts\";\nimport Preloader from \"../../shared/Preloader\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const dispatch = useDispatch();\n\n  //API \"get\" call\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]);\n\n  //pagination logic\n\n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n  const previousPages = () => {\n    dispatch(previousPagesPaginationAC(pagesCount));\n  };\n\n  //follow / unfollow\n\n  const followButtonHandler = (isFollowed: boolean, userId: number) => {\n    if (isFollowed) {\n      dispatch(unfollowUserTC(userId));\n    } else {\n      dispatch(followUserTC(userId));\n    }\n  };\n\n  return (\n    <div className={s.userPageContainer}>\n\n    </div>\n  );\n};\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}