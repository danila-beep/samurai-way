{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _omit from \"lodash/omit\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nimport _isNil from \"lodash/isNil\";\nimport React, { useState, useRef, useEffect, useCallback, useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { List, AutoSizer } from '../Windowing';\nimport CheckTreeNode from './CheckTreeNode';\nimport TreeContext from '../Tree/TreeContext';\nimport { getKeyParentMap, getPathTowardsItem, getTreeNodeIndent } from '../utils/treeUtils';\nimport { createChainedFunction, useCustom, useClassNames, useControlled, KEY_VALUES, mergeRefs } from '../utils';\nimport { PickerToggle, onMenuKeyDown as _onMenuKeyDown, PickerOverlay, SearchBar, SelectedElement, PickerToggleTrigger, createConcatChildrenFunction, usePickerClassName, usePublicMethods, pickTriggerPropKeys, omitTriggerPropKeys, listPickerPropTypes, useToggleKeyDownEvent } from '../Picker';\nimport { isEveryChildChecked, isSomeNodeHasChildren, isAllSiblingNodeUncheckable, isEveryFirstLevelNodeUncheckable, getFormattedTree, getDisabledState, getCheckTreePickerDefaultValue, getSelectedItems, isNodeUncheckable } from './utils';\nimport { hasVisibleChildren, getExpandWhenSearching, useTreeSearch, useTreeNodeRefs, getDefaultExpandItemValues, useFlattenTreeData, focusNextItem, getFocusableItems, focusPreviousItem, toggleExpand, getActiveItem, useGetTreeNodeChildren, focusToActiveTreeNode, focusTreeNode, leftArrowHandler, rightArrowHandler, isSearching } from '../utils/treeUtils';\nvar emptyArray = [];\n\nvar itemSize = function itemSize() {\n  return 36;\n};\n\nvar CheckTreePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$data = props.data,\n      data = _props$data === void 0 ? emptyArray : _props$data,\n      style = props.style,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$cleanable = props.cleanable,\n      cleanable = _props$cleanable === void 0 ? true : _props$cleanable,\n      _props$countable = props.countable,\n      countable = _props$countable === void 0 ? true : _props$countable,\n      searchBy = props.searchBy,\n      toggleAs = props.toggleAs,\n      searchKeyword = props.searchKeyword,\n      showIndentLine = props.showIndentLine,\n      overrideLocale = props.locale,\n      _props$cascade = props.cascade,\n      cascade = _props$cascade === void 0 ? true : _props$cascade,\n      disabled = props.disabled,\n      _props$valueKey = props.valueKey,\n      valueKey = _props$valueKey === void 0 ? 'value' : _props$valueKey,\n      _props$labelKey = props.labelKey,\n      labelKey = _props$labelKey === void 0 ? 'label' : _props$labelKey,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      _props$childrenKey = props.childrenKey,\n      childrenKey = _props$childrenKey === void 0 ? 'children' : _props$childrenKey,\n      placeholder = props.placeholder,\n      controlledValue = props.value,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? emptyArray : _props$defaultValue,\n      _props$defaultExpandA = props.defaultExpandAll,\n      defaultExpandAll = _props$defaultExpandA === void 0 ? false : _props$defaultExpandA,\n      _props$disabledItemVa = props.disabledItemValues,\n      disabledItemValues = _props$disabledItemVa === void 0 ? emptyArray : _props$disabledItemVa,\n      controlledExpandItemValues = props.expandItemValues,\n      _props$defaultExpandI = props.defaultExpandItemValues,\n      defaultExpandItemValues = _props$defaultExpandI === void 0 ? emptyArray : _props$defaultExpandI,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 360 : _props$height,\n      _props$menuMaxHeight = props.menuMaxHeight,\n      menuMaxHeight = _props$menuMaxHeight === void 0 ? 320 : _props$menuMaxHeight,\n      menuStyle = props.menuStyle,\n      _props$searchable = props.searchable,\n      searchable = _props$searchable === void 0 ? true : _props$searchable,\n      _props$virtualized = props.virtualized,\n      virtualized = _props$virtualized === void 0 ? false : _props$virtualized,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker' : _props$classPrefix,\n      menuClassName = props.menuClassName,\n      _props$menuAutoWidth = props.menuAutoWidth,\n      menuAutoWidth = _props$menuAutoWidth === void 0 ? true : _props$menuAutoWidth,\n      _props$uncheckableIte = props.uncheckableItemValues,\n      uncheckableItemValues = _props$uncheckableIte === void 0 ? emptyArray : _props$uncheckableIte,\n      id = props.id,\n      listProps = props.listProps,\n      renderMenu = props.renderMenu,\n      getChildren = props.getChildren,\n      renderExtraFooter = props.renderExtraFooter,\n      onEntered = props.onEntered,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onExited = props.onExited,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onSelectItem = props.onSelectItem,\n      onOpen = props.onOpen,\n      onScroll = props.onScroll,\n      onExpand = props.onExpand,\n      renderValue = props.renderValue,\n      renderTreeIcon = props.renderTreeIcon,\n      renderTreeNode = props.renderTreeNode,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"data\", \"style\", \"appearance\", \"cleanable\", \"countable\", \"searchBy\", \"toggleAs\", \"searchKeyword\", \"showIndentLine\", \"locale\", \"cascade\", \"disabled\", \"valueKey\", \"labelKey\", \"placement\", \"childrenKey\", \"placeholder\", \"value\", \"defaultValue\", \"defaultExpandAll\", \"disabledItemValues\", \"expandItemValues\", \"defaultExpandItemValues\", \"height\", \"menuMaxHeight\", \"menuStyle\", \"searchable\", \"virtualized\", \"className\", \"classPrefix\", \"menuClassName\", \"menuAutoWidth\", \"uncheckableItemValues\", \"id\", \"listProps\", \"renderMenu\", \"getChildren\", \"renderExtraFooter\", \"onEntered\", \"onChange\", \"onClean\", \"onClose\", \"onExited\", \"onSearch\", \"onSelect\", \"onSelectItem\", \"onOpen\", \"onScroll\", \"onExpand\", \"renderValue\", \"renderTreeIcon\", \"renderTreeNode\"]);\n\n  var _useContext = useContext(TreeContext),\n      inline = _useContext.inline;\n\n  var triggerRef = useRef(null);\n  var targetRef = useRef(null);\n  var listRef = useRef(null);\n  var overlayRef = useRef(null);\n  var searchInputRef = useRef(null);\n  var treeViewRef = useRef(null);\n\n  var _useCustom = useCustom('Picker', overrideLocale),\n      rtl = _useCustom.rtl,\n      locale = _useCustom.locale;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(null),\n      activeNode = _useState2[0],\n      setActiveNode = _useState2[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var _useClassNames2 = useClassNames('check-tree'),\n      checkTreePrefix = _useClassNames2.prefix,\n      withCheckTreeClassPrefix = _useClassNames2.withClassPrefix;\n\n  var _useControlled = useControlled(controlledValue, defaultValue),\n      value = _useControlled[0],\n      setValue = _useControlled[1],\n      isControlled = _useControlled[2];\n\n  var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey),\n      treeData = _useGetTreeNodeChildr.data,\n      setTreeData = _useGetTreeNodeChildr.setData,\n      loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues,\n      loadChildren = _useGetTreeNodeChildr.loadChildren;\n\n  var _useControlled2 = useControlled(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {\n    defaultExpandAll: defaultExpandAll,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    defaultExpandItemValues: defaultExpandItemValues\n  })),\n      expandItemValues = _useControlled2[0],\n      setExpandItemValues = _useControlled2[1];\n\n  var _useState3 = useState(null),\n      focusItemValue = _useState3[0],\n      setFocusItemValue = _useState3[1];\n\n  var _useFlattenTreeData = useFlattenTreeData({\n    data: treeData,\n    labelKey: labelKey,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    uncheckableItemValues: uncheckableItemValues,\n    callback: function callback(nodes) {\n      // after flattenData, always unSerialize check property value\n      unSerializeList({\n        nodes: nodes,\n        key: 'check',\n        value: value,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      forceUpdate();\n    }\n  }),\n      flattenNodes = _useFlattenTreeData.flattenNodes,\n      forceUpdate = _useFlattenTreeData.forceUpdate,\n      formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData,\n      serializeListOnlyParent = _useFlattenTreeData.serializeListOnlyParent,\n      unSerializeList = _useFlattenTreeData.unSerializeList;\n\n  var _useTreeSearch = useTreeSearch({\n    labelKey: labelKey,\n    childrenKey: childrenKey,\n    searchKeyword: searchKeyword,\n    data: treeData,\n    searchBy: searchBy,\n    callback: function callback(searchKeyword, _filterData, event) {\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword, event);\n    }\n  }),\n      filteredData = _useTreeSearch.filteredData,\n      searchKeywordState = _useTreeSearch.searchKeywordState,\n      setSearchKeyword = _useTreeSearch.setSearchKeyword,\n      handleSearch = _useTreeSearch.handleSearch,\n      setFilteredData = _useTreeSearch.setFilteredData;\n\n  var _useTreeNodeRefs = useTreeNodeRefs(),\n      treeNodesRefs = _useTreeNodeRefs.treeNodesRefs,\n      saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;\n  /**\n   * get formatted nodes for render tree\n   * @params render - renderNode function. only used when virtualized setting false\n   */\n\n\n  var getFormattedNodes = useCallback(function (render) {\n    if (virtualized) {\n      return formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, {\n        cascade: cascade,\n        searchKeyword: searchKeywordState\n      }).filter(function (item) {\n        return item.visible;\n      });\n    }\n\n    return getFormattedTree(filteredData, flattenNodes, {\n      childrenKey: childrenKey,\n      cascade: cascade\n    }).map(function (node) {\n      return render === null || render === void 0 ? void 0 : render(node, 1);\n    });\n  }, [searchKeywordState, expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized, childrenKey, cascade]);\n\n  var getTreeNodeProps = function getTreeNodeProps(node, layer) {\n    return {\n      as: Component,\n      rtl: rtl,\n      value: node[valueKey],\n      label: node[labelKey],\n      layer: layer,\n      focus: focusItemValue === node[valueKey],\n      expand: node.expand,\n      visible: node.visible,\n      loading: loadingNodeValues.some(function (item) {\n        return item === node[valueKey];\n      }),\n      disabled: getDisabledState(flattenNodes, node, {\n        disabledItemValues: disabledItemValues,\n        valueKey: valueKey\n      }),\n      nodeData: node,\n      checkState: node.checkState,\n      uncheckable: isNodeUncheckable(node, {\n        uncheckableItemValues: uncheckableItemValues,\n        valueKey: valueKey\n      }),\n      allUncheckable: isAllSiblingNodeUncheckable(node, flattenNodes, uncheckableItemValues, valueKey),\n      onSelect: handleSelect,\n      onExpand: handleExpand,\n      onRenderTreeNode: renderTreeNode,\n      onRenderTreeIcon: renderTreeIcon\n    };\n  };\n\n  var focusActiveNode = useCallback(function () {\n    if (listRef.current) {\n      focusToActiveTreeNode({\n        list: listRef.current,\n        valueKey: valueKey,\n        selector: \".\" + checkTreePrefix('node-active'),\n        activeNode: activeNode,\n        virtualized: virtualized,\n        container: treeViewRef.current,\n        formattedNodes: getFormattedNodes()\n      });\n    }\n  }, [checkTreePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);\n  useEffect(function () {\n    setValue(getCheckTreePickerDefaultValue(value, uncheckableItemValues));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setFilteredData(data, searchKeywordState);\n    setTreeData(data);\n  }, [data, searchKeywordState, setFilteredData, setTreeData]);\n  useEffect(function () {\n    setFilteredData(treeData, searchKeywordState);\n  }, [treeData, searchKeywordState, setFilteredData]);\n  useEffect(function () {\n    if (Array.isArray(controlledExpandItemValues)) {\n      setExpandItemValues(controlledExpandItemValues);\n    }\n  }, [controlledExpandItemValues, setExpandItemValues]);\n  useEffect(function () {\n    setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : '');\n  }, [searchKeyword, setSearchKeyword]);\n  useEffect(function () {\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: value,\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    forceUpdate();\n  }, [cascade, value, uncheckableItemValues, unSerializeList, flattenNodes, forceUpdate]);\n  var toggleUpChecked = useCallback(function (nodes, node, checked) {\n    var currentNode = node.refKey ? nodes[node.refKey] : null;\n\n    if (cascade && currentNode) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(nodes, currentNode)) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n\n      if (currentNode.parent) {\n        toggleUpChecked(nodes, currentNode.parent, checked);\n      }\n    }\n  }, [cascade]);\n  var toggleDownChecked = useCallback(function (nodes, node, isChecked) {\n    var currentNode = node.refKey ? nodes[node.refKey] : null;\n\n    if (!currentNode) {\n      return;\n    }\n\n    currentNode.check = isChecked;\n\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        toggleDownChecked(nodes, child, isChecked);\n      });\n    }\n  }, [cascade, childrenKey]);\n  var toggleChecked = useCallback(function (node, isChecked) {\n    var nodes = _cloneDeep(flattenNodes);\n\n    toggleDownChecked(nodes, node, isChecked);\n    node.parent && toggleUpChecked(nodes, node.parent, isChecked);\n    var values = serializeListOnlyParent(nodes, 'check'); // filter uncheckableItemValues\n\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  }, [flattenNodes, uncheckableItemValues, serializeListOnlyParent, toggleDownChecked, toggleUpChecked]); // TODO-Doma\n  // Replace `getKeyParentMap` with `getParentMap`\n\n  var itemParentMap = useMemo(function () {\n    return getKeyParentMap(data, function (node) {\n      return node[valueKey];\n    }, function (node) {\n      return node[childrenKey];\n    });\n  }, [childrenKey, data, valueKey]);\n  var handleSelect = useCallback(function (node, event) {\n    var currentNode = node.refKey ? flattenNodes[node.refKey] : null;\n\n    if (!node || !currentNode) {\n      return;\n    }\n\n    var selectedValues = toggleChecked(node, !currentNode.check);\n\n    if (!isControlled) {\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: selectedValues,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      setValue(selectedValues);\n    }\n\n    setActiveNode(node);\n    setFocusItemValue(node[valueKey]);\n    onChange === null || onChange === void 0 ? void 0 : onChange(selectedValues, event);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, selectedValues, event);\n    onSelectItem === null || onSelectItem === void 0 ? void 0 : onSelectItem(node, getPathTowardsItem(node, function (item) {\n      return itemParentMap.get(item[valueKey]);\n    }));\n  }, [flattenNodes, toggleChecked, isControlled, valueKey, onChange, onSelect, onSelectItem, unSerializeList, cascade, uncheckableItemValues, setValue, itemParentMap]);\n  var handleOpen = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$o;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$o = _triggerRef$current.open) === null || _triggerRef$current$o === void 0 ? void 0 : _triggerRef$current$o.call(_triggerRef$current);\n    setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);\n    focusActiveNode();\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setActive(true);\n  }, [activeNode, focusActiveNode, onOpen, valueKey]);\n  var handleClose = useCallback(function () {\n    var _triggerRef$current2, _triggerRef$current2$, _targetRef$current;\n\n    (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.close) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);\n    setSearchKeyword('');\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setFocusItemValue(null);\n    setActive(false);\n    /**\n     * when using keyboard toggle picker, should refocus on PickerToggle Component after close picker menu\n     */\n\n    (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();\n  }, [onClose, setSearchKeyword]);\n  var handleExpand = useCallback(function (node) {\n    var nextExpandItemValues = toggleExpand({\n      node: node,\n      isExpand: !node.expand,\n      expandItemValues: expandItemValues,\n      valueKey: valueKey\n    });\n    setExpandItemValues(nextExpandItemValues);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node, createConcatChildrenFunction(node, node[valueKey], {\n      valueKey: valueKey,\n      childrenKey: childrenKey\n    }));\n\n    if (_isFunction(getChildren) && !node.expand && Array.isArray(node[childrenKey]) && node[childrenKey].length === 0) {\n      loadChildren(node, getChildren);\n    }\n  }, [childrenKey, expandItemValues, getChildren, loadChildren, onExpand, setExpandItemValues, valueKey]);\n  usePublicMethods(ref, {\n    rootRef: inline ? treeViewRef : undefined,\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef,\n    listRef: listRef,\n    inline: inline\n  });\n  var handleClean = useCallback(function (event) {\n    var target = event.target; // exclude searchBar\n\n    if (target.matches('div[role=\"searchbox\"] > input') || disabled || !cleanable) {\n      return;\n    }\n\n    setActiveNode(null);\n    setFocusItemValue(null);\n\n    if (!isControlled) {\n      setValue([]);\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: [],\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange([], event);\n  }, [cascade, cleanable, disabled, flattenNodes, onChange, setValue, unSerializeList, uncheckableItemValues, isControlled]);\n  var handleFocusItem = useCallback(function (key) {\n    var focusableItems = getFocusableItems(filteredData, {\n      disabledItemValues: disabledItemValues,\n      valueKey: valueKey,\n      childrenKey: childrenKey,\n      expandItemValues: expandItemValues\n    }, isSearching(searchKeywordState));\n    var selector = \".\" + checkTreePrefix('node-label');\n    var focusProps = {\n      focusItemValue: focusItemValue,\n      focusableItems: focusableItems,\n      treeNodesRefs: treeNodesRefs,\n      selector: selector,\n      valueKey: valueKey,\n      callback: function callback(nextFocusItemValue) {\n        setFocusItemValue(nextFocusItemValue);\n      }\n    };\n\n    if (key === KEY_VALUES.DOWN) {\n      focusNextItem(focusProps);\n      return;\n    }\n\n    if (key === KEY_VALUES.UP) {\n      focusPreviousItem(focusProps);\n    }\n  }, [searchKeywordState, checkTreePrefix, expandItemValues, filteredData, focusItemValue, treeNodesRefs, childrenKey, valueKey, disabledItemValues]);\n  var handleLeftArrow = useCallback(function () {\n    if (_isNil(focusItemValue)) return;\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    leftArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      onExpand: handleExpand,\n      childrenKey: childrenKey,\n      onFocusItem: function onFocusItem() {\n        var _focusItem$parent, _focusItem$parent2;\n\n        setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);\n        focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, \".\" + checkTreePrefix('node-label'));\n      }\n    });\n  }, [checkTreePrefix, expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, valueKey, childrenKey]);\n  var handleRightArrow = useCallback(function () {\n    if (_isNil(focusItemValue)) return;\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    rightArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      childrenKey: childrenKey,\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        handleFocusItem(KEY_VALUES.DOWN);\n      }\n    });\n  }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);\n  var selectActiveItem = useCallback(function (event) {\n    if (_isNil(focusItemValue)) return;\n    var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n\n    if (!isNodeUncheckable(activeItem, {\n      uncheckableItemValues: uncheckableItemValues,\n      valueKey: valueKey\n    }) && activeItem !== null) {\n      handleSelect(activeItem, event);\n    }\n  }, [flattenNodes, focusItemValue, handleSelect, uncheckableItemValues, valueKey]);\n  var onPickerKeydown = useToggleKeyDownEvent({\n    toggle: !focusItemValue || !active,\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    searchInputRef: searchInputRef,\n    active: active,\n    onExit: handleClean,\n    onClose: handleClose,\n    onMenuKeyDown: function onMenuKeyDown(event) {\n      _onMenuKeyDown(event, {\n        down: function down() {\n          return handleFocusItem(KEY_VALUES.DOWN);\n        },\n        up: function up() {\n          return handleFocusItem(KEY_VALUES.UP);\n        },\n        left: rtl ? handleRightArrow : handleLeftArrow,\n        right: rtl ? handleLeftArrow : handleRightArrow,\n        enter: selectActiveItem,\n        del: handleClean\n      });\n    }\n  });\n  var handleTreeKeydown = useCallback(function (event) {\n    if (!treeViewRef.current) {\n      return;\n    }\n\n    _onMenuKeyDown(event, {\n      down: function down() {\n        return handleFocusItem(KEY_VALUES.DOWN);\n      },\n      up: function up() {\n        return handleFocusItem(KEY_VALUES.UP);\n      },\n      left: rtl ? handleRightArrow : handleLeftArrow,\n      right: rtl ? handleLeftArrow : handleRightArrow,\n      enter: selectActiveItem\n    });\n  }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);\n\n  var renderNode = function renderNode(node, layer) {\n    var visible = node.visible,\n        refKey = node.refKey; // when searching, all nodes should be expand\n\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    if (!visible) {\n      return null;\n    }\n\n    var children = node[childrenKey];\n    var visibleChildren = _isUndefined(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node, childrenKey);\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      /**\n       * spread operator don't copy unenumerable properties\n       * so we need to copy them manually\n       */\n      parent: node.parent,\n      expand: expand\n    }), layer), {\n      hasChildren: visibleChildren\n    });\n\n    if (nodeProps.hasChildren) {\n      var _merge;\n\n      layer += 1;\n      var openClass = checkTreePrefix('open');\n      var childrenClass = merge(checkTreePrefix('node-children'), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));\n      var nodes = children || [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: childrenClass,\n        key: node[valueKey]\n      }, /*#__PURE__*/React.createElement(CheckTreeNode, _extends({}, nodeProps, {\n        ref: function ref(_ref) {\n          return saveTreeNodeRef(_ref, refKey);\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: checkTreePrefix('children')\n      }, nodes.map(function (child) {\n        return renderNode(child, layer);\n      }), showIndentLine && /*#__PURE__*/React.createElement(\"span\", {\n        className: checkTreePrefix('indent-line'),\n        style: getTreeNodeIndent(rtl, layer - 1, true)\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      key: node[valueKey],\n      ref: function ref(_ref2) {\n        return saveTreeNodeRef(_ref2, refKey);\n      }\n    }, nodeProps));\n  };\n\n  var renderVirtualListNode = function renderVirtualListNode(_ref3) {\n    var index = _ref3.index,\n        style = _ref3.style,\n        data = _ref3.data;\n    var node = data[index];\n    var layer = node.layer,\n        refKey = node.refKey,\n        visible = node.visible;\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      /**\n       * spread operator don't copy unenumerable properties\n       * so we need to copy them manually\n       */\n      parent: node.parent,\n      expand: expand\n    }), layer), {\n      hasChildren: node.hasChildren\n    });\n\n    return visible && /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      style: style,\n      ref: function ref(_ref4) {\n        return saveTreeNodeRef(_ref4, refKey);\n      }\n    }, nodeProps));\n  };\n\n  var renderCheckTree = function renderCheckTree() {\n    var _withCheckTreeClassPr, _merge2;\n\n    var classes = withCheckTreeClassPrefix((_withCheckTreeClassPr = {}, _withCheckTreeClassPr[className !== null && className !== void 0 ? className : ''] = inline, _withCheckTreeClassPr['without-children'] = !isSomeNodeHasChildren(data, childrenKey), _withCheckTreeClassPr.virtualized = virtualized, _withCheckTreeClassPr));\n    var formattedNodes = getFormattedNodes(renderNode);\n\n    if (!formattedNodes.some(function (v) {\n      return v !== null;\n    })) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('none')\n      }, locale.noResultsText);\n    }\n\n    var treeNodesClass = merge(checkTreePrefix('nodes'), (_merge2 = {}, _merge2[checkTreePrefix('all-uncheckable')] = isEveryFirstLevelNodeUncheckable(flattenNodes, uncheckableItemValues, valueKey), _merge2));\n    var styles = inline ? _extends({\n      height: height\n    }, style) : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id ? id + \"-listbox\" : undefined,\n      ref: treeViewRef,\n      role: \"tree\",\n      \"aria-multiselectable\": true,\n      className: classes,\n      style: styles,\n      onScroll: onScroll,\n      onKeyDown: inline ? handleTreeKeydown : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: treeNodesClass\n    }, virtualized ? /*#__PURE__*/React.createElement(AutoSizer, {\n      defaultHeight: inline ? height : menuMaxHeight,\n      style: {\n        width: 'auto',\n        height: 'auto'\n      }\n    }, function (_ref5) {\n      var height = _ref5.height;\n      return /*#__PURE__*/React.createElement(List, _extends({\n        ref: listRef,\n        height: height,\n        itemSize: itemSize,\n        itemCount: formattedNodes.length,\n        itemData: formattedNodes\n      }, listProps), renderVirtualListNode);\n    }) : formattedNodes));\n  };\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = classNames(className, menuClassName, prefix('check-tree-menu'));\n\n    var mergedMenuStyle = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      autoWidth: menuAutoWidth,\n      className: classes,\n      style: mergedMenuStyle,\n      ref: mergeRefs(overlayRef, speakerRef),\n      onKeyDown: onPickerKeydown,\n      target: triggerRef\n    }, searchable ? /*#__PURE__*/React.createElement(SearchBar, {\n      placeholder: locale.searchPlaceholder,\n      onChange: handleSearch,\n      value: searchKeywordState,\n      inputRef: searchInputRef\n    }) : null, renderMenu ? renderMenu(renderCheckTree()) : renderCheckTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());\n  };\n\n  var selectedItems = useMemo(function () {\n    return getSelectedItems(flattenNodes, value);\n  }, [flattenNodes, value]);\n  /**\n   * 1.Have a value and the value is valid.\n   * 2.Regardless of whether the value is valid, as long as renderValue is set, it is judged to have a value.\n   */\n\n  var hasValidValue = selectedItems.length > 0 || value.length > 0 && _isFunction(renderValue);\n\n  var selectedElement = placeholder;\n\n  if (hasValidValue) {\n    selectedElement = /*#__PURE__*/React.createElement(SelectedElement, {\n      selectedItems: selectedItems,\n      countable: countable,\n      valueKey: valueKey,\n      labelKey: labelKey,\n      childrenKey: childrenKey,\n      prefix: prefix,\n      cascade: cascade,\n      locale: locale\n    });\n\n    if (_isFunction(renderValue)) {\n      selectedElement = renderValue(value, selectedItems, selectedElement);\n\n      if (_isNil(selectedElement)) {\n        hasValidValue = false;\n      }\n    }\n  }\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    classPrefix: classPrefix,\n    appearance: appearance,\n    countable: countable,\n    cleanable: cleanable,\n    disabled: disabled,\n    hasValue: hasValidValue,\n    name: 'check-tree'\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  if (inline) {\n    return renderCheckTree();\n  }\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: _pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: handleOpen,\n    onEntered: onEntered,\n    onExited: createChainedFunction(handleClose, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, _omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {\n    id: id,\n    ref: targetRef,\n    appearance: appearance,\n    onKeyDown: onPickerKeydown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    disabled: disabled,\n    as: toggleAs,\n    hasValue: hasValidValue,\n    active: active,\n    placement: placement,\n    inputValue: value\n  }), selectedElement || locale.placeholder)));\n});\nCheckTreePicker.displayName = 'CheckTreePicker';\nCheckTreePicker.propTypes = _extends({}, listPickerPropTypes, {\n  height: PropTypes.number,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  locale: PropTypes.any,\n  cascade: PropTypes.bool,\n  countable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  virtualized: PropTypes.bool,\n  searchKeyword: PropTypes.string,\n  menuAutoWidth: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  disabledItemValues: PropTypes.array,\n  expandItemValues: PropTypes.array,\n  defaultExpandItemValues: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  onSearch: PropTypes.func,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderMenu: PropTypes.func,\n  renderTreeNode: PropTypes.func,\n  renderTreeIcon: PropTypes.func,\n  searchBy: PropTypes.func,\n  onScroll: PropTypes.func\n});\nexport default CheckTreePicker;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/rsuite/esm/CheckTreePicker/CheckTreePicker.js"],"names":["_extends","_objectWithoutPropertiesLoose","_isUndefined","_cloneDeep","_omit","_isFunction","_pick","_isNil","React","useState","useRef","useEffect","useCallback","useContext","useMemo","PropTypes","classNames","List","AutoSizer","CheckTreeNode","TreeContext","getKeyParentMap","getPathTowardsItem","getTreeNodeIndent","createChainedFunction","useCustom","useClassNames","useControlled","KEY_VALUES","mergeRefs","PickerToggle","onMenuKeyDown","_onMenuKeyDown","PickerOverlay","SearchBar","SelectedElement","PickerToggleTrigger","createConcatChildrenFunction","usePickerClassName","usePublicMethods","pickTriggerPropKeys","omitTriggerPropKeys","listPickerPropTypes","useToggleKeyDownEvent","isEveryChildChecked","isSomeNodeHasChildren","isAllSiblingNodeUncheckable","isEveryFirstLevelNodeUncheckable","getFormattedTree","getDisabledState","getCheckTreePickerDefaultValue","getSelectedItems","isNodeUncheckable","hasVisibleChildren","getExpandWhenSearching","useTreeSearch","useTreeNodeRefs","getDefaultExpandItemValues","useFlattenTreeData","focusNextItem","getFocusableItems","focusPreviousItem","toggleExpand","getActiveItem","useGetTreeNodeChildren","focusToActiveTreeNode","focusTreeNode","leftArrowHandler","rightArrowHandler","isSearching","emptyArray","itemSize","CheckTreePicker","forwardRef","props","ref","_props$as","as","Component","_props$data","data","style","_props$appearance","appearance","_props$cleanable","cleanable","_props$countable","countable","searchBy","toggleAs","searchKeyword","showIndentLine","overrideLocale","locale","_props$cascade","cascade","disabled","_props$valueKey","valueKey","_props$labelKey","labelKey","_props$placement","placement","_props$childrenKey","childrenKey","placeholder","controlledValue","value","_props$defaultValue","defaultValue","_props$defaultExpandA","defaultExpandAll","_props$disabledItemVa","disabledItemValues","controlledExpandItemValues","expandItemValues","_props$defaultExpandI","defaultExpandItemValues","_props$height","height","_props$menuMaxHeight","menuMaxHeight","menuStyle","_props$searchable","searchable","_props$virtualized","virtualized","className","_props$classPrefix","classPrefix","menuClassName","_props$menuAutoWidth","menuAutoWidth","_props$uncheckableIte","uncheckableItemValues","id","listProps","renderMenu","getChildren","renderExtraFooter","onEntered","onChange","onClean","onClose","onExited","onSearch","onSelect","onSelectItem","onOpen","onScroll","onExpand","renderValue","renderTreeIcon","renderTreeNode","rest","_useContext","inline","triggerRef","targetRef","listRef","overlayRef","searchInputRef","treeViewRef","_useCustom","rtl","_useState","active","setActive","_useState2","activeNode","setActiveNode","_useClassNames","prefix","merge","_useClassNames2","checkTreePrefix","withCheckTreeClassPrefix","withClassPrefix","_useControlled","setValue","isControlled","_useGetTreeNodeChildr","treeData","setTreeData","setData","loadingNodeValues","loadChildren","_useControlled2","setExpandItemValues","_useState3","focusItemValue","setFocusItemValue","_useFlattenTreeData","callback","nodes","unSerializeList","key","forceUpdate","flattenNodes","formatVirtualizedTreeData","serializeListOnlyParent","_useTreeSearch","_filterData","event","filteredData","searchKeywordState","setSearchKeyword","handleSearch","setFilteredData","_useTreeNodeRefs","treeNodesRefs","saveTreeNodeRef","getFormattedNodes","render","filter","item","visible","map","node","getTreeNodeProps","layer","label","focus","expand","loading","some","nodeData","checkState","uncheckable","allUncheckable","handleSelect","handleExpand","onRenderTreeNode","onRenderTreeIcon","focusActiveNode","current","list","selector","container","formattedNodes","Array","isArray","toggleUpChecked","checked","currentNode","refKey","check","checkAll","parent","toggleDownChecked","isChecked","length","forEach","child","toggleChecked","values","v","includes","itemParentMap","selectedValues","get","handleOpen","_triggerRef$current","_triggerRef$current$o","open","call","handleClose","_triggerRef$current2","_triggerRef$current2$","_targetRef$current","close","nextExpandItemValues","isExpand","rootRef","undefined","handleClean","target","matches","handleFocusItem","focusableItems","focusProps","nextFocusItemValue","DOWN","UP","handleLeftArrow","focusItem","onFocusItem","_focusItem$parent","_focusItem$parent2","handleRightArrow","selectActiveItem","activeItem","onPickerKeydown","toggle","onExit","down","up","left","right","enter","del","handleTreeKeydown","renderNode","children","visibleChildren","nodeProps","hasChildren","_merge","openClass","childrenClass","createElement","_ref","_ref2","renderVirtualListNode","_ref3","index","_ref4","renderCheckTree","_withCheckTreeClassPr","_merge2","classes","noResultsText","treeNodesClass","styles","role","onKeyDown","defaultHeight","width","_ref5","itemCount","itemData","renderDropdownMenu","positionProps","speakerRef","top","mergedMenuStyle","autoWidth","searchPlaceholder","inputRef","selectedItems","hasValidValue","selectedElement","_usePickerClassName","hasValue","name","usedClassNamePropKeys","pickerProps","onEnter","speaker","concat","inputValue","displayName","propTypes","number","oneOf","any","bool","string","containerPadding","array","func"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,WAA7C,EAA0DC,UAA1D,EAAsEC,OAAtE,QAAqF,OAArF;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,cAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,iBAA9C,QAAuE,oBAAvE;AACA,SAASC,qBAAT,EAAgCC,SAAhC,EAA2CC,aAA3C,EAA0DC,aAA1D,EAAyEC,UAAzE,EAAqFC,SAArF,QAAsG,UAAtG;AACA,SAASC,YAAT,EAAuBC,aAAa,IAAIC,cAAxC,EAAwDC,aAAxD,EAAuEC,SAAvE,EAAkFC,eAAlF,EAAmGC,mBAAnG,EAAwHC,4BAAxH,EAAsJC,kBAAtJ,EAA0KC,gBAA1K,EAA4LC,mBAA5L,EAAiNC,mBAAjN,EAAsOC,mBAAtO,EAA2PC,qBAA3P,QAAwR,WAAxR;AACA,SAASC,mBAAT,EAA8BC,qBAA9B,EAAqDC,2BAArD,EAAkFC,gCAAlF,EAAoHC,gBAApH,EAAsIC,gBAAtI,EAAwJC,8BAAxJ,EAAwLC,gBAAxL,EAA0MC,iBAA1M,QAAmO,SAAnO;AACA,SAASC,kBAAT,EAA6BC,sBAA7B,EAAqDC,aAArD,EAAoEC,eAApE,EAAqFC,0BAArF,EAAiHC,kBAAjH,EAAqIC,aAArI,EAAoJC,iBAApJ,EAAuKC,iBAAvK,EAA0LC,YAA1L,EAAwMC,aAAxM,EAAuNC,sBAAvN,EAA+OC,qBAA/O,EAAsQC,aAAtQ,EAAqRC,gBAArR,EAAuSC,iBAAvS,EAA0TC,WAA1T,QAA6U,oBAA7U;AACA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjC,SAAO,EAAP;AACD,CAFD;;AAIA,IAAIC,eAAe,GAAG,aAAahE,KAAK,CAACiE,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACxE,MAAIC,SAAS,GAAGF,KAAK,CAACG,EAAtB;AAAA,MACIC,SAAS,GAAGF,SAAS,KAAK,KAAK,CAAnB,GAAuB,KAAvB,GAA+BA,SAD/C;AAAA,MAEIG,WAAW,GAAGL,KAAK,CAACM,IAFxB;AAAA,MAGIA,IAAI,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyBT,UAAzB,GAAsCS,WAHjD;AAAA,MAIIE,KAAK,GAAGP,KAAK,CAACO,KAJlB;AAAA,MAKIC,iBAAiB,GAAGR,KAAK,CAACS,UAL9B;AAAA,MAMIA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,SAA/B,GAA2CA,iBAN5D;AAAA,MAOIE,gBAAgB,GAAGV,KAAK,CAACW,SAP7B;AAAA,MAQIA,SAAS,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,IAA9B,GAAqCA,gBARrD;AAAA,MASIE,gBAAgB,GAAGZ,KAAK,CAACa,SAT7B;AAAA,MAUIA,SAAS,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,IAA9B,GAAqCA,gBAVrD;AAAA,MAWIE,QAAQ,GAAGd,KAAK,CAACc,QAXrB;AAAA,MAYIC,QAAQ,GAAGf,KAAK,CAACe,QAZrB;AAAA,MAaIC,aAAa,GAAGhB,KAAK,CAACgB,aAb1B;AAAA,MAcIC,cAAc,GAAGjB,KAAK,CAACiB,cAd3B;AAAA,MAeIC,cAAc,GAAGlB,KAAK,CAACmB,MAf3B;AAAA,MAgBIC,cAAc,GAAGpB,KAAK,CAACqB,OAhB3B;AAAA,MAiBIA,OAAO,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,IAA5B,GAAmCA,cAjBjD;AAAA,MAkBIE,QAAQ,GAAGtB,KAAK,CAACsB,QAlBrB;AAAA,MAmBIC,eAAe,GAAGvB,KAAK,CAACwB,QAnB5B;AAAA,MAoBIA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,OAA7B,GAAuCA,eApBtD;AAAA,MAqBIE,eAAe,GAAGzB,KAAK,CAAC0B,QArB5B;AAAA,MAsBIA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,OAA7B,GAAuCA,eAtBtD;AAAA,MAuBIE,gBAAgB,GAAG3B,KAAK,CAAC4B,SAvB7B;AAAA,MAwBIA,SAAS,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,aAA9B,GAA8CA,gBAxB9D;AAAA,MAyBIE,kBAAkB,GAAG7B,KAAK,CAAC8B,WAzB/B;AAAA,MA0BIA,WAAW,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,UAAhC,GAA6CA,kBA1B/D;AAAA,MA2BIE,WAAW,GAAG/B,KAAK,CAAC+B,WA3BxB;AAAA,MA4BIC,eAAe,GAAGhC,KAAK,CAACiC,KA5B5B;AAAA,MA6BIC,mBAAmB,GAAGlC,KAAK,CAACmC,YA7BhC;AAAA,MA8BIA,YAAY,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiCtC,UAAjC,GAA8CsC,mBA9BjE;AAAA,MA+BIE,qBAAqB,GAAGpC,KAAK,CAACqC,gBA/BlC;AAAA,MAgCIA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBAhClE;AAAA,MAiCIE,qBAAqB,GAAGtC,KAAK,CAACuC,kBAjClC;AAAA,MAkCIA,kBAAkB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC1C,UAAnC,GAAgD0C,qBAlCzE;AAAA,MAmCIE,0BAA0B,GAAGxC,KAAK,CAACyC,gBAnCvC;AAAA,MAoCIC,qBAAqB,GAAG1C,KAAK,CAAC2C,uBApClC;AAAA,MAqCIA,uBAAuB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC9C,UAAnC,GAAgD8C,qBArC9E;AAAA,MAsCIE,aAAa,GAAG5C,KAAK,CAAC6C,MAtC1B;AAAA,MAuCIA,MAAM,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,GAA3B,GAAiCA,aAvC9C;AAAA,MAwCIE,oBAAoB,GAAG9C,KAAK,CAAC+C,aAxCjC;AAAA,MAyCIA,aAAa,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,GAAlC,GAAwCA,oBAzC5D;AAAA,MA0CIE,SAAS,GAAGhD,KAAK,CAACgD,SA1CtB;AAAA,MA2CIC,iBAAiB,GAAGjD,KAAK,CAACkD,UA3C9B;AAAA,MA4CIA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,IAA/B,GAAsCA,iBA5CvD;AAAA,MA6CIE,kBAAkB,GAAGnD,KAAK,CAACoD,WA7C/B;AAAA,MA8CIA,WAAW,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,KAAhC,GAAwCA,kBA9C1D;AAAA,MA+CIE,SAAS,GAAGrD,KAAK,CAACqD,SA/CtB;AAAA,MAgDIC,kBAAkB,GAAGtD,KAAK,CAACuD,WAhD/B;AAAA,MAiDIA,WAAW,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,QAAhC,GAA2CA,kBAjD7D;AAAA,MAkDIE,aAAa,GAAGxD,KAAK,CAACwD,aAlD1B;AAAA,MAmDIC,oBAAoB,GAAGzD,KAAK,CAAC0D,aAnDjC;AAAA,MAoDIA,aAAa,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,IAAlC,GAAyCA,oBApD7D;AAAA,MAqDIE,qBAAqB,GAAG3D,KAAK,CAAC4D,qBArDlC;AAAA,MAsDIA,qBAAqB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC/D,UAAnC,GAAgD+D,qBAtD5E;AAAA,MAuDIE,EAAE,GAAG7D,KAAK,CAAC6D,EAvDf;AAAA,MAwDIC,SAAS,GAAG9D,KAAK,CAAC8D,SAxDtB;AAAA,MAyDIC,UAAU,GAAG/D,KAAK,CAAC+D,UAzDvB;AAAA,MA0DIC,WAAW,GAAGhE,KAAK,CAACgE,WA1DxB;AAAA,MA2DIC,iBAAiB,GAAGjE,KAAK,CAACiE,iBA3D9B;AAAA,MA4DIC,SAAS,GAAGlE,KAAK,CAACkE,SA5DtB;AAAA,MA6DIC,QAAQ,GAAGnE,KAAK,CAACmE,QA7DrB;AAAA,MA8DIC,OAAO,GAAGpE,KAAK,CAACoE,OA9DpB;AAAA,MA+DIC,OAAO,GAAGrE,KAAK,CAACqE,OA/DpB;AAAA,MAgEIC,QAAQ,GAAGtE,KAAK,CAACsE,QAhErB;AAAA,MAiEIC,QAAQ,GAAGvE,KAAK,CAACuE,QAjErB;AAAA,MAkEIC,QAAQ,GAAGxE,KAAK,CAACwE,QAlErB;AAAA,MAmEIC,YAAY,GAAGzE,KAAK,CAACyE,YAnEzB;AAAA,MAoEIC,MAAM,GAAG1E,KAAK,CAAC0E,MApEnB;AAAA,MAqEIC,QAAQ,GAAG3E,KAAK,CAAC2E,QArErB;AAAA,MAsEIC,QAAQ,GAAG5E,KAAK,CAAC4E,QAtErB;AAAA,MAuEIC,WAAW,GAAG7E,KAAK,CAAC6E,WAvExB;AAAA,MAwEIC,cAAc,GAAG9E,KAAK,CAAC8E,cAxE3B;AAAA,MAyEIC,cAAc,GAAG/E,KAAK,CAAC+E,cAzE3B;AAAA,MA0EIC,IAAI,GAAGzJ,6BAA6B,CAACyE,KAAD,EAAQ,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,YAAxB,EAAsC,WAAtC,EAAmD,WAAnD,EAAgE,UAAhE,EAA4E,UAA5E,EAAwF,eAAxF,EAAyG,gBAAzG,EAA2H,QAA3H,EAAqI,SAArI,EAAgJ,UAAhJ,EAA4J,UAA5J,EAAwK,UAAxK,EAAoL,WAApL,EAAiM,aAAjM,EAAgN,aAAhN,EAA+N,OAA/N,EAAwO,cAAxO,EAAwP,kBAAxP,EAA4Q,oBAA5Q,EAAkS,kBAAlS,EAAsT,yBAAtT,EAAiV,QAAjV,EAA2V,eAA3V,EAA4W,WAA5W,EAAyX,YAAzX,EAAuY,aAAvY,EAAsZ,WAAtZ,EAAma,aAAna,EAAkb,eAAlb,EAAmc,eAAnc,EAAod,uBAApd,EAA6e,IAA7e,EAAmf,WAAnf,EAAggB,YAAhgB,EAA8gB,aAA9gB,EAA6hB,mBAA7hB,EAAkjB,WAAljB,EAA+jB,UAA/jB,EAA2kB,SAA3kB,EAAslB,SAAtlB,EAAimB,UAAjmB,EAA6mB,UAA7mB,EAAynB,UAAznB,EAAqoB,cAAroB,EAAqpB,QAArpB,EAA+pB,UAA/pB,EAA2qB,UAA3qB,EAAurB,aAAvrB,EAAssB,gBAAtsB,EAAwtB,gBAAxtB,CAAR,CA1ExC;;AA4EA,MAAIiF,WAAW,GAAG9I,UAAU,CAACO,WAAD,CAA5B;AAAA,MACIwI,MAAM,GAAGD,WAAW,CAACC,MADzB;;AAGA,MAAIC,UAAU,GAAGnJ,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIoJ,SAAS,GAAGpJ,MAAM,CAAC,IAAD,CAAtB;AACA,MAAIqJ,OAAO,GAAGrJ,MAAM,CAAC,IAAD,CAApB;AACA,MAAIsJ,UAAU,GAAGtJ,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIuJ,cAAc,GAAGvJ,MAAM,CAAC,IAAD,CAA3B;AACA,MAAIwJ,WAAW,GAAGxJ,MAAM,CAAC,IAAD,CAAxB;;AAEA,MAAIyJ,UAAU,GAAG1I,SAAS,CAAC,QAAD,EAAWmE,cAAX,CAA1B;AAAA,MACIwE,GAAG,GAAGD,UAAU,CAACC,GADrB;AAAA,MAEIvE,MAAM,GAAGsE,UAAU,CAACtE,MAFxB;;AAIA,MAAIwE,SAAS,GAAG5J,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACI6J,MAAM,GAAGD,SAAS,CAAC,CAAD,CADtB;AAAA,MAEIE,SAAS,GAAGF,SAAS,CAAC,CAAD,CAFzB;;AAIA,MAAIG,UAAU,GAAG/J,QAAQ,CAAC,IAAD,CAAzB;AAAA,MACIgK,UAAU,GAAGD,UAAU,CAAC,CAAD,CAD3B;AAAA,MAEIE,aAAa,GAAGF,UAAU,CAAC,CAAD,CAF9B;;AAIA,MAAIG,cAAc,GAAGjJ,aAAa,CAACuG,WAAD,CAAlC;AAAA,MACI2C,MAAM,GAAGD,cAAc,CAACC,MAD5B;AAAA,MAEIC,KAAK,GAAGF,cAAc,CAACE,KAF3B;;AAIA,MAAIC,eAAe,GAAGpJ,aAAa,CAAC,YAAD,CAAnC;AAAA,MACIqJ,eAAe,GAAGD,eAAe,CAACF,MADtC;AAAA,MAEII,wBAAwB,GAAGF,eAAe,CAACG,eAF/C;;AAIA,MAAIC,cAAc,GAAGvJ,aAAa,CAAC+E,eAAD,EAAkBG,YAAlB,CAAlC;AAAA,MACIF,KAAK,GAAGuE,cAAc,CAAC,CAAD,CAD1B;AAAA,MAEIC,QAAQ,GAAGD,cAAc,CAAC,CAAD,CAF7B;AAAA,MAGIE,YAAY,GAAGF,cAAc,CAAC,CAAD,CAHjC;;AAKA,MAAIG,qBAAqB,GAAGrH,sBAAsB,CAACgB,IAAD,EAAOkB,QAAP,EAAiBM,WAAjB,CAAlD;AAAA,MACI8E,QAAQ,GAAGD,qBAAqB,CAACrG,IADrC;AAAA,MAEIuG,WAAW,GAAGF,qBAAqB,CAACG,OAFxC;AAAA,MAGIC,iBAAiB,GAAGJ,qBAAqB,CAACI,iBAH9C;AAAA,MAIIC,YAAY,GAAGL,qBAAqB,CAACK,YAJzC;;AAMA,MAAIC,eAAe,GAAGhK,aAAa,CAACuF,0BAAD,EAA6BzD,0BAA0B,CAAC6H,QAAD,EAAW;AACnGvE,IAAAA,gBAAgB,EAAEA,gBADiF;AAEnGb,IAAAA,QAAQ,EAAEA,QAFyF;AAGnGM,IAAAA,WAAW,EAAEA,WAHsF;AAInGa,IAAAA,uBAAuB,EAAEA;AAJ0E,GAAX,CAAvD,CAAnC;AAAA,MAMIF,gBAAgB,GAAGwE,eAAe,CAAC,CAAD,CANtC;AAAA,MAOIC,mBAAmB,GAAGD,eAAe,CAAC,CAAD,CAPzC;;AASA,MAAIE,UAAU,GAAGpL,QAAQ,CAAC,IAAD,CAAzB;AAAA,MACIqL,cAAc,GAAGD,UAAU,CAAC,CAAD,CAD/B;AAAA,MAEIE,iBAAiB,GAAGF,UAAU,CAAC,CAAD,CAFlC;;AAIA,MAAIG,mBAAmB,GAAGtI,kBAAkB,CAAC;AAC3CsB,IAAAA,IAAI,EAAEsG,QADqC;AAE3ClF,IAAAA,QAAQ,EAAEA,QAFiC;AAG3CF,IAAAA,QAAQ,EAAEA,QAHiC;AAI3CM,IAAAA,WAAW,EAAEA,WAJ8B;AAK3C8B,IAAAA,qBAAqB,EAAEA,qBALoB;AAM3C2D,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACjC;AACAC,MAAAA,eAAe,CAAC;AACdD,QAAAA,KAAK,EAAEA,KADO;AAEdE,QAAAA,GAAG,EAAE,OAFS;AAGdzF,QAAAA,KAAK,EAAEA,KAHO;AAIdZ,QAAAA,OAAO,EAAEA,OAJK;AAKduC,QAAAA,qBAAqB,EAAEA;AALT,OAAD,CAAf;AAOA+D,MAAAA,WAAW;AACZ;AAhB0C,GAAD,CAA5C;AAAA,MAkBIC,YAAY,GAAGN,mBAAmB,CAACM,YAlBvC;AAAA,MAmBID,WAAW,GAAGL,mBAAmB,CAACK,WAnBtC;AAAA,MAoBIE,yBAAyB,GAAGP,mBAAmB,CAACO,yBApBpD;AAAA,MAqBIC,uBAAuB,GAAGR,mBAAmB,CAACQ,uBArBlD;AAAA,MAsBIL,eAAe,GAAGH,mBAAmB,CAACG,eAtB1C;;AAwBA,MAAIM,cAAc,GAAGlJ,aAAa,CAAC;AACjC6C,IAAAA,QAAQ,EAAEA,QADuB;AAEjCI,IAAAA,WAAW,EAAEA,WAFoB;AAGjCd,IAAAA,aAAa,EAAEA,aAHkB;AAIjCV,IAAAA,IAAI,EAAEsG,QAJ2B;AAKjC9F,IAAAA,QAAQ,EAAEA,QALuB;AAMjCyG,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBvG,aAAlB,EAAiCgH,WAAjC,EAA8CC,KAA9C,EAAqD;AAC7D1D,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACvD,aAAD,EAAgBiH,KAAhB,CAA5D;AACD;AARgC,GAAD,CAAlC;AAAA,MAUIC,YAAY,GAAGH,cAAc,CAACG,YAVlC;AAAA,MAWIC,kBAAkB,GAAGJ,cAAc,CAACI,kBAXxC;AAAA,MAYIC,gBAAgB,GAAGL,cAAc,CAACK,gBAZtC;AAAA,MAaIC,YAAY,GAAGN,cAAc,CAACM,YAblC;AAAA,MAcIC,eAAe,GAAGP,cAAc,CAACO,eAdrC;;AAgBA,MAAIC,gBAAgB,GAAGzJ,eAAe,EAAtC;AAAA,MACI0J,aAAa,GAAGD,gBAAgB,CAACC,aADrC;AAAA,MAEIC,eAAe,GAAGF,gBAAgB,CAACE,eAFvC;AAGA;AACF;AACA;AACA;;;AAGE,MAAIC,iBAAiB,GAAGxM,WAAW,CAAC,UAAUyM,MAAV,EAAkB;AACpD,QAAIvF,WAAJ,EAAiB;AACf,aAAOyE,yBAAyB,CAACD,YAAD,EAAeM,YAAf,EAA6BzF,gBAA7B,EAA+C;AAC7EpB,QAAAA,OAAO,EAAEA,OADoE;AAE7EL,QAAAA,aAAa,EAAEmH;AAF8D,OAA/C,CAAzB,CAGJS,MAHI,CAGG,UAAUC,IAAV,EAAgB;AACxB,eAAOA,IAAI,CAACC,OAAZ;AACD,OALM,CAAP;AAMD;;AAED,WAAOxK,gBAAgB,CAAC4J,YAAD,EAAeN,YAAf,EAA6B;AAClD9F,MAAAA,WAAW,EAAEA,WADqC;AAElDT,MAAAA,OAAO,EAAEA;AAFyC,KAA7B,CAAhB,CAGJ0H,GAHI,CAGA,UAAUC,IAAV,EAAgB;AACrB,aAAOL,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACK,IAAD,EAAO,CAAP,CAA7D;AACD,KALM,CAAP;AAMD,GAhBkC,EAgBhC,CAACb,kBAAD,EAAqB1F,gBAArB,EAAuCyF,YAAvC,EAAqDN,YAArD,EAAmEC,yBAAnE,EAA8FzE,WAA9F,EAA2GtB,WAA3G,EAAwHT,OAAxH,CAhBgC,CAAnC;;AAkBA,MAAI4H,gBAAgB,GAAG,SAASA,gBAAT,CAA0BD,IAA1B,EAAgCE,KAAhC,EAAuC;AAC5D,WAAO;AACL/I,MAAAA,EAAE,EAAEC,SADC;AAELsF,MAAAA,GAAG,EAAEA,GAFA;AAGLzD,MAAAA,KAAK,EAAE+G,IAAI,CAACxH,QAAD,CAHN;AAIL2H,MAAAA,KAAK,EAAEH,IAAI,CAACtH,QAAD,CAJN;AAKLwH,MAAAA,KAAK,EAAEA,KALF;AAMLE,MAAAA,KAAK,EAAEhC,cAAc,KAAK4B,IAAI,CAACxH,QAAD,CANzB;AAOL6H,MAAAA,MAAM,EAAEL,IAAI,CAACK,MAPR;AAQLP,MAAAA,OAAO,EAAEE,IAAI,CAACF,OART;AASLQ,MAAAA,OAAO,EAAEvC,iBAAiB,CAACwC,IAAlB,CAAuB,UAAUV,IAAV,EAAgB;AAC9C,eAAOA,IAAI,KAAKG,IAAI,CAACxH,QAAD,CAApB;AACD,OAFQ,CATJ;AAYLF,MAAAA,QAAQ,EAAE/C,gBAAgB,CAACqJ,YAAD,EAAeoB,IAAf,EAAqB;AAC7CzG,QAAAA,kBAAkB,EAAEA,kBADyB;AAE7Cf,QAAAA,QAAQ,EAAEA;AAFmC,OAArB,CAZrB;AAgBLgI,MAAAA,QAAQ,EAAER,IAhBL;AAiBLS,MAAAA,UAAU,EAAET,IAAI,CAACS,UAjBZ;AAkBLC,MAAAA,WAAW,EAAEhL,iBAAiB,CAACsK,IAAD,EAAO;AACnCpF,QAAAA,qBAAqB,EAAEA,qBADY;AAEnCpC,QAAAA,QAAQ,EAAEA;AAFyB,OAAP,CAlBzB;AAsBLmI,MAAAA,cAAc,EAAEvL,2BAA2B,CAAC4K,IAAD,EAAOpB,YAAP,EAAqBhE,qBAArB,EAA4CpC,QAA5C,CAtBtC;AAuBLgD,MAAAA,QAAQ,EAAEoF,YAvBL;AAwBLhF,MAAAA,QAAQ,EAAEiF,YAxBL;AAyBLC,MAAAA,gBAAgB,EAAE/E,cAzBb;AA0BLgF,MAAAA,gBAAgB,EAAEjF;AA1Bb,KAAP;AA4BD,GA7BD;;AA+BA,MAAIkF,eAAe,GAAG9N,WAAW,CAAC,YAAY;AAC5C,QAAImJ,OAAO,CAAC4E,OAAZ,EAAqB;AACnB1K,MAAAA,qBAAqB,CAAC;AACpB2K,QAAAA,IAAI,EAAE7E,OAAO,CAAC4E,OADM;AAEpBzI,QAAAA,QAAQ,EAAEA,QAFU;AAGpB2I,QAAAA,QAAQ,EAAE,MAAM9D,eAAe,CAAC,aAAD,CAHX;AAIpBN,QAAAA,UAAU,EAAEA,UAJQ;AAKpB3C,QAAAA,WAAW,EAAEA,WALO;AAMpBgH,QAAAA,SAAS,EAAE5E,WAAW,CAACyE,OANH;AAOpBI,QAAAA,cAAc,EAAE3B,iBAAiB;AAPb,OAAD,CAArB;AASD;AACF,GAZgC,EAY9B,CAACrC,eAAD,EAAkBN,UAAlB,EAA8B2C,iBAA9B,EAAiDlH,QAAjD,EAA2D4B,WAA3D,CAZ8B,CAAjC;AAaAnH,EAAAA,SAAS,CAAC,YAAY;AACpBwK,IAAAA,QAAQ,CAACjI,8BAA8B,CAACyD,KAAD,EAAQ2B,qBAAR,CAA/B,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAlPwE,CAoPhE;;AAER3H,EAAAA,SAAS,CAAC,YAAY;AACpBqM,IAAAA,eAAe,CAAChI,IAAD,EAAO6H,kBAAP,CAAf;AACAtB,IAAAA,WAAW,CAACvG,IAAD,CAAX;AACD,GAHQ,EAGN,CAACA,IAAD,EAAO6H,kBAAP,EAA2BG,eAA3B,EAA4CzB,WAA5C,CAHM,CAAT;AAIA5K,EAAAA,SAAS,CAAC,YAAY;AACpBqM,IAAAA,eAAe,CAAC1B,QAAD,EAAWuB,kBAAX,CAAf;AACD,GAFQ,EAEN,CAACvB,QAAD,EAAWuB,kBAAX,EAA+BG,eAA/B,CAFM,CAAT;AAGArM,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIqO,KAAK,CAACC,OAAN,CAAc/H,0BAAd,CAAJ,EAA+C;AAC7C0E,MAAAA,mBAAmB,CAAC1E,0BAAD,CAAnB;AACD;AACF,GAJQ,EAIN,CAACA,0BAAD,EAA6B0E,mBAA7B,CAJM,CAAT;AAKAjL,EAAAA,SAAS,CAAC,YAAY;AACpBmM,IAAAA,gBAAgB,CAACpH,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqDA,aAArD,GAAqE,EAAtE,CAAhB;AACD,GAFQ,EAEN,CAACA,aAAD,EAAgBoH,gBAAhB,CAFM,CAAT;AAGAnM,EAAAA,SAAS,CAAC,YAAY;AACpBwL,IAAAA,eAAe,CAAC;AACdD,MAAAA,KAAK,EAAEI,YADO;AAEdF,MAAAA,GAAG,EAAE,OAFS;AAGdzF,MAAAA,KAAK,EAAEA,KAHO;AAIdZ,MAAAA,OAAO,EAAEA,OAJK;AAKduC,MAAAA,qBAAqB,EAAEA;AALT,KAAD,CAAf;AAOA+D,IAAAA,WAAW;AACZ,GATQ,EASN,CAACtG,OAAD,EAAUY,KAAV,EAAiB2B,qBAAjB,EAAwC6D,eAAxC,EAAyDG,YAAzD,EAAuED,WAAvE,CATM,CAAT;AAUA,MAAI6C,eAAe,GAAGtO,WAAW,CAAC,UAAUsL,KAAV,EAAiBwB,IAAjB,EAAuByB,OAAvB,EAAgC;AAChE,QAAIC,WAAW,GAAG1B,IAAI,CAAC2B,MAAL,GAAcnD,KAAK,CAACwB,IAAI,CAAC2B,MAAN,CAAnB,GAAmC,IAArD;;AAEA,QAAItJ,OAAO,IAAIqJ,WAAf,EAA4B;AAC1B,UAAI,CAACD,OAAL,EAAc;AACZC,QAAAA,WAAW,CAACE,KAAZ,GAAoBH,OAApB;AACAC,QAAAA,WAAW,CAACG,QAAZ,GAAuBJ,OAAvB;AACD,OAHD,MAGO;AACL,YAAIvM,mBAAmB,CAACsJ,KAAD,EAAQkD,WAAR,CAAvB,EAA6C;AAC3CA,UAAAA,WAAW,CAACE,KAAZ,GAAoB,IAApB;AACAF,UAAAA,WAAW,CAACG,QAAZ,GAAuB,IAAvB;AACD,SAHD,MAGO;AACLH,UAAAA,WAAW,CAACE,KAAZ,GAAoB,KAApB;AACAF,UAAAA,WAAW,CAACG,QAAZ,GAAuB,KAAvB;AACD;AACF;;AAED,UAAIH,WAAW,CAACI,MAAhB,EAAwB;AACtBN,QAAAA,eAAe,CAAChD,KAAD,EAAQkD,WAAW,CAACI,MAApB,EAA4BL,OAA5B,CAAf;AACD;AACF;AACF,GArBgC,EAqB9B,CAACpJ,OAAD,CArB8B,CAAjC;AAsBA,MAAI0J,iBAAiB,GAAG7O,WAAW,CAAC,UAAUsL,KAAV,EAAiBwB,IAAjB,EAAuBgC,SAAvB,EAAkC;AACpE,QAAIN,WAAW,GAAG1B,IAAI,CAAC2B,MAAL,GAAcnD,KAAK,CAACwB,IAAI,CAAC2B,MAAN,CAAnB,GAAmC,IAArD;;AAEA,QAAI,CAACD,WAAL,EAAkB;AAChB;AACD;;AAEDA,IAAAA,WAAW,CAACE,KAAZ,GAAoBI,SAApB;;AAEA,QAAI,CAACN,WAAW,CAAC5I,WAAD,CAAZ,IAA6B,CAAC4I,WAAW,CAAC5I,WAAD,CAAX,CAAyBmJ,MAAvD,IAAiE,CAAC5J,OAAtE,EAA+E;AAC7EqJ,MAAAA,WAAW,CAACG,QAAZ,GAAuB,KAAvB;AACD,KAFD,MAEO;AACLH,MAAAA,WAAW,CAACG,QAAZ,GAAuBG,SAAvB;AACAN,MAAAA,WAAW,CAAC5I,WAAD,CAAX,CAAyBoJ,OAAzB,CAAiC,UAAUC,KAAV,EAAiB;AAChDJ,QAAAA,iBAAiB,CAACvD,KAAD,EAAQ2D,KAAR,EAAeH,SAAf,CAAjB;AACD,OAFD;AAGD;AACF,GAjBkC,EAiBhC,CAAC3J,OAAD,EAAUS,WAAV,CAjBgC,CAAnC;AAkBA,MAAIsJ,aAAa,GAAGlP,WAAW,CAAC,UAAU8M,IAAV,EAAgBgC,SAAhB,EAA2B;AACzD,QAAIxD,KAAK,GAAG/L,UAAU,CAACmM,YAAD,CAAtB;;AAEAmD,IAAAA,iBAAiB,CAACvD,KAAD,EAAQwB,IAAR,EAAcgC,SAAd,CAAjB;AACAhC,IAAAA,IAAI,CAAC8B,MAAL,IAAeN,eAAe,CAAChD,KAAD,EAAQwB,IAAI,CAAC8B,MAAb,EAAqBE,SAArB,CAA9B;AACA,QAAIK,MAAM,GAAGvD,uBAAuB,CAACN,KAAD,EAAQ,OAAR,CAApC,CALyD,CAKH;;AAEtD,WAAO6D,MAAM,CAACzC,MAAP,CAAc,UAAU0C,CAAV,EAAa;AAChC,aAAO,CAAC1H,qBAAqB,CAAC2H,QAAtB,CAA+BD,CAA/B,CAAR;AACD,KAFM,CAAP;AAGD,GAV8B,EAU5B,CAAC1D,YAAD,EAAehE,qBAAf,EAAsCkE,uBAAtC,EAA+DiD,iBAA/D,EAAkFP,eAAlF,CAV4B,CAA/B,CAvTwE,CAiUgC;AACxG;;AAEA,MAAIgB,aAAa,GAAGpP,OAAO,CAAC,YAAY;AACtC,WAAOO,eAAe,CAAC2D,IAAD,EAAO,UAAU0I,IAAV,EAAgB;AAC3C,aAAOA,IAAI,CAACxH,QAAD,CAAX;AACD,KAFqB,EAEnB,UAAUwH,IAAV,EAAgB;AACjB,aAAOA,IAAI,CAAClH,WAAD,CAAX;AACD,KAJqB,CAAtB;AAKD,GAN0B,EAMxB,CAACA,WAAD,EAAcxB,IAAd,EAAoBkB,QAApB,CANwB,CAA3B;AAOA,MAAIoI,YAAY,GAAG1N,WAAW,CAAC,UAAU8M,IAAV,EAAgBf,KAAhB,EAAuB;AACpD,QAAIyC,WAAW,GAAG1B,IAAI,CAAC2B,MAAL,GAAc/C,YAAY,CAACoB,IAAI,CAAC2B,MAAN,CAA1B,GAA0C,IAA5D;;AAEA,QAAI,CAAC3B,IAAD,IAAS,CAAC0B,WAAd,EAA2B;AACzB;AACD;;AAED,QAAIe,cAAc,GAAGL,aAAa,CAACpC,IAAD,EAAO,CAAC0B,WAAW,CAACE,KAApB,CAAlC;;AAEA,QAAI,CAAClE,YAAL,EAAmB;AACjBe,MAAAA,eAAe,CAAC;AACdD,QAAAA,KAAK,EAAEI,YADO;AAEdF,QAAAA,GAAG,EAAE,OAFS;AAGdzF,QAAAA,KAAK,EAAEwJ,cAHO;AAIdpK,QAAAA,OAAO,EAAEA,OAJK;AAKduC,QAAAA,qBAAqB,EAAEA;AALT,OAAD,CAAf;AAOA6C,MAAAA,QAAQ,CAACgF,cAAD,CAAR;AACD;;AAEDzF,IAAAA,aAAa,CAACgD,IAAD,CAAb;AACA3B,IAAAA,iBAAiB,CAAC2B,IAAI,CAACxH,QAAD,CAAL,CAAjB;AACA2C,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACsH,cAAD,EAAiBxD,KAAjB,CAA5D;AACAzD,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACwE,IAAD,EAAOyC,cAAP,EAAuBxD,KAAvB,CAA5D;AACAxD,IAAAA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACuE,IAAD,EAAOpM,kBAAkB,CAACoM,IAAD,EAAO,UAAUH,IAAV,EAAgB;AACtH,aAAO2C,aAAa,CAACE,GAAd,CAAkB7C,IAAI,CAACrH,QAAD,CAAtB,CAAP;AACD,KAFgG,CAAzB,CAAxE;AAGD,GA3B6B,EA2B3B,CAACoG,YAAD,EAAewD,aAAf,EAA8B1E,YAA9B,EAA4ClF,QAA5C,EAAsD2C,QAAtD,EAAgEK,QAAhE,EAA0EC,YAA1E,EAAwFgD,eAAxF,EAAyGpG,OAAzG,EAAkHuC,qBAAlH,EAAyI6C,QAAzI,EAAmJ+E,aAAnJ,CA3B2B,CAA9B;AA4BA,MAAIG,UAAU,GAAGzP,WAAW,CAAC,YAAY;AACvC,QAAI0P,mBAAJ,EAAyBC,qBAAzB;;AAEA,KAACD,mBAAmB,GAAGzG,UAAU,CAAC8E,OAAlC,MAA+C,IAA/C,IAAuD2B,mBAAmB,KAAK,KAAK,CAApF,GAAwF,KAAK,CAA7F,GAAiG,CAACC,qBAAqB,GAAGD,mBAAmB,CAACE,IAA7C,MAAuD,IAAvD,IAA+DD,qBAAqB,KAAK,KAAK,CAA9F,GAAkG,KAAK,CAAvG,GAA2GA,qBAAqB,CAACE,IAAtB,CAA2BH,mBAA3B,CAA5M;AACAvE,IAAAA,iBAAiB,CAACtB,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACvE,QAAD,CAAnE,CAAjB;AACAwI,IAAAA,eAAe;AACftF,IAAAA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,EAAtD;AACAmB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAR2B,EAQzB,CAACE,UAAD,EAAaiE,eAAb,EAA8BtF,MAA9B,EAAsClD,QAAtC,CARyB,CAA5B;AASA,MAAIwK,WAAW,GAAG9P,WAAW,CAAC,YAAY;AACxC,QAAI+P,oBAAJ,EAA0BC,qBAA1B,EAAiDC,kBAAjD;;AAEA,KAACF,oBAAoB,GAAG9G,UAAU,CAAC8E,OAAnC,MAAgD,IAAhD,IAAwDgC,oBAAoB,KAAK,KAAK,CAAtF,GAA0F,KAAK,CAA/F,GAAmG,CAACC,qBAAqB,GAAGD,oBAAoB,CAACG,KAA9C,MAAyD,IAAzD,IAAiEF,qBAAqB,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6GA,qBAAqB,CAACH,IAAtB,CAA2BE,oBAA3B,CAAhN;AACA7D,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACA/D,IAAAA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,EAAzD;AACAgD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAxB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA;AACJ;AACA;;AAEI,KAACsG,kBAAkB,GAAG/G,SAAS,CAAC6E,OAAhC,MAA6C,IAA7C,IAAqDkC,kBAAkB,KAAK,KAAK,CAAjF,GAAqF,KAAK,CAA1F,GAA8FA,kBAAkB,CAAC/C,KAAnB,EAA9F;AACD,GAb4B,EAa1B,CAAC/E,OAAD,EAAU+D,gBAAV,CAb0B,CAA7B;AAcA,MAAIyB,YAAY,GAAG3N,WAAW,CAAC,UAAU8M,IAAV,EAAgB;AAC7C,QAAIqD,oBAAoB,GAAGjN,YAAY,CAAC;AACtC4J,MAAAA,IAAI,EAAEA,IADgC;AAEtCsD,MAAAA,QAAQ,EAAE,CAACtD,IAAI,CAACK,MAFsB;AAGtC5G,MAAAA,gBAAgB,EAAEA,gBAHoB;AAItCjB,MAAAA,QAAQ,EAAEA;AAJ4B,KAAD,CAAvC;AAMA0F,IAAAA,mBAAmB,CAACmF,oBAAD,CAAnB;AACAzH,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACyH,oBAAD,EAAuBrD,IAAvB,EAA6BrL,4BAA4B,CAACqL,IAAD,EAAOA,IAAI,CAACxH,QAAD,CAAX,EAAuB;AAC1IA,MAAAA,QAAQ,EAAEA,QADgI;AAE1IM,MAAAA,WAAW,EAAEA;AAF6H,KAAvB,CAAzD,CAA5D;;AAKA,QAAInG,WAAW,CAACqI,WAAD,CAAX,IAA4B,CAACgF,IAAI,CAACK,MAAlC,IAA4CiB,KAAK,CAACC,OAAN,CAAcvB,IAAI,CAAClH,WAAD,CAAlB,CAA5C,IAAgFkH,IAAI,CAAClH,WAAD,CAAJ,CAAkBmJ,MAAlB,KAA6B,CAAjH,EAAoH;AAClHjE,MAAAA,YAAY,CAACgC,IAAD,EAAOhF,WAAP,CAAZ;AACD;AACF,GAhB6B,EAgB3B,CAAClC,WAAD,EAAcW,gBAAd,EAAgCuB,WAAhC,EAA6CgD,YAA7C,EAA2DpC,QAA3D,EAAqEsC,mBAArE,EAA0F1F,QAA1F,CAhB2B,CAA9B;AAiBA3D,EAAAA,gBAAgB,CAACoC,GAAD,EAAM;AACpBsM,IAAAA,OAAO,EAAErH,MAAM,GAAGM,WAAH,GAAiBgH,SADZ;AAEpBrH,IAAAA,UAAU,EAAEA,UAFQ;AAGpBG,IAAAA,UAAU,EAAEA,UAHQ;AAIpBF,IAAAA,SAAS,EAAEA,SAJS;AAKpBC,IAAAA,OAAO,EAAEA,OALW;AAMpBH,IAAAA,MAAM,EAAEA;AANY,GAAN,CAAhB;AAQA,MAAIuH,WAAW,GAAGvQ,WAAW,CAAC,UAAU+L,KAAV,EAAiB;AAC7C,QAAIyE,MAAM,GAAGzE,KAAK,CAACyE,MAAnB,CAD6C,CAClB;;AAE3B,QAAIA,MAAM,CAACC,OAAP,CAAe,+BAAf,KAAmDrL,QAAnD,IAA+D,CAACX,SAApE,EAA+E;AAC7E;AACD;;AAEDqF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAqB,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AAEA,QAAI,CAACX,YAAL,EAAmB;AACjBD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAgB,MAAAA,eAAe,CAAC;AACdD,QAAAA,KAAK,EAAEI,YADO;AAEdF,QAAAA,GAAG,EAAE,OAFS;AAGdzF,QAAAA,KAAK,EAAE,EAHO;AAIdZ,QAAAA,OAAO,EAAEA,OAJK;AAKduC,QAAAA,qBAAqB,EAAEA;AALT,OAAD,CAAf;AAOD;;AAEDO,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC,EAAD,EAAK8D,KAAL,CAA5D;AACD,GAtB4B,EAsB1B,CAAC5G,OAAD,EAAUV,SAAV,EAAqBW,QAArB,EAA+BsG,YAA/B,EAA6CzD,QAA7C,EAAuDsC,QAAvD,EAAiEgB,eAAjE,EAAkF7D,qBAAlF,EAAyG8C,YAAzG,CAtB0B,CAA7B;AAuBA,MAAIkG,eAAe,GAAG1Q,WAAW,CAAC,UAAUwL,GAAV,EAAe;AAC/C,QAAImF,cAAc,GAAG3N,iBAAiB,CAACgJ,YAAD,EAAe;AACnD3F,MAAAA,kBAAkB,EAAEA,kBAD+B;AAEnDf,MAAAA,QAAQ,EAAEA,QAFyC;AAGnDM,MAAAA,WAAW,EAAEA,WAHsC;AAInDW,MAAAA,gBAAgB,EAAEA;AAJiC,KAAf,EAKnC9C,WAAW,CAACwI,kBAAD,CALwB,CAAtC;AAMA,QAAIgC,QAAQ,GAAG,MAAM9D,eAAe,CAAC,YAAD,CAApC;AACA,QAAIyG,UAAU,GAAG;AACf1F,MAAAA,cAAc,EAAEA,cADD;AAEfyF,MAAAA,cAAc,EAAEA,cAFD;AAGfrE,MAAAA,aAAa,EAAEA,aAHA;AAIf2B,MAAAA,QAAQ,EAAEA,QAJK;AAKf3I,MAAAA,QAAQ,EAAEA,QALK;AAMf+F,MAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBwF,kBAAlB,EAAsC;AAC9C1F,QAAAA,iBAAiB,CAAC0F,kBAAD,CAAjB;AACD;AARc,KAAjB;;AAWA,QAAIrF,GAAG,KAAKxK,UAAU,CAAC8P,IAAvB,EAA6B;AAC3B/N,MAAAA,aAAa,CAAC6N,UAAD,CAAb;AACA;AACD;;AAED,QAAIpF,GAAG,KAAKxK,UAAU,CAAC+P,EAAvB,EAA2B;AACzB9N,MAAAA,iBAAiB,CAAC2N,UAAD,CAAjB;AACD;AACF,GA3BgC,EA2B9B,CAAC3E,kBAAD,EAAqB9B,eAArB,EAAsC5D,gBAAtC,EAAwDyF,YAAxD,EAAsEd,cAAtE,EAAsFoB,aAAtF,EAAqG1G,WAArG,EAAkHN,QAAlH,EAA4He,kBAA5H,CA3B8B,CAAjC;AA4BA,MAAI2K,eAAe,GAAGhR,WAAW,CAAC,YAAY;AAC5C,QAAIL,MAAM,CAACuL,cAAD,CAAV,EAA4B;AAC5B,QAAI+F,SAAS,GAAG9N,aAAa,CAAC+H,cAAD,EAAiBQ,YAAjB,EAA+BpG,QAA/B,CAA7B;AACA/B,IAAAA,gBAAgB,CAAC;AACf0N,MAAAA,SAAS,EAAEA,SADI;AAEf9D,MAAAA,MAAM,EAAE5G,gBAAgB,CAAC8I,QAAjB,CAA0B4B,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAAC3L,QAAD,CAAzF,CAFO;AAGfoD,MAAAA,QAAQ,EAAEiF,YAHK;AAIf/H,MAAAA,WAAW,EAAEA,WAJE;AAKfsL,MAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,YAAIC,iBAAJ,EAAuBC,kBAAvB;;AAEAjG,QAAAA,iBAAiB,CAAC8F,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsD,CAACE,iBAAiB,GAAGF,SAAS,CAACrC,MAA/B,MAA2C,IAA3C,IAAmDuC,iBAAiB,KAAK,KAAK,CAA9E,GAAkF,KAAK,CAAvF,GAA2FA,iBAAiB,CAAC7L,QAAD,CAAnK,CAAjB;AACAhC,QAAAA,aAAa,CAAC2N,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsD,CAACG,kBAAkB,GAAGH,SAAS,CAACrC,MAAhC,MAA4C,IAA5C,IAAoDwC,kBAAkB,KAAK,KAAK,CAAhF,GAAoF,KAAK,CAAzF,GAA6FA,kBAAkB,CAAC3C,MAAvK,EAA+KnC,aAA/K,EAA8L,MAAMnC,eAAe,CAAC,YAAD,CAAnN,CAAb;AACD;AAVc,KAAD,CAAhB;AAYD,GAfgC,EAe9B,CAACA,eAAD,EAAkB5D,gBAAlB,EAAoCmF,YAApC,EAAkDR,cAAlD,EAAkEyC,YAAlE,EAAgFrB,aAAhF,EAA+FhH,QAA/F,EAAyGM,WAAzG,CAf8B,CAAjC;AAgBA,MAAIyL,gBAAgB,GAAGrR,WAAW,CAAC,YAAY;AAC7C,QAAIL,MAAM,CAACuL,cAAD,CAAV,EAA4B;AAC5B,QAAI+F,SAAS,GAAG9N,aAAa,CAAC+H,cAAD,EAAiBQ,YAAjB,EAA+BpG,QAA/B,CAA7B;AACA9B,IAAAA,iBAAiB,CAAC;AAChByN,MAAAA,SAAS,EAAEA,SADK;AAEhB9D,MAAAA,MAAM,EAAE5G,gBAAgB,CAAC8I,QAAjB,CAA0B4B,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAAC3L,QAAD,CAAzF,CAFQ;AAGhBM,MAAAA,WAAW,EAAEA,WAHG;AAIhB8C,MAAAA,QAAQ,EAAEiF,YAJM;AAKhBuD,MAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClCR,QAAAA,eAAe,CAAC1P,UAAU,CAAC8P,IAAZ,CAAf;AACD;AAPe,KAAD,CAAjB;AASD,GAZiC,EAY/B,CAAC5F,cAAD,EAAiBQ,YAAjB,EAA+BpG,QAA/B,EAAyCiB,gBAAzC,EAA2DX,WAA3D,EAAwE+H,YAAxE,EAAsF+C,eAAtF,CAZ+B,CAAlC;AAaA,MAAIY,gBAAgB,GAAGtR,WAAW,CAAC,UAAU+L,KAAV,EAAiB;AAClD,QAAIpM,MAAM,CAACuL,cAAD,CAAV,EAA4B;AAC5B,QAAIqG,UAAU,GAAGpO,aAAa,CAAC+H,cAAD,EAAiBQ,YAAjB,EAA+BpG,QAA/B,CAA9B;;AAEA,QAAI,CAAC9C,iBAAiB,CAAC+O,UAAD,EAAa;AACjC7J,MAAAA,qBAAqB,EAAEA,qBADU;AAEjCpC,MAAAA,QAAQ,EAAEA;AAFuB,KAAb,CAAlB,IAGEiM,UAAU,KAAK,IAHrB,EAG2B;AACzB7D,MAAAA,YAAY,CAAC6D,UAAD,EAAaxF,KAAb,CAAZ;AACD;AACF,GAViC,EAU/B,CAACL,YAAD,EAAeR,cAAf,EAA+BwC,YAA/B,EAA6ChG,qBAA7C,EAAoEpC,QAApE,CAV+B,CAAlC;AAWA,MAAIkM,eAAe,GAAGzP,qBAAqB,CAAC;AAC1C0P,IAAAA,MAAM,EAAE,CAACvG,cAAD,IAAmB,CAACxB,MADc;AAE1CT,IAAAA,UAAU,EAAEA,UAF8B;AAG1CC,IAAAA,SAAS,EAAEA,SAH+B;AAI1CE,IAAAA,UAAU,EAAEA,UAJ8B;AAK1CC,IAAAA,cAAc,EAAEA,cAL0B;AAM1CK,IAAAA,MAAM,EAAEA,MANkC;AAO1CgI,IAAAA,MAAM,EAAEnB,WAPkC;AAQ1CpI,IAAAA,OAAO,EAAE2H,WARiC;AAS1C3O,IAAAA,aAAa,EAAE,SAASA,aAAT,CAAuB4K,KAAvB,EAA8B;AAC3C3K,MAAAA,cAAc,CAAC2K,KAAD,EAAQ;AACpB4F,QAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,iBAAOjB,eAAe,CAAC1P,UAAU,CAAC8P,IAAZ,CAAtB;AACD,SAHmB;AAIpBc,QAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,iBAAOlB,eAAe,CAAC1P,UAAU,CAAC+P,EAAZ,CAAtB;AACD,SANmB;AAOpBc,QAAAA,IAAI,EAAErI,GAAG,GAAG6H,gBAAH,GAAsBL,eAPX;AAQpBc,QAAAA,KAAK,EAAEtI,GAAG,GAAGwH,eAAH,GAAqBK,gBARX;AASpBU,QAAAA,KAAK,EAAET,gBATa;AAUpBU,QAAAA,GAAG,EAAEzB;AAVe,OAAR,CAAd;AAYD;AAtByC,GAAD,CAA3C;AAwBA,MAAI0B,iBAAiB,GAAGjS,WAAW,CAAC,UAAU+L,KAAV,EAAiB;AACnD,QAAI,CAACzC,WAAW,CAACyE,OAAjB,EAA0B;AACxB;AACD;;AAED3M,IAAAA,cAAc,CAAC2K,KAAD,EAAQ;AACpB4F,MAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,eAAOjB,eAAe,CAAC1P,UAAU,CAAC8P,IAAZ,CAAtB;AACD,OAHmB;AAIpBc,MAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,eAAOlB,eAAe,CAAC1P,UAAU,CAAC+P,EAAZ,CAAtB;AACD,OANmB;AAOpBc,MAAAA,IAAI,EAAErI,GAAG,GAAG6H,gBAAH,GAAsBL,eAPX;AAQpBc,MAAAA,KAAK,EAAEtI,GAAG,GAAGwH,eAAH,GAAqBK,gBARX;AASpBU,MAAAA,KAAK,EAAET;AATa,KAAR,CAAd;AAWD,GAhBkC,EAgBhC,CAACZ,eAAD,EAAkBM,eAAlB,EAAmCK,gBAAnC,EAAqD7H,GAArD,EAA0D8H,gBAA1D,CAhBgC,CAAnC;;AAkBA,MAAIY,UAAU,GAAG,SAASA,UAAT,CAAoBpF,IAApB,EAA0BE,KAA1B,EAAiC;AAChD,QAAIJ,OAAO,GAAGE,IAAI,CAACF,OAAnB;AAAA,QACI6B,MAAM,GAAG3B,IAAI,CAAC2B,MADlB,CADgD,CAEtB;;AAE1B,QAAItB,MAAM,GAAGzK,sBAAsB,CAACuJ,kBAAD,EAAqB1F,gBAAgB,CAAC8I,QAAjB,CAA0BvC,IAAI,CAACxH,QAAD,CAA9B,CAArB,CAAnC;;AAEA,QAAI,CAACsH,OAAL,EAAc;AACZ,aAAO,IAAP;AACD;;AAED,QAAIuF,QAAQ,GAAGrF,IAAI,CAAClH,WAAD,CAAnB;AACA,QAAIwM,eAAe,GAAG9S,YAAY,CAAC2M,kBAAD,CAAZ,IAAoCA,kBAAkB,CAAC8C,MAAnB,KAA8B,CAAlE,GAAsE,CAAC,CAACoD,QAAxE,GAAmF1P,kBAAkB,CAACqK,IAAD,EAAOlH,WAAP,CAA3H;;AAEA,QAAIyM,SAAS,GAAGjT,QAAQ,CAAC,EAAD,EAAK2N,gBAAgB,CAAC3N,QAAQ,CAAC,EAAD,EAAK0N,IAAL,EAAW;AAC/D;AACN;AACA;AACA;AACM8B,MAAAA,MAAM,EAAE9B,IAAI,CAAC8B,MALkD;AAM/DzB,MAAAA,MAAM,EAAEA;AANuD,KAAX,CAAT,EAOzCH,KAPyC,CAArB,EAOZ;AACVsF,MAAAA,WAAW,EAAEF;AADH,KAPY,CAAxB;;AAWA,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzB,UAAIC,MAAJ;;AAEAvF,MAAAA,KAAK,IAAI,CAAT;AACA,UAAIwF,SAAS,GAAGrI,eAAe,CAAC,MAAD,CAA/B;AACA,UAAIsI,aAAa,GAAGxI,KAAK,CAACE,eAAe,CAAC,eAAD,CAAhB,GAAoCoI,MAAM,GAAG,EAAT,EAAaA,MAAM,CAACC,SAAD,CAAN,GAAoBrF,MAAM,IAAIiF,eAA3C,EAA4DG,MAAhG,EAAzB;AACA,UAAIjH,KAAK,GAAG6G,QAAQ,IAAI,EAAxB;AACA,aAAO,aAAavS,KAAK,CAAC8S,aAAN,CAAoB,KAApB,EAA2B;AAC7CvL,QAAAA,SAAS,EAAEsL,aADkC;AAE7CjH,QAAAA,GAAG,EAAEsB,IAAI,CAACxH,QAAD;AAFoC,OAA3B,EAGjB,aAAa1F,KAAK,CAAC8S,aAAN,CAAoBnS,aAApB,EAAmCnB,QAAQ,CAAC,EAAD,EAAKiT,SAAL,EAAgB;AACzEtO,QAAAA,GAAG,EAAE,SAASA,GAAT,CAAa4O,IAAb,EAAmB;AACtB,iBAAOpG,eAAe,CAACoG,IAAD,EAAOlE,MAAP,CAAtB;AACD;AAHwE,OAAhB,CAA3C,CAHI,EAOf,aAAa7O,KAAK,CAAC8S,aAAN,CAAoB,KAApB,EAA2B;AAC3CvL,QAAAA,SAAS,EAAEgD,eAAe,CAAC,UAAD;AADiB,OAA3B,EAEfmB,KAAK,CAACuB,GAAN,CAAU,UAAUoC,KAAV,EAAiB;AAC5B,eAAOiD,UAAU,CAACjD,KAAD,EAAQjC,KAAR,CAAjB;AACD,OAFE,CAFe,EAIdjI,cAAc,IAAI,aAAanF,KAAK,CAAC8S,aAAN,CAAoB,MAApB,EAA4B;AAC7DvL,QAAAA,SAAS,EAAEgD,eAAe,CAAC,aAAD,CADmC;AAE7D9F,QAAAA,KAAK,EAAE1D,iBAAiB,CAAC6I,GAAD,EAAMwD,KAAK,GAAG,CAAd,EAAiB,IAAjB;AAFqC,OAA5B,CAJjB,CAPE,CAApB;AAeD;;AAED,WAAO,aAAapN,KAAK,CAAC8S,aAAN,CAAoBnS,aAApB,EAAmCnB,QAAQ,CAAC;AAC9DoM,MAAAA,GAAG,EAAEsB,IAAI,CAACxH,QAAD,CADqD;AAE9DvB,MAAAA,GAAG,EAAE,SAASA,GAAT,CAAa6O,KAAb,EAAoB;AACvB,eAAOrG,eAAe,CAACqG,KAAD,EAAQnE,MAAR,CAAtB;AACD;AAJ6D,KAAD,EAK5D4D,SAL4D,CAA3C,CAApB;AAMD,GAtDD;;AAwDA,MAAIQ,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,KAA/B,EAAsC;AAChE,QAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;AAAA,QACI1O,KAAK,GAAGyO,KAAK,CAACzO,KADlB;AAAA,QAEID,IAAI,GAAG0O,KAAK,CAAC1O,IAFjB;AAGA,QAAI0I,IAAI,GAAG1I,IAAI,CAAC2O,KAAD,CAAf;AACA,QAAI/F,KAAK,GAAGF,IAAI,CAACE,KAAjB;AAAA,QACIyB,MAAM,GAAG3B,IAAI,CAAC2B,MADlB;AAAA,QAEI7B,OAAO,GAAGE,IAAI,CAACF,OAFnB;AAGA,QAAIO,MAAM,GAAGzK,sBAAsB,CAACuJ,kBAAD,EAAqB1F,gBAAgB,CAAC8I,QAAjB,CAA0BvC,IAAI,CAACxH,QAAD,CAA9B,CAArB,CAAnC;;AAEA,QAAI+M,SAAS,GAAGjT,QAAQ,CAAC,EAAD,EAAK2N,gBAAgB,CAAC3N,QAAQ,CAAC,EAAD,EAAK0N,IAAL,EAAW;AAC/D;AACN;AACA;AACA;AACM8B,MAAAA,MAAM,EAAE9B,IAAI,CAAC8B,MALkD;AAM/DzB,MAAAA,MAAM,EAAEA;AANuD,KAAX,CAAT,EAOzCH,KAPyC,CAArB,EAOZ;AACVsF,MAAAA,WAAW,EAAExF,IAAI,CAACwF;AADR,KAPY,CAAxB;;AAWA,WAAO1F,OAAO,IAAI,aAAahN,KAAK,CAAC8S,aAAN,CAAoBnS,aAApB,EAAmCnB,QAAQ,CAAC;AACzEiF,MAAAA,KAAK,EAAEA,KADkE;AAEzEN,MAAAA,GAAG,EAAE,SAASA,GAAT,CAAaiP,KAAb,EAAoB;AACvB,eAAOzG,eAAe,CAACyG,KAAD,EAAQvE,MAAR,CAAtB;AACD;AAJwE,KAAD,EAKvE4D,SALuE,CAA3C,CAA/B;AAMD,GA3BD;;AA6BA,MAAIY,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/C,QAAIC,qBAAJ,EAA2BC,OAA3B;;AAEA,QAAIC,OAAO,GAAGhJ,wBAAwB,EAAE8I,qBAAqB,GAAG,EAAxB,EAA4BA,qBAAqB,CAAC/L,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6CA,SAA7C,GAAyD,EAA1D,CAArB,GAAqF6B,MAAjH,EAAyHkK,qBAAqB,CAAC,kBAAD,CAArB,GAA4C,CAACjR,qBAAqB,CAACmC,IAAD,EAAOwB,WAAP,CAA3L,EAAgNsN,qBAAqB,CAAChM,WAAtB,GAAoCA,WAApP,EAAiQgM,qBAAnQ,EAAtC;AACA,QAAI/E,cAAc,GAAG3B,iBAAiB,CAAC0F,UAAD,CAAtC;;AAEA,QAAI,CAAC/D,cAAc,CAACd,IAAf,CAAoB,UAAU+B,CAAV,EAAa;AACpC,aAAOA,CAAC,KAAK,IAAb;AACD,KAFI,CAAL,EAEI;AACF,aAAO,aAAaxP,KAAK,CAAC8S,aAAN,CAAoB,KAApB,EAA2B;AAC7CvL,QAAAA,SAAS,EAAE6C,MAAM,CAAC,MAAD;AAD4B,OAA3B,EAEjB/E,MAAM,CAACoO,aAFU,CAApB;AAGD;;AAED,QAAIC,cAAc,GAAGrJ,KAAK,CAACE,eAAe,CAAC,OAAD,CAAhB,GAA4BgJ,OAAO,GAAG,EAAV,EAAcA,OAAO,CAAChJ,eAAe,CAAC,iBAAD,CAAhB,CAAP,GAA8ChI,gCAAgC,CAACuJ,YAAD,EAAehE,qBAAf,EAAsCpC,QAAtC,CAA5F,EAA6I6N,OAAzK,EAA1B;AACA,QAAII,MAAM,GAAGvK,MAAM,GAAG5J,QAAQ,CAAC;AAC7BuH,MAAAA,MAAM,EAAEA;AADqB,KAAD,EAE3BtC,KAF2B,CAAX,GAEP,EAFZ;AAGA,WAAO,aAAazE,KAAK,CAAC8S,aAAN,CAAoB,KAApB,EAA2B;AAC7C/K,MAAAA,EAAE,EAAEA,EAAE,GAAGA,EAAE,GAAG,UAAR,GAAqB2I,SADkB;AAE7CvM,MAAAA,GAAG,EAAEuF,WAFwC;AAG7CkK,MAAAA,IAAI,EAAE,MAHuC;AAI7C,8BAAwB,IAJqB;AAK7CrM,MAAAA,SAAS,EAAEiM,OALkC;AAM7C/O,MAAAA,KAAK,EAAEkP,MANsC;AAO7C9K,MAAAA,QAAQ,EAAEA,QAPmC;AAQ7CgL,MAAAA,SAAS,EAAEzK,MAAM,GAAGiJ,iBAAH,GAAuB3B;AARK,KAA3B,EASjB,aAAa1Q,KAAK,CAAC8S,aAAN,CAAoB,KAApB,EAA2B;AACzCvL,MAAAA,SAAS,EAAEmM;AAD8B,KAA3B,EAEbpM,WAAW,GAAG,aAAatH,KAAK,CAAC8S,aAAN,CAAoBpS,SAApB,EAA+B;AAC3DoT,MAAAA,aAAa,EAAE1K,MAAM,GAAGrC,MAAH,GAAYE,aAD0B;AAE3DxC,MAAAA,KAAK,EAAE;AACLsP,QAAAA,KAAK,EAAE,MADF;AAELhN,QAAAA,MAAM,EAAE;AAFH;AAFoD,KAA/B,EAM3B,UAAUiN,KAAV,EAAiB;AAClB,UAAIjN,MAAM,GAAGiN,KAAK,CAACjN,MAAnB;AACA,aAAO,aAAa/G,KAAK,CAAC8S,aAAN,CAAoBrS,IAApB,EAA0BjB,QAAQ,CAAC;AACrD2E,QAAAA,GAAG,EAAEoF,OADgD;AAErDxC,QAAAA,MAAM,EAAEA,MAF6C;AAGrDhD,QAAAA,QAAQ,EAAEA,QAH2C;AAIrDkQ,QAAAA,SAAS,EAAE1F,cAAc,CAACY,MAJ2B;AAKrD+E,QAAAA,QAAQ,EAAE3F;AAL2C,OAAD,EAMnDvG,SANmD,CAAlC,EAMLiL,qBANK,CAApB;AAOD,KAf6B,CAAhB,GAeT1E,cAjBW,CATI,CAApB;AA2BD,GA7CD;;AA+CA,MAAI4F,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,aAA5B,EAA2CC,UAA3C,EAAuD;AAC9E,QAAIpC,IAAI,GAAGmC,aAAa,CAACnC,IAAzB;AAAA,QACIqC,GAAG,GAAGF,aAAa,CAACE,GADxB;AAAA,QAEI/M,SAAS,GAAG6M,aAAa,CAAC7M,SAF9B;AAGA,QAAIiM,OAAO,GAAGhT,UAAU,CAAC+G,SAAD,EAAYG,aAAZ,EAA2B0C,MAAM,CAAC,iBAAD,CAAjC,CAAxB;;AAEA,QAAImK,eAAe,GAAG/U,QAAQ,CAAC,EAAD,EAAK0H,SAAL,EAAgB;AAC5C+K,MAAAA,IAAI,EAAEA,IADsC;AAE5CqC,MAAAA,GAAG,EAAEA;AAFuC,KAAhB,CAA9B;;AAKA,WAAO,aAAatU,KAAK,CAAC8S,aAAN,CAAoBrR,aAApB,EAAmC;AACrD+S,MAAAA,SAAS,EAAE5M,aAD0C;AAErDL,MAAAA,SAAS,EAAEiM,OAF0C;AAGrD/O,MAAAA,KAAK,EAAE8P,eAH8C;AAIrDpQ,MAAAA,GAAG,EAAE9C,SAAS,CAACmI,UAAD,EAAa6K,UAAb,CAJuC;AAKrDR,MAAAA,SAAS,EAAEjC,eAL0C;AAMrDhB,MAAAA,MAAM,EAAEvH;AAN6C,KAAnC,EAOjBjC,UAAU,GAAG,aAAapH,KAAK,CAAC8S,aAAN,CAAoBpR,SAApB,EAA+B;AAC1DuE,MAAAA,WAAW,EAAEZ,MAAM,CAACoP,iBADsC;AAE1DpM,MAAAA,QAAQ,EAAEkE,YAFgD;AAG1DpG,MAAAA,KAAK,EAAEkG,kBAHmD;AAI1DqI,MAAAA,QAAQ,EAAEjL;AAJgD,KAA/B,CAAhB,GAKR,IAZe,EAYTxB,UAAU,GAAGA,UAAU,CAACoL,eAAe,EAAhB,CAAb,GAAmCA,eAAe,EAZnD,EAYuDlL,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,iBAAiB,EAZ9I,CAApB;AAaD,GAxBD;;AA0BA,MAAIwM,aAAa,GAAGrU,OAAO,CAAC,YAAY;AACtC,WAAOqC,gBAAgB,CAACmJ,YAAD,EAAe3F,KAAf,CAAvB;AACD,GAF0B,EAExB,CAAC2F,YAAD,EAAe3F,KAAf,CAFwB,CAA3B;AAGA;AACF;AACA;AACA;;AAEE,MAAIyO,aAAa,GAAGD,aAAa,CAACxF,MAAd,GAAuB,CAAvB,IAA4BhJ,KAAK,CAACgJ,MAAN,GAAe,CAAf,IAAoBtP,WAAW,CAACkJ,WAAD,CAA/E;;AAEA,MAAI8L,eAAe,GAAG5O,WAAtB;;AAEA,MAAI2O,aAAJ,EAAmB;AACjBC,IAAAA,eAAe,GAAG,aAAa7U,KAAK,CAAC8S,aAAN,CAAoBnR,eAApB,EAAqC;AAClEgT,MAAAA,aAAa,EAAEA,aADmD;AAElE5P,MAAAA,SAAS,EAAEA,SAFuD;AAGlEW,MAAAA,QAAQ,EAAEA,QAHwD;AAIlEE,MAAAA,QAAQ,EAAEA,QAJwD;AAKlEI,MAAAA,WAAW,EAAEA,WALqD;AAMlEoE,MAAAA,MAAM,EAAEA,MAN0D;AAOlE7E,MAAAA,OAAO,EAAEA,OAPyD;AAQlEF,MAAAA,MAAM,EAAEA;AAR0D,KAArC,CAA/B;;AAWA,QAAIxF,WAAW,CAACkJ,WAAD,CAAf,EAA8B;AAC5B8L,MAAAA,eAAe,GAAG9L,WAAW,CAAC5C,KAAD,EAAQwO,aAAR,EAAuBE,eAAvB,CAA7B;;AAEA,UAAI9U,MAAM,CAAC8U,eAAD,CAAV,EAA6B;AAC3BD,QAAAA,aAAa,GAAG,KAAhB;AACD;AACF;AACF;;AAED,MAAIE,mBAAmB,GAAGhT,kBAAkB,CAACtC,QAAQ,CAAC,EAAD,EAAK0E,KAAL,EAAY;AAC/DuD,IAAAA,WAAW,EAAEA,WADkD;AAE/D9C,IAAAA,UAAU,EAAEA,UAFmD;AAG/DI,IAAAA,SAAS,EAAEA,SAHoD;AAI/DF,IAAAA,SAAS,EAAEA,SAJoD;AAK/DW,IAAAA,QAAQ,EAAEA,QALqD;AAM/DuP,IAAAA,QAAQ,EAAEH,aANqD;AAO/DI,IAAAA,IAAI,EAAE;AAPyD,GAAZ,CAAT,CAA5C;AAAA,MASIxB,OAAO,GAAGsB,mBAAmB,CAAC,CAAD,CATjC;AAAA,MAUIG,qBAAqB,GAAGH,mBAAmB,CAAC,CAAD,CAV/C;;AAYA,MAAI1L,MAAJ,EAAY;AACV,WAAOiK,eAAe,EAAtB;AACD;;AAED,SAAO,aAAarT,KAAK,CAAC8S,aAAN,CAAoBlR,mBAApB,EAAyC;AAC3DsT,IAAAA,WAAW,EAAEpV,KAAK,CAACoE,KAAD,EAAQlC,mBAAR,CADyC;AAE3DmC,IAAAA,GAAG,EAAEkF,UAFsD;AAG3DvD,IAAAA,SAAS,EAAEA,SAHgD;AAI3DqP,IAAAA,OAAO,EAAEtF,UAJkD;AAK3DzH,IAAAA,SAAS,EAAEA,SALgD;AAM3DI,IAAAA,QAAQ,EAAExH,qBAAqB,CAACkP,WAAD,EAAc1H,QAAd,CAN4B;AAO3D4M,IAAAA,OAAO,EAAEjB;AAPkD,GAAzC,EAQjB,aAAanU,KAAK,CAAC8S,aAAN,CAAoBxO,SAApB,EAA+B;AAC7CiD,IAAAA,SAAS,EAAEiM,OADkC;AAE7C/O,IAAAA,KAAK,EAAEA;AAFsC,GAA/B,EAGb,aAAazE,KAAK,CAAC8S,aAAN,CAAoBxR,YAApB,EAAkC9B,QAAQ,CAAC,EAAD,EAAKI,KAAK,CAACsJ,IAAD,EAAO,GAAGmM,MAAH,CAAUpT,mBAAV,EAA+BgT,qBAA/B,CAAP,CAAV,EAAyE;AACjIlN,IAAAA,EAAE,EAAEA,EAD6H;AAEjI5D,IAAAA,GAAG,EAAEmF,SAF4H;AAGjI3E,IAAAA,UAAU,EAAEA,UAHqH;AAIjIkP,IAAAA,SAAS,EAAEjC,eAJsH;AAKjItJ,IAAAA,OAAO,EAAEtH,qBAAqB,CAAC2P,WAAD,EAAcrI,OAAd,CALmG;AAMjIzD,IAAAA,SAAS,EAAEA,SAAS,IAAI,CAACW,QANwG;AAOjIA,IAAAA,QAAQ,EAAEA,QAPuH;AAQjInB,IAAAA,EAAE,EAAEY,QAR6H;AASjI8P,IAAAA,QAAQ,EAAEH,aATuH;AAUjI9K,IAAAA,MAAM,EAAEA,MAVyH;AAWjIhE,IAAAA,SAAS,EAAEA,SAXsH;AAYjIwP,IAAAA,UAAU,EAAEnP;AAZqH,GAAzE,CAA1C,EAaZ0O,eAAe,IAAIxP,MAAM,CAACY,WAbd,CAHA,CARI,CAApB;AAyBD,CApwBkC,CAAnC;AAqwBAjC,eAAe,CAACuR,WAAhB,GAA8B,iBAA9B;AACAvR,eAAe,CAACwR,SAAhB,GAA4BhW,QAAQ,CAAC,EAAD,EAAK0C,mBAAL,EAA0B;AAC5D6E,EAAAA,MAAM,EAAExG,SAAS,CAACkV,MAD0C;AAE5D9Q,EAAAA,UAAU,EAAEpE,SAAS,CAACmV,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,CAAhB,CAFgD;AAG5DrQ,EAAAA,MAAM,EAAE9E,SAAS,CAACoV,GAH0C;AAI5DpQ,EAAAA,OAAO,EAAEhF,SAAS,CAACqV,IAJyC;AAK5D7Q,EAAAA,SAAS,EAAExE,SAAS,CAACqV,IALuC;AAM5DxO,EAAAA,UAAU,EAAE7G,SAAS,CAACqV,IANsC;AAO5DtO,EAAAA,WAAW,EAAE/G,SAAS,CAACqV,IAPqC;AAQ5D1Q,EAAAA,aAAa,EAAE3E,SAAS,CAACsV,MARmC;AAS5DjO,EAAAA,aAAa,EAAErH,SAAS,CAACqV,IATmC;AAU5DrP,EAAAA,gBAAgB,EAAEhG,SAAS,CAACqV,IAVgC;AAW5DE,EAAAA,gBAAgB,EAAEvV,SAAS,CAACkV,MAXgC;AAY5DhP,EAAAA,kBAAkB,EAAElG,SAAS,CAACwV,KAZ8B;AAa5DpP,EAAAA,gBAAgB,EAAEpG,SAAS,CAACwV,KAbgC;AAc5DlP,EAAAA,uBAAuB,EAAEtG,SAAS,CAACwV,KAdyB;AAe5DjO,EAAAA,qBAAqB,EAAEvH,SAAS,CAACwV,KAf2B;AAgB5DtN,EAAAA,QAAQ,EAAElI,SAAS,CAACyV,IAhBwC;AAiB5DlN,EAAAA,QAAQ,EAAEvI,SAAS,CAACyV,IAjBwC;AAkB5DtN,EAAAA,QAAQ,EAAEnI,SAAS,CAACyV,IAlBwC;AAmB5D/N,EAAAA,UAAU,EAAE1H,SAAS,CAACyV,IAnBsC;AAoB5D/M,EAAAA,cAAc,EAAE1I,SAAS,CAACyV,IApBkC;AAqB5DhN,EAAAA,cAAc,EAAEzI,SAAS,CAACyV,IArBkC;AAsB5DhR,EAAAA,QAAQ,EAAEzE,SAAS,CAACyV,IAtBwC;AAuB5DnN,EAAAA,QAAQ,EAAEtI,SAAS,CAACyV;AAvBwC,CAA1B,CAApC;AAyBA,eAAehS,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _omit from \"lodash/omit\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nimport _isNil from \"lodash/isNil\";\nimport React, { useState, useRef, useEffect, useCallback, useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { List, AutoSizer } from '../Windowing';\nimport CheckTreeNode from './CheckTreeNode';\nimport TreeContext from '../Tree/TreeContext';\nimport { getKeyParentMap, getPathTowardsItem, getTreeNodeIndent } from '../utils/treeUtils';\nimport { createChainedFunction, useCustom, useClassNames, useControlled, KEY_VALUES, mergeRefs } from '../utils';\nimport { PickerToggle, onMenuKeyDown as _onMenuKeyDown, PickerOverlay, SearchBar, SelectedElement, PickerToggleTrigger, createConcatChildrenFunction, usePickerClassName, usePublicMethods, pickTriggerPropKeys, omitTriggerPropKeys, listPickerPropTypes, useToggleKeyDownEvent } from '../Picker';\nimport { isEveryChildChecked, isSomeNodeHasChildren, isAllSiblingNodeUncheckable, isEveryFirstLevelNodeUncheckable, getFormattedTree, getDisabledState, getCheckTreePickerDefaultValue, getSelectedItems, isNodeUncheckable } from './utils';\nimport { hasVisibleChildren, getExpandWhenSearching, useTreeSearch, useTreeNodeRefs, getDefaultExpandItemValues, useFlattenTreeData, focusNextItem, getFocusableItems, focusPreviousItem, toggleExpand, getActiveItem, useGetTreeNodeChildren, focusToActiveTreeNode, focusTreeNode, leftArrowHandler, rightArrowHandler, isSearching } from '../utils/treeUtils';\nvar emptyArray = [];\n\nvar itemSize = function itemSize() {\n  return 36;\n};\n\nvar CheckTreePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$data = props.data,\n      data = _props$data === void 0 ? emptyArray : _props$data,\n      style = props.style,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$cleanable = props.cleanable,\n      cleanable = _props$cleanable === void 0 ? true : _props$cleanable,\n      _props$countable = props.countable,\n      countable = _props$countable === void 0 ? true : _props$countable,\n      searchBy = props.searchBy,\n      toggleAs = props.toggleAs,\n      searchKeyword = props.searchKeyword,\n      showIndentLine = props.showIndentLine,\n      overrideLocale = props.locale,\n      _props$cascade = props.cascade,\n      cascade = _props$cascade === void 0 ? true : _props$cascade,\n      disabled = props.disabled,\n      _props$valueKey = props.valueKey,\n      valueKey = _props$valueKey === void 0 ? 'value' : _props$valueKey,\n      _props$labelKey = props.labelKey,\n      labelKey = _props$labelKey === void 0 ? 'label' : _props$labelKey,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      _props$childrenKey = props.childrenKey,\n      childrenKey = _props$childrenKey === void 0 ? 'children' : _props$childrenKey,\n      placeholder = props.placeholder,\n      controlledValue = props.value,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? emptyArray : _props$defaultValue,\n      _props$defaultExpandA = props.defaultExpandAll,\n      defaultExpandAll = _props$defaultExpandA === void 0 ? false : _props$defaultExpandA,\n      _props$disabledItemVa = props.disabledItemValues,\n      disabledItemValues = _props$disabledItemVa === void 0 ? emptyArray : _props$disabledItemVa,\n      controlledExpandItemValues = props.expandItemValues,\n      _props$defaultExpandI = props.defaultExpandItemValues,\n      defaultExpandItemValues = _props$defaultExpandI === void 0 ? emptyArray : _props$defaultExpandI,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 360 : _props$height,\n      _props$menuMaxHeight = props.menuMaxHeight,\n      menuMaxHeight = _props$menuMaxHeight === void 0 ? 320 : _props$menuMaxHeight,\n      menuStyle = props.menuStyle,\n      _props$searchable = props.searchable,\n      searchable = _props$searchable === void 0 ? true : _props$searchable,\n      _props$virtualized = props.virtualized,\n      virtualized = _props$virtualized === void 0 ? false : _props$virtualized,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker' : _props$classPrefix,\n      menuClassName = props.menuClassName,\n      _props$menuAutoWidth = props.menuAutoWidth,\n      menuAutoWidth = _props$menuAutoWidth === void 0 ? true : _props$menuAutoWidth,\n      _props$uncheckableIte = props.uncheckableItemValues,\n      uncheckableItemValues = _props$uncheckableIte === void 0 ? emptyArray : _props$uncheckableIte,\n      id = props.id,\n      listProps = props.listProps,\n      renderMenu = props.renderMenu,\n      getChildren = props.getChildren,\n      renderExtraFooter = props.renderExtraFooter,\n      onEntered = props.onEntered,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onExited = props.onExited,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onSelectItem = props.onSelectItem,\n      onOpen = props.onOpen,\n      onScroll = props.onScroll,\n      onExpand = props.onExpand,\n      renderValue = props.renderValue,\n      renderTreeIcon = props.renderTreeIcon,\n      renderTreeNode = props.renderTreeNode,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"data\", \"style\", \"appearance\", \"cleanable\", \"countable\", \"searchBy\", \"toggleAs\", \"searchKeyword\", \"showIndentLine\", \"locale\", \"cascade\", \"disabled\", \"valueKey\", \"labelKey\", \"placement\", \"childrenKey\", \"placeholder\", \"value\", \"defaultValue\", \"defaultExpandAll\", \"disabledItemValues\", \"expandItemValues\", \"defaultExpandItemValues\", \"height\", \"menuMaxHeight\", \"menuStyle\", \"searchable\", \"virtualized\", \"className\", \"classPrefix\", \"menuClassName\", \"menuAutoWidth\", \"uncheckableItemValues\", \"id\", \"listProps\", \"renderMenu\", \"getChildren\", \"renderExtraFooter\", \"onEntered\", \"onChange\", \"onClean\", \"onClose\", \"onExited\", \"onSearch\", \"onSelect\", \"onSelectItem\", \"onOpen\", \"onScroll\", \"onExpand\", \"renderValue\", \"renderTreeIcon\", \"renderTreeNode\"]);\n\n  var _useContext = useContext(TreeContext),\n      inline = _useContext.inline;\n\n  var triggerRef = useRef(null);\n  var targetRef = useRef(null);\n  var listRef = useRef(null);\n  var overlayRef = useRef(null);\n  var searchInputRef = useRef(null);\n  var treeViewRef = useRef(null);\n\n  var _useCustom = useCustom('Picker', overrideLocale),\n      rtl = _useCustom.rtl,\n      locale = _useCustom.locale;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(null),\n      activeNode = _useState2[0],\n      setActiveNode = _useState2[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var _useClassNames2 = useClassNames('check-tree'),\n      checkTreePrefix = _useClassNames2.prefix,\n      withCheckTreeClassPrefix = _useClassNames2.withClassPrefix;\n\n  var _useControlled = useControlled(controlledValue, defaultValue),\n      value = _useControlled[0],\n      setValue = _useControlled[1],\n      isControlled = _useControlled[2];\n\n  var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey),\n      treeData = _useGetTreeNodeChildr.data,\n      setTreeData = _useGetTreeNodeChildr.setData,\n      loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues,\n      loadChildren = _useGetTreeNodeChildr.loadChildren;\n\n  var _useControlled2 = useControlled(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {\n    defaultExpandAll: defaultExpandAll,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    defaultExpandItemValues: defaultExpandItemValues\n  })),\n      expandItemValues = _useControlled2[0],\n      setExpandItemValues = _useControlled2[1];\n\n  var _useState3 = useState(null),\n      focusItemValue = _useState3[0],\n      setFocusItemValue = _useState3[1];\n\n  var _useFlattenTreeData = useFlattenTreeData({\n    data: treeData,\n    labelKey: labelKey,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    uncheckableItemValues: uncheckableItemValues,\n    callback: function callback(nodes) {\n      // after flattenData, always unSerialize check property value\n      unSerializeList({\n        nodes: nodes,\n        key: 'check',\n        value: value,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      forceUpdate();\n    }\n  }),\n      flattenNodes = _useFlattenTreeData.flattenNodes,\n      forceUpdate = _useFlattenTreeData.forceUpdate,\n      formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData,\n      serializeListOnlyParent = _useFlattenTreeData.serializeListOnlyParent,\n      unSerializeList = _useFlattenTreeData.unSerializeList;\n\n  var _useTreeSearch = useTreeSearch({\n    labelKey: labelKey,\n    childrenKey: childrenKey,\n    searchKeyword: searchKeyword,\n    data: treeData,\n    searchBy: searchBy,\n    callback: function callback(searchKeyword, _filterData, event) {\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword, event);\n    }\n  }),\n      filteredData = _useTreeSearch.filteredData,\n      searchKeywordState = _useTreeSearch.searchKeywordState,\n      setSearchKeyword = _useTreeSearch.setSearchKeyword,\n      handleSearch = _useTreeSearch.handleSearch,\n      setFilteredData = _useTreeSearch.setFilteredData;\n\n  var _useTreeNodeRefs = useTreeNodeRefs(),\n      treeNodesRefs = _useTreeNodeRefs.treeNodesRefs,\n      saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;\n  /**\n   * get formatted nodes for render tree\n   * @params render - renderNode function. only used when virtualized setting false\n   */\n\n\n  var getFormattedNodes = useCallback(function (render) {\n    if (virtualized) {\n      return formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, {\n        cascade: cascade,\n        searchKeyword: searchKeywordState\n      }).filter(function (item) {\n        return item.visible;\n      });\n    }\n\n    return getFormattedTree(filteredData, flattenNodes, {\n      childrenKey: childrenKey,\n      cascade: cascade\n    }).map(function (node) {\n      return render === null || render === void 0 ? void 0 : render(node, 1);\n    });\n  }, [searchKeywordState, expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized, childrenKey, cascade]);\n\n  var getTreeNodeProps = function getTreeNodeProps(node, layer) {\n    return {\n      as: Component,\n      rtl: rtl,\n      value: node[valueKey],\n      label: node[labelKey],\n      layer: layer,\n      focus: focusItemValue === node[valueKey],\n      expand: node.expand,\n      visible: node.visible,\n      loading: loadingNodeValues.some(function (item) {\n        return item === node[valueKey];\n      }),\n      disabled: getDisabledState(flattenNodes, node, {\n        disabledItemValues: disabledItemValues,\n        valueKey: valueKey\n      }),\n      nodeData: node,\n      checkState: node.checkState,\n      uncheckable: isNodeUncheckable(node, {\n        uncheckableItemValues: uncheckableItemValues,\n        valueKey: valueKey\n      }),\n      allUncheckable: isAllSiblingNodeUncheckable(node, flattenNodes, uncheckableItemValues, valueKey),\n      onSelect: handleSelect,\n      onExpand: handleExpand,\n      onRenderTreeNode: renderTreeNode,\n      onRenderTreeIcon: renderTreeIcon\n    };\n  };\n\n  var focusActiveNode = useCallback(function () {\n    if (listRef.current) {\n      focusToActiveTreeNode({\n        list: listRef.current,\n        valueKey: valueKey,\n        selector: \".\" + checkTreePrefix('node-active'),\n        activeNode: activeNode,\n        virtualized: virtualized,\n        container: treeViewRef.current,\n        formattedNodes: getFormattedNodes()\n      });\n    }\n  }, [checkTreePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);\n  useEffect(function () {\n    setValue(getCheckTreePickerDefaultValue(value, uncheckableItemValues));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setFilteredData(data, searchKeywordState);\n    setTreeData(data);\n  }, [data, searchKeywordState, setFilteredData, setTreeData]);\n  useEffect(function () {\n    setFilteredData(treeData, searchKeywordState);\n  }, [treeData, searchKeywordState, setFilteredData]);\n  useEffect(function () {\n    if (Array.isArray(controlledExpandItemValues)) {\n      setExpandItemValues(controlledExpandItemValues);\n    }\n  }, [controlledExpandItemValues, setExpandItemValues]);\n  useEffect(function () {\n    setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : '');\n  }, [searchKeyword, setSearchKeyword]);\n  useEffect(function () {\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: value,\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    forceUpdate();\n  }, [cascade, value, uncheckableItemValues, unSerializeList, flattenNodes, forceUpdate]);\n  var toggleUpChecked = useCallback(function (nodes, node, checked) {\n    var currentNode = node.refKey ? nodes[node.refKey] : null;\n\n    if (cascade && currentNode) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(nodes, currentNode)) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n\n      if (currentNode.parent) {\n        toggleUpChecked(nodes, currentNode.parent, checked);\n      }\n    }\n  }, [cascade]);\n  var toggleDownChecked = useCallback(function (nodes, node, isChecked) {\n    var currentNode = node.refKey ? nodes[node.refKey] : null;\n\n    if (!currentNode) {\n      return;\n    }\n\n    currentNode.check = isChecked;\n\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        toggleDownChecked(nodes, child, isChecked);\n      });\n    }\n  }, [cascade, childrenKey]);\n  var toggleChecked = useCallback(function (node, isChecked) {\n    var nodes = _cloneDeep(flattenNodes);\n\n    toggleDownChecked(nodes, node, isChecked);\n    node.parent && toggleUpChecked(nodes, node.parent, isChecked);\n    var values = serializeListOnlyParent(nodes, 'check'); // filter uncheckableItemValues\n\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  }, [flattenNodes, uncheckableItemValues, serializeListOnlyParent, toggleDownChecked, toggleUpChecked]); // TODO-Doma\n  // Replace `getKeyParentMap` with `getParentMap`\n\n  var itemParentMap = useMemo(function () {\n    return getKeyParentMap(data, function (node) {\n      return node[valueKey];\n    }, function (node) {\n      return node[childrenKey];\n    });\n  }, [childrenKey, data, valueKey]);\n  var handleSelect = useCallback(function (node, event) {\n    var currentNode = node.refKey ? flattenNodes[node.refKey] : null;\n\n    if (!node || !currentNode) {\n      return;\n    }\n\n    var selectedValues = toggleChecked(node, !currentNode.check);\n\n    if (!isControlled) {\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: selectedValues,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      setValue(selectedValues);\n    }\n\n    setActiveNode(node);\n    setFocusItemValue(node[valueKey]);\n    onChange === null || onChange === void 0 ? void 0 : onChange(selectedValues, event);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, selectedValues, event);\n    onSelectItem === null || onSelectItem === void 0 ? void 0 : onSelectItem(node, getPathTowardsItem(node, function (item) {\n      return itemParentMap.get(item[valueKey]);\n    }));\n  }, [flattenNodes, toggleChecked, isControlled, valueKey, onChange, onSelect, onSelectItem, unSerializeList, cascade, uncheckableItemValues, setValue, itemParentMap]);\n  var handleOpen = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$o;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$o = _triggerRef$current.open) === null || _triggerRef$current$o === void 0 ? void 0 : _triggerRef$current$o.call(_triggerRef$current);\n    setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);\n    focusActiveNode();\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setActive(true);\n  }, [activeNode, focusActiveNode, onOpen, valueKey]);\n  var handleClose = useCallback(function () {\n    var _triggerRef$current2, _triggerRef$current2$, _targetRef$current;\n\n    (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.close) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);\n    setSearchKeyword('');\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setFocusItemValue(null);\n    setActive(false);\n    /**\n     * when using keyboard toggle picker, should refocus on PickerToggle Component after close picker menu\n     */\n\n    (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();\n  }, [onClose, setSearchKeyword]);\n  var handleExpand = useCallback(function (node) {\n    var nextExpandItemValues = toggleExpand({\n      node: node,\n      isExpand: !node.expand,\n      expandItemValues: expandItemValues,\n      valueKey: valueKey\n    });\n    setExpandItemValues(nextExpandItemValues);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node, createConcatChildrenFunction(node, node[valueKey], {\n      valueKey: valueKey,\n      childrenKey: childrenKey\n    }));\n\n    if (_isFunction(getChildren) && !node.expand && Array.isArray(node[childrenKey]) && node[childrenKey].length === 0) {\n      loadChildren(node, getChildren);\n    }\n  }, [childrenKey, expandItemValues, getChildren, loadChildren, onExpand, setExpandItemValues, valueKey]);\n  usePublicMethods(ref, {\n    rootRef: inline ? treeViewRef : undefined,\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef,\n    listRef: listRef,\n    inline: inline\n  });\n  var handleClean = useCallback(function (event) {\n    var target = event.target; // exclude searchBar\n\n    if (target.matches('div[role=\"searchbox\"] > input') || disabled || !cleanable) {\n      return;\n    }\n\n    setActiveNode(null);\n    setFocusItemValue(null);\n\n    if (!isControlled) {\n      setValue([]);\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: [],\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange([], event);\n  }, [cascade, cleanable, disabled, flattenNodes, onChange, setValue, unSerializeList, uncheckableItemValues, isControlled]);\n  var handleFocusItem = useCallback(function (key) {\n    var focusableItems = getFocusableItems(filteredData, {\n      disabledItemValues: disabledItemValues,\n      valueKey: valueKey,\n      childrenKey: childrenKey,\n      expandItemValues: expandItemValues\n    }, isSearching(searchKeywordState));\n    var selector = \".\" + checkTreePrefix('node-label');\n    var focusProps = {\n      focusItemValue: focusItemValue,\n      focusableItems: focusableItems,\n      treeNodesRefs: treeNodesRefs,\n      selector: selector,\n      valueKey: valueKey,\n      callback: function callback(nextFocusItemValue) {\n        setFocusItemValue(nextFocusItemValue);\n      }\n    };\n\n    if (key === KEY_VALUES.DOWN) {\n      focusNextItem(focusProps);\n      return;\n    }\n\n    if (key === KEY_VALUES.UP) {\n      focusPreviousItem(focusProps);\n    }\n  }, [searchKeywordState, checkTreePrefix, expandItemValues, filteredData, focusItemValue, treeNodesRefs, childrenKey, valueKey, disabledItemValues]);\n  var handleLeftArrow = useCallback(function () {\n    if (_isNil(focusItemValue)) return;\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    leftArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      onExpand: handleExpand,\n      childrenKey: childrenKey,\n      onFocusItem: function onFocusItem() {\n        var _focusItem$parent, _focusItem$parent2;\n\n        setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);\n        focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, \".\" + checkTreePrefix('node-label'));\n      }\n    });\n  }, [checkTreePrefix, expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, valueKey, childrenKey]);\n  var handleRightArrow = useCallback(function () {\n    if (_isNil(focusItemValue)) return;\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    rightArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      childrenKey: childrenKey,\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        handleFocusItem(KEY_VALUES.DOWN);\n      }\n    });\n  }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);\n  var selectActiveItem = useCallback(function (event) {\n    if (_isNil(focusItemValue)) return;\n    var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n\n    if (!isNodeUncheckable(activeItem, {\n      uncheckableItemValues: uncheckableItemValues,\n      valueKey: valueKey\n    }) && activeItem !== null) {\n      handleSelect(activeItem, event);\n    }\n  }, [flattenNodes, focusItemValue, handleSelect, uncheckableItemValues, valueKey]);\n  var onPickerKeydown = useToggleKeyDownEvent({\n    toggle: !focusItemValue || !active,\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    searchInputRef: searchInputRef,\n    active: active,\n    onExit: handleClean,\n    onClose: handleClose,\n    onMenuKeyDown: function onMenuKeyDown(event) {\n      _onMenuKeyDown(event, {\n        down: function down() {\n          return handleFocusItem(KEY_VALUES.DOWN);\n        },\n        up: function up() {\n          return handleFocusItem(KEY_VALUES.UP);\n        },\n        left: rtl ? handleRightArrow : handleLeftArrow,\n        right: rtl ? handleLeftArrow : handleRightArrow,\n        enter: selectActiveItem,\n        del: handleClean\n      });\n    }\n  });\n  var handleTreeKeydown = useCallback(function (event) {\n    if (!treeViewRef.current) {\n      return;\n    }\n\n    _onMenuKeyDown(event, {\n      down: function down() {\n        return handleFocusItem(KEY_VALUES.DOWN);\n      },\n      up: function up() {\n        return handleFocusItem(KEY_VALUES.UP);\n      },\n      left: rtl ? handleRightArrow : handleLeftArrow,\n      right: rtl ? handleLeftArrow : handleRightArrow,\n      enter: selectActiveItem\n    });\n  }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);\n\n  var renderNode = function renderNode(node, layer) {\n    var visible = node.visible,\n        refKey = node.refKey; // when searching, all nodes should be expand\n\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    if (!visible) {\n      return null;\n    }\n\n    var children = node[childrenKey];\n    var visibleChildren = _isUndefined(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node, childrenKey);\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      /**\n       * spread operator don't copy unenumerable properties\n       * so we need to copy them manually\n       */\n      parent: node.parent,\n      expand: expand\n    }), layer), {\n      hasChildren: visibleChildren\n    });\n\n    if (nodeProps.hasChildren) {\n      var _merge;\n\n      layer += 1;\n      var openClass = checkTreePrefix('open');\n      var childrenClass = merge(checkTreePrefix('node-children'), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));\n      var nodes = children || [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: childrenClass,\n        key: node[valueKey]\n      }, /*#__PURE__*/React.createElement(CheckTreeNode, _extends({}, nodeProps, {\n        ref: function ref(_ref) {\n          return saveTreeNodeRef(_ref, refKey);\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: checkTreePrefix('children')\n      }, nodes.map(function (child) {\n        return renderNode(child, layer);\n      }), showIndentLine && /*#__PURE__*/React.createElement(\"span\", {\n        className: checkTreePrefix('indent-line'),\n        style: getTreeNodeIndent(rtl, layer - 1, true)\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      key: node[valueKey],\n      ref: function ref(_ref2) {\n        return saveTreeNodeRef(_ref2, refKey);\n      }\n    }, nodeProps));\n  };\n\n  var renderVirtualListNode = function renderVirtualListNode(_ref3) {\n    var index = _ref3.index,\n        style = _ref3.style,\n        data = _ref3.data;\n    var node = data[index];\n    var layer = node.layer,\n        refKey = node.refKey,\n        visible = node.visible;\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      /**\n       * spread operator don't copy unenumerable properties\n       * so we need to copy them manually\n       */\n      parent: node.parent,\n      expand: expand\n    }), layer), {\n      hasChildren: node.hasChildren\n    });\n\n    return visible && /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      style: style,\n      ref: function ref(_ref4) {\n        return saveTreeNodeRef(_ref4, refKey);\n      }\n    }, nodeProps));\n  };\n\n  var renderCheckTree = function renderCheckTree() {\n    var _withCheckTreeClassPr, _merge2;\n\n    var classes = withCheckTreeClassPrefix((_withCheckTreeClassPr = {}, _withCheckTreeClassPr[className !== null && className !== void 0 ? className : ''] = inline, _withCheckTreeClassPr['without-children'] = !isSomeNodeHasChildren(data, childrenKey), _withCheckTreeClassPr.virtualized = virtualized, _withCheckTreeClassPr));\n    var formattedNodes = getFormattedNodes(renderNode);\n\n    if (!formattedNodes.some(function (v) {\n      return v !== null;\n    })) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('none')\n      }, locale.noResultsText);\n    }\n\n    var treeNodesClass = merge(checkTreePrefix('nodes'), (_merge2 = {}, _merge2[checkTreePrefix('all-uncheckable')] = isEveryFirstLevelNodeUncheckable(flattenNodes, uncheckableItemValues, valueKey), _merge2));\n    var styles = inline ? _extends({\n      height: height\n    }, style) : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id ? id + \"-listbox\" : undefined,\n      ref: treeViewRef,\n      role: \"tree\",\n      \"aria-multiselectable\": true,\n      className: classes,\n      style: styles,\n      onScroll: onScroll,\n      onKeyDown: inline ? handleTreeKeydown : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: treeNodesClass\n    }, virtualized ? /*#__PURE__*/React.createElement(AutoSizer, {\n      defaultHeight: inline ? height : menuMaxHeight,\n      style: {\n        width: 'auto',\n        height: 'auto'\n      }\n    }, function (_ref5) {\n      var height = _ref5.height;\n      return /*#__PURE__*/React.createElement(List, _extends({\n        ref: listRef,\n        height: height,\n        itemSize: itemSize,\n        itemCount: formattedNodes.length,\n        itemData: formattedNodes\n      }, listProps), renderVirtualListNode);\n    }) : formattedNodes));\n  };\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = classNames(className, menuClassName, prefix('check-tree-menu'));\n\n    var mergedMenuStyle = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      autoWidth: menuAutoWidth,\n      className: classes,\n      style: mergedMenuStyle,\n      ref: mergeRefs(overlayRef, speakerRef),\n      onKeyDown: onPickerKeydown,\n      target: triggerRef\n    }, searchable ? /*#__PURE__*/React.createElement(SearchBar, {\n      placeholder: locale.searchPlaceholder,\n      onChange: handleSearch,\n      value: searchKeywordState,\n      inputRef: searchInputRef\n    }) : null, renderMenu ? renderMenu(renderCheckTree()) : renderCheckTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());\n  };\n\n  var selectedItems = useMemo(function () {\n    return getSelectedItems(flattenNodes, value);\n  }, [flattenNodes, value]);\n  /**\n   * 1.Have a value and the value is valid.\n   * 2.Regardless of whether the value is valid, as long as renderValue is set, it is judged to have a value.\n   */\n\n  var hasValidValue = selectedItems.length > 0 || value.length > 0 && _isFunction(renderValue);\n\n  var selectedElement = placeholder;\n\n  if (hasValidValue) {\n    selectedElement = /*#__PURE__*/React.createElement(SelectedElement, {\n      selectedItems: selectedItems,\n      countable: countable,\n      valueKey: valueKey,\n      labelKey: labelKey,\n      childrenKey: childrenKey,\n      prefix: prefix,\n      cascade: cascade,\n      locale: locale\n    });\n\n    if (_isFunction(renderValue)) {\n      selectedElement = renderValue(value, selectedItems, selectedElement);\n\n      if (_isNil(selectedElement)) {\n        hasValidValue = false;\n      }\n    }\n  }\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    classPrefix: classPrefix,\n    appearance: appearance,\n    countable: countable,\n    cleanable: cleanable,\n    disabled: disabled,\n    hasValue: hasValidValue,\n    name: 'check-tree'\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  if (inline) {\n    return renderCheckTree();\n  }\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: _pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: handleOpen,\n    onEntered: onEntered,\n    onExited: createChainedFunction(handleClose, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, _omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {\n    id: id,\n    ref: targetRef,\n    appearance: appearance,\n    onKeyDown: onPickerKeydown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    disabled: disabled,\n    as: toggleAs,\n    hasValue: hasValidValue,\n    active: active,\n    placement: placement,\n    inputValue: value\n  }), selectedElement || locale.placeholder)));\n});\nCheckTreePicker.displayName = 'CheckTreePicker';\nCheckTreePicker.propTypes = _extends({}, listPickerPropTypes, {\n  height: PropTypes.number,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  locale: PropTypes.any,\n  cascade: PropTypes.bool,\n  countable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  virtualized: PropTypes.bool,\n  searchKeyword: PropTypes.string,\n  menuAutoWidth: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  disabledItemValues: PropTypes.array,\n  expandItemValues: PropTypes.array,\n  defaultExpandItemValues: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  onSearch: PropTypes.func,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderMenu: PropTypes.func,\n  renderTreeNode: PropTypes.func,\n  renderTreeIcon: PropTypes.func,\n  searchBy: PropTypes.func,\n  onScroll: PropTypes.func\n});\nexport default CheckTreePicker;"]},"metadata":{},"sourceType":"module"}