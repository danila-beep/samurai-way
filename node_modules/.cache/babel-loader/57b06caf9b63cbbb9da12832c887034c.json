{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/MainContent/Users/UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currentPageChengerAC, followUserAC, setUsersAC, unfollowUserAC } from \"../../../store/reducers/usersReducer\";\nimport { Button } from \"../../../shared/Button\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../../constants\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersPage = () => {\n  _s();\n\n  //getting data from redux\n  const usersPageData = useSelector(state => state.usersPage);\n  const dispatch = useDispatch(); //API call\n\n  useEffect(() => {\n    const getUsersFromApi = async () => {\n      try {\n        axios.get(`${baseURL}/users?page=${usersPageData.currentPage}&count=${usersPageData.pageSize}`).then(response => {\n          const data = response.data;\n          console.log(data);\n          dispatch(setUsersAC(data)); // dispatch(setTotalUsersCount(data.totalCount));\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getUsersFromApi();\n  }, [usersPageData.currentPage, usersPageData.pageSize]); //pagination logic\n\n  const pagesCount = Math.ceil(usersPageData.totalUsersCount / usersPageData.pageSize);\n  const pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  const [pagesForRender, setPagesForRender] = useState([1, 2, 3, 4, 5]);\n  console.log(pagesForRender);\n\n  const nextPages = () => {\n    const nextPagesArray = [...pagesForRender];\n    nextPagesArray.push(nextPagesArray[4] + 1);\n    nextPagesArray.shift();\n    setPagesForRender(nextPagesArray);\n  };\n\n  const previousPages = () => {\n    const previousPagesArray = [...pagesForRender];\n\n    if (pagesForRender[0] === 1) {\n      setPagesForRender([1, 2, 3, 4, 5]);\n    }\n\n    previousPagesArray.pop();\n    console.log(previousPagesArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: usersPageData.users.items.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            padding: \"10px\",\n            margin: \"10px\",\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.photos.small ? user.photos.small : \"https://www.istockphoto.com/photos/user-profile\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => dispatch(followUserAC(user.id)),\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => dispatch(unfollowUserAC(user.id)),\n              children: \"Unfollow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: user.followed.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageSelectorWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: previousPages,\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), pagesForRender.map((p, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            dispatch(currentPageChengerAC(p));\n          },\n          children: p\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: nextPages,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersPage, \"EZr12b3faH8jOb6EIt0Q1sbpVbs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UsersPage;\nexport default UsersPage;\nconst PageSelectorWrapper = styled.div`\n  & span:hover {\n    color: red;\n  }\n`;\n_c2 = PageSelectorWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UsersPage\");\n$RefreshReg$(_c2, \"PageSelectorWrapper\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/MainContent/Users/UsersPage.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","currentPageChengerAC","followUserAC","setUsersAC","unfollowUserAC","Button","axios","baseURL","styled","UsersPage","usersPageData","state","usersPage","dispatch","getUsersFromApi","get","currentPage","pageSize","then","response","data","console","log","error","pagesCount","Math","ceil","totalUsersCount","pages","i","push","pagesForRender","setPagesForRender","nextPages","nextPagesArray","shift","previousPages","previousPagesArray","pop","display","flexDirection","users","items","map","user","padding","margin","border","photos","small","name","id","followed","toString","p","index","PageSelectorWrapper","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../store/store\";\nimport {\n  UserPageType,\n  currentPageChengerAC,\n  followUserAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n} from \"../../../store/reducers/usersReducer\";\nimport { Button } from \"../../../shared/Button\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../../constants\";\nimport styled from \"styled-components\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const dispatch = useDispatch();\n\n  //API call\n  useEffect(() => {\n    const getUsersFromApi = async () => {\n      try {\n        axios\n          .get(\n            `${baseURL}/users?page=${usersPageData.currentPage}&count=${usersPageData.pageSize}`\n          )\n          .then((response) => {\n            const data = response.data;\n            console.log(data);\n            dispatch(setUsersAC(data));\n            // dispatch(setTotalUsersCount(data.totalCount));\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUsersFromApi();\n  }, [usersPageData.currentPage, usersPageData.pageSize]);\n\n\n  //pagination logic\n  \n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n  \n  const pages: Array<number> = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  const [pagesForRender, setPagesForRender] = useState<Array<number>>([1, 2, 3, 4, 5])\n\n  console.log(pagesForRender);\n  \n\n  const nextPages = () => {\n    const nextPagesArray: Array<number> = [...pagesForRender]\n    nextPagesArray.push(nextPagesArray[4] + 1)\n    nextPagesArray.shift()\n    setPagesForRender(nextPagesArray)\n  }\n  const previousPages = () => {\n    const previousPagesArray: Array<number> = [...pagesForRender]\n    if (pagesForRender[0] === 1) {\n      setPagesForRender([1, 2, 3, 4, 5])\n    }\n\n    previousPagesArray.pop()\n    console.log(previousPagesArray);\n    \n  }\n  \n  \n\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        {usersPageData.users.items.map((user) => {\n          return (\n            <div\n              key={user.id}\n              style={{\n                display: \"inline-block\",\n                padding: \"10px\",\n                margin: \"10px\",\n                border: \"1px solid black\",\n              }}\n            >\n              <div>\n                <img\n                  src={\n                    user.photos.small\n                      ? user.photos.small\n                      : \"https://www.istockphoto.com/photos/user-profile\"\n                  }\n                  alt=\"\"\n                />\n              </div>\n              <span>{user.name}</span>\n              <div>\n                <Button onClick={() => dispatch(followUserAC(user.id))}>\n                  Follow\n                </Button>\n                <Button onClick={() => dispatch(unfollowUserAC(user.id))}>\n                  Unfollow\n                </Button>\n              </div>\n              <div>{user.followed.toString()}</div>\n            </div>\n          );\n        })}\n      </div>\n      <PageSelectorWrapper>\n        <span onClick={previousPages}>back</span>\n        {pagesForRender.map((p, index) => {\n          return (\n            <span\n            key={index}\n              onClick={() => {\n                dispatch(currentPageChengerAC(p));\n              }}\n            >\n              {p}\n            </span>\n          );\n        })}\n        <span onClick={nextPages}>next</span>\n      </PageSelectorWrapper>\n    </div>\n  );\n};\n\nexport default UsersPage;\n\nconst PageSelectorWrapper = styled.div`\n  & span:hover {\n    color: red;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}