{"ast":null,"code":"import { v1 } from \"uuid\";\nimport { socialMediaAPI } from \"../../api/socialMediaAPI\";\nconst profilePageState = {\n  profile: {},\n  posts: []\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : profilePageState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"profilePage/AddPost\":\n      const newState = { ...state\n      };\n      newState.posts.unshift(action.newPost);\n      return newState;\n\n    case \"profilePage/setUserProfile\":\n      {\n        return { ...state,\n          profile: { ...action.profile\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //action creators\n\n\nexport const addPostAC = postText => {\n  return {\n    type: \"profilePage/AddPost\",\n    newPost: {\n      postId: v1(),\n      postText\n    }\n  };\n};\nexport const setUserProfileAC = profile => {\n  return {\n    type: \"profilePage/setUserProfile\",\n    profile\n  };\n}; //thunk creators\n\nexport const setUserProfileTC = userId => async dispatch => {\n  socialMediaAPI.getUserProfile(userId).then(res => {\n    setUserProfileAC(res.data);\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/profileReducer.ts"],"names":["v1","socialMediaAPI","profilePageState","profile","posts","profileReducer","state","action","type","newState","unshift","newPost","addPostAC","postText","postId","setUserProfileAC","setUserProfileTC","userId","dispatch","getUserProfile","then","res","data"],"mappings":"AACA,SAASA,EAAT,QAAmB,MAAnB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,EADc;AAEvBC,EAAAA,KAAK,EAAE;AAFgB,CAAzB;;AA0CA,MAAMC,cAAc,GAAG,YAAmD;AAAA,MAAlDC,KAAkD,uEAA1CJ,gBAA0C;AAAA,MAAxBK,MAAwB;;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,YAAMC,QAAQ,GAAG,EAAE,GAAGH;AAAL,OAAjB;AACAG,MAAAA,QAAQ,CAACL,KAAT,CAAeM,OAAf,CAAuBH,MAAM,CAACI,OAA9B;AACA,aAAOF,QAAP;;AACF,SAAK,4BAAL;AAAmC;AACjC,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,OAAO,EAAE,EAAE,GAAGI,MAAM,CAACJ;AAAZ;AAFJ,SAAP;AAID;;AACD;AACE,aAAOG,KAAP;AAZJ;AAcD,CAfD,C,CAiBA;;;AACA,OAAO,MAAMM,SAAS,GAAIC,QAAD,IAAsB;AAC7C,SAAO;AACLL,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAE;AAAEG,MAAAA,MAAM,EAAEd,EAAE,EAAZ;AAAgBa,MAAAA;AAAhB;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAME,gBAAgB,GAAIZ,OAAD,IAAkB;AAChD,SAAO;AAAEK,IAAAA,IAAI,EAAE,4BAAR;AAAsCL,IAAAA;AAAtC,GAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMa,gBAAgB,GAC1BC,MAAD,IAAoB,MAAOC,QAAP,IAA8B;AAChDjB,EAAAA,cAAc,CAACkB,cAAf,CAA8BF,MAA9B,EAAsCG,IAAtC,CAA4CC,GAAD,IAAS;AAClDN,IAAAA,gBAAgB,CAACM,GAAG,CAACC,IAAL,CAAhB;AACD,GAFD;AAGD,CALI;AAOP,eAAejB,cAAf","sourcesContent":["import { Dispatch } from \"redux\";\nimport { v1 } from \"uuid\";\nimport { socialMediaAPI } from \"../../api/socialMediaAPI\";\n\nconst profilePageState = {\n  profile: {},\n  posts: [],\n};\n\ntype ProfilePageStateType = {\n  profile: {};\n  posts: PostType[];\n};\n\ntype ProfileInfoType = {\n  userId: number;\n  lookingForAJob: boolean;\n  lookingForAJobDescription: string;\n  fullName: string;\n  contacts: {\n    github: string;\n    vk: string;\n    facebook: string;\n    instagram: string;\n    twitter: string;\n    website: string;\n    youtube: string;\n    mainLink: string;\n  };\n\n  photos: {\n    small: string;\n    large: string;\n  };\n};\n\ntype PostType = {\n  postId: string;\n  postText: string;\n};\n\ntype AddPostActionType = ReturnType<typeof addPostAC>;\ntype SetUserProfileType = ReturnType<typeof setUserProfileAC>;\n\ntype ActionsType = AddPostActionType | SetUserProfileType;\n\nconst profileReducer = (state = profilePageState, action: ActionsType) => {\n  switch (action.type) {\n    case \"profilePage/AddPost\":\n      const newState = { ...state };\n      newState.posts.unshift(action.newPost);\n      return newState;\n    case \"profilePage/setUserProfile\": {\n      return {\n        ...state,\n        profile: { ...action.profile },\n      };\n    }\n    default:\n      return state;\n  }\n};\n\n//action creators\nexport const addPostAC = (postText: string) => {\n  return {\n    type: \"profilePage/AddPost\",\n    newPost: { postId: v1(), postText },\n  } as const;\n};\nexport const setUserProfileAC = (profile: any) => {\n  return { type: \"profilePage/setUserProfile\", profile } as const;\n};\n\n//thunk creators\nexport const setUserProfileTC =\n  (userId: string) => async (dispatch: Dispatch) => {\n    socialMediaAPI.getUserProfile(userId).then((res) => {\n      setUserProfileAC(res.data);\n    });\n  };\n\nexport default profileReducer;\n"]},"metadata":{},"sourceType":"module"}