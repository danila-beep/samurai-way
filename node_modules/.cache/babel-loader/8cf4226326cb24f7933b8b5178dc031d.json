{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/LoginPage/LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport s from \"./loginPage.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { createPortal } from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const isAuthorized = useSelector(state => state.auth.isAuthorized);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  if (isAuthorized) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.loginPageWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.loginPageModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this), document.body);\n};\n\n_s(LoginPage, \"UH76zSa/Xsvh0nM2paLCnoUWBYs=\", false, function () {\n  return [useSelector, useForm];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/LoginPage/LoginPage.tsx"],"names":["React","s","useSelector","Redirect","createPortal","useForm","LoginPage","isAuthorized","state","auth","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","loginPageWrapper","loginPageModal","document","body"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,YAAY,GAAGL,WAAW,CAC7BM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,YADQ,CAAhC;AAGA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA5C,MAA2DT,OAAO,EAAxE;;AACA,QAAMU,QAA+B,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAhD;;AAGA,MAAIT,YAAJ,EAAkB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAOH,YAAY,eACjB;AAAK,IAAA,SAAS,EAAEH,CAAC,CAACkB,gBAAlB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAElB,CAAC,CAACmB,cAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,MAAM,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADiB,EASjBC,QAAQ,CAACC,IATQ,CAAnB;AAWD,CAvBD;;GAAMhB,S;UACiBJ,W,EAG4CG,O;;;KAJ7DC,S;AAyBN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport s from \"./loginPage.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { Redirect } from \"react-router-dom\";\nimport { createPortal } from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { SubmitHandler } from \"redux-form\";\nconst LoginPage = () => {\n  const isAuthorized = useSelector<RootState, boolean>(\n    (state) => state.auth.isAuthorized\n  );\n  const { register, handleSubmit, watch, formState: { errors } } = useForm<Inputs>();\n  const onSubmit: SubmitHandler<Inputs> = data => console.log(data);\n\n\n  if (isAuthorized) {\n    return <Redirect to={\"/\"} />;\n  }\n\n  return createPortal(\n    <div className={s.loginPageWrapper}>\n      <div className={s.loginPageModal}>\n        <h1>Login</h1>\n        <form action=\"\">\n\n        </form>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}