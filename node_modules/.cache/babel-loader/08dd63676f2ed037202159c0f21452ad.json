{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/MainContent/Dialogs/DialogsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport DialogItem from \"./DialogItem\";\nimport Message from \"./Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TextArea from \"../../../shared/TextArea\";\nimport { Button } from \"../../../shared/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DialogsPage = props => {\n  _s();\n\n  const dialogsState = useSelector(state => state.dialogsPage);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(DialogsPageWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(DialogsListWrapper, {\n      children: /*#__PURE__*/_jsxDEV(DialogsList, {\n        children: dialogsState.dialogs.map(d => {\n          return /*#__PURE__*/_jsxDEV(DialogItem, {\n            id: d.id,\n            userName: d.userName\n          }, d.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessengerWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Add new Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), dialogsState.messages.map((m, index) => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          messageText: m.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DialogsPage, \"6yHBMGvLK8tMWo6YwTqdXR1ez4w=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DialogsPage;\nconst DialogsPageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  gap: 5rem;\n`;\n_c2 = DialogsPageWrapper;\nconst DialogsListWrapper = styled.div``;\n_c3 = DialogsListWrapper;\nconst DialogsList = styled.div``;\n_c4 = DialogsList;\nconst MessengerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c5 = MessengerWrapper;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DialogsPage\");\n$RefreshReg$(_c2, \"DialogsPageWrapper\");\n$RefreshReg$(_c3, \"DialogsListWrapper\");\n$RefreshReg$(_c4, \"DialogsList\");\n$RefreshReg$(_c5, \"MessengerWrapper\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/MainContent/Dialogs/DialogsPage.tsx"],"names":["React","styled","DialogItem","Message","useDispatch","useSelector","TextArea","Button","DialogsPage","props","dialogsState","state","dialogsPage","dispatch","dialogs","map","d","id","userName","messages","m","index","text","DialogsPageWrapper","div","DialogsListWrapper","DialogsList","MessengerWrapper"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAOA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAIA,OAAO,MAAMC,WAAiC,GAAIC,KAAD,IAAW;AAAA;;AAC1D,QAAMC,YAAY,GAAGL,WAAW,CAC7BM,KAAD,IAAWA,KAAK,CAACC,WADa,CAAhC;AAGA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAGA,sBACE,QAAC,kBAAD;AAAA,4BACE,QAAC,kBAAD;AAAA,6BACE,QAAC,WAAD;AAAA,kBACGM,YAAY,CAACI,OAAb,CAAqBC,GAArB,CAA0BC,CAAD,IAAmB;AAC3C,8BAAO,QAAC,UAAD;AAAuB,YAAA,EAAE,EAAEA,CAAC,CAACC,EAA7B;AAAiC,YAAA,QAAQ,EAAED,CAAC,CAACE;AAA7C,aAAiBF,CAAC,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,gBAAD;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGP,YAAY,CAACS,QAAb,CAAsBJ,GAAtB,CAA0B,CAACK,CAAD,EAAiBC,KAAjB,KAAmC;AAC5D,4BAAO,QAAC,OAAD;AAAqB,UAAA,WAAW,EAAED,CAAC,CAACE;AAApC,WAAcD,KAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzBM;;GAAMb,W;UACUH,W,EAGJD,W;;;KAJNI,W;AA2Bb,MAAMe,kBAAkB,GAAGtB,MAAM,CAACuB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,kB;AAQN,MAAME,kBAAkB,GAAGxB,MAAM,CAACuB,GAAI,EAAtC;MAAMC,kB;AACN,MAAMC,WAAW,GAAGzB,MAAM,CAACuB,GAAI,EAA/B;MAAME,W;AAEN,MAAMC,gBAAgB,GAAG1B,MAAM,CAACuB,GAAI;AACpC;AACA;AACA,CAHA;MAAMG,gB","sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport DialogItem from \"./DialogItem\";\nimport Message from \"./Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../../store/store\";\nimport {\n  DialogPageType,\n  DialogType,\n  MessageType,\n} from \"../../../store/reducers/dialogsReducer\";\nimport TextArea from \"../../../shared/TextArea\";\nimport { Button } from \"../../../shared/Button\";\n\ntype DialogsPageProps = {};\n\nexport const DialogsPage: FC<DialogsPageProps> = (props) => {\n  const dialogsState = useSelector<RootState, DialogPageType>(\n    (state) => state.dialogsPage\n  );\n  const dispatch = useDispatch()\n\n\n  return (\n    <DialogsPageWrapper>\n      <DialogsListWrapper>\n        <DialogsList>\n          {dialogsState.dialogs.map((d: DialogType) => {\n            return <DialogItem key={d.id} id={d.id} userName={d.userName} />;\n          })}\n        </DialogsList>\n      </DialogsListWrapper>\n      <MessengerWrapper>\n        <TextArea />\n        <Button>Add new Message</Button>\n        {dialogsState.messages.map((m: MessageType, index: number) => {\n          return <Message key={index} messageText={m.text} />;\n        })}\n      </MessengerWrapper>\n    </DialogsPageWrapper>\n  );\n};\n\nconst DialogsPageWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  gap: 5rem;\n`;\n\nconst DialogsListWrapper = styled.div``;\nconst DialogsList = styled.div``;\n\nconst MessengerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n"]},"metadata":{},"sourceType":"module"}