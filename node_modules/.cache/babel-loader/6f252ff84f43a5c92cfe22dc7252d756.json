{"ast":null,"code":"import { v1 } from \"uuid\";\nconst profilePageState = {};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : profilePageState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"profilePage/AddPost\":\n      const newState = { ...state\n      };\n      newState.posts.unshift(action.newPost);\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostAC = postText => {\n  return {\n    type: \"profilePage/AddPost\",\n    newPost: {\n      postId: v1(),\n      postText\n    }\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/profileReducer.ts"],"names":["v1","profilePageState","profileReducer","state","action","type","newState","posts","unshift","newPost","addPostAC","postText","postId"],"mappings":"AAAA,SAASA,EAAT,QAAmB,MAAnB;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;;AAmCA,MAAMC,cAAc,GAAG,YAGlB;AAAA,MAFHC,KAEG,uEAFsBF,gBAEtB;AAAA,MADHG,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,YAAMC,QAAQ,GAAG,EAAE,GAAGH;AAAL,OAAjB;AACAG,MAAAA,QAAQ,CAACC,KAAT,CAAeC,OAAf,CAAuBJ,MAAM,CAACK,OAA9B;AACA,aAAOH,QAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CAZD;;AAcA,OAAO,MAAMO,SAAS,GAAIC,QAAD,IAAsB;AAC7C,SAAO;AACLN,IAAAA,IAAI,EAAE,qBADD;AAELI,IAAAA,OAAO,EAAE;AAAEG,MAAAA,MAAM,EAAEZ,EAAE,EAAZ;AAAgBW,MAAAA;AAAhB;AAFJ,GAAP;AAID,CALM;AAOP,eAAeT,cAAf","sourcesContent":["import { v1 } from \"uuid\";\n\nconst profilePageState = {};\n\nexport type ProfilePageType = {\n  profile?: {\n    aboutMe: string;\n    cotacts: {\n      facebook: string;\n      website: string;\n      vk: string;\n      twitter: string;\n      instagram: string;\n      youtube: string;\n      github: string;\n      mainLink: string;\n    };\n    lookingForAJob: boolean;\n    lookingForAJobDescription: string;\n    fullName: string;\n    userId: number;\n    photos: {\n      small: string;\n      large: string;\n    };\n  };\n};\n\ntype PostType = {\n  postId: string;\n  postText: string;\n};\n\ntype AddPostActionType = ReturnType<typeof addPostAC>;\n\ntype ActionsType = AddPostActionType;\n\nconst profileReducer = (\n  state: ProfilePageType = profilePageState,\n  action: ActionsType\n) => {\n  switch (action.type) {\n    case \"profilePage/AddPost\":\n      const newState = { ...state };\n      newState.posts.unshift(action.newPost);\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport const addPostAC = (postText: string) => {\n  return {\n    type: \"profilePage/AddPost\",\n    newPost: { postId: v1(), postText },\n  } as const;\n};\n\nexport default profileReducer;\n"]},"metadata":{},"sourceType":"module"}