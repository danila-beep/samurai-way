{"ast":null,"code":"import axios from \"axios\";\nconst socialMediaInstance = axios.create({\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  withCredentials: true\n});\nexport const authApi = {\n  //получение данных о статусе пользователя\n  me: () => {\n    return socialMediaInstance.get(\"auth/me\");\n  },\n  login: data => {\n    return socialMediaInstance.post(\"auth/login\", { ...data\n    });\n  },\n  logout: () => {\n    return socialMediaAPI;\n  }\n};\nexport const socialMediaAPI = {\n  //user calls\n  getUsers: (currentPage, pageSize) => {\n    if (currentPage && pageSize) {\n      return socialMediaInstance.get(`users?page=${currentPage}&count=${pageSize}`);\n    } else {\n      return socialMediaInstance.get(\"users\");\n    }\n  },\n  followUser: userId => {\n    return socialMediaInstance.post(`follow/${userId}`);\n  },\n  unfollowUser: userId => {\n    return socialMediaInstance.delete(`follow/${userId}`);\n  },\n  //profile calls\n  getUserProfile: userId => {\n    return socialMediaInstance.get(`profile/${userId}`);\n  },\n  getUserStatus: userId => {\n    return socialMediaInstance.get(`profile/status/${userId}`);\n  }\n}; //TODO: типизация","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/api/socialMediaAPI.ts"],"names":["axios","socialMediaInstance","create","baseURL","withCredentials","authApi","me","get","login","data","post","logout","socialMediaAPI","getUsers","currentPage","pageSize","followUser","userId","unfollowUser","delete","getUserProfile","getUserStatus"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,mBAAmB,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvCC,EAAAA,OAAO,EAAE,+CAD8B;AAEvCC,EAAAA,eAAe,EAAE;AAFsB,CAAb,CAA5B;AAKA,OAAO,MAAMC,OAAO,GAAG;AACrB;AACAC,EAAAA,EAAE,EAAE,MAAM;AACR,WAAOL,mBAAmB,CAACM,GAApB,CAAwB,SAAxB,CAAP;AACD,GAJoB;AAKrBC,EAAAA,KAAK,EAAGC,IAAD,IAAyB;AAC9B,WAAOR,mBAAmB,CAACS,IAApB,CAAyB,YAAzB,EAAuC,EAAC,GAAGD;AAAJ,KAAvC,CAAP;AACD,GAPoB;AAQrBE,EAAAA,MAAM,EAAE,MAAM;AACZ,WAAOC,cAAP;AACD;AAVoB,CAAhB;AAaP,OAAO,MAAMA,cAAc,GAAG;AAE5B;AACAC,EAAAA,QAAQ,EAAE,CAACC,WAAD,EAAuBC,QAAvB,KAA6C;AACrD,QAAID,WAAW,IAAIC,QAAnB,EAA6B;AAC3B,aAAOd,mBAAmB,CAACM,GAApB,CACJ,cAAaO,WAAY,UAASC,QAAS,EADvC,CAAP;AAGD,KAJD,MAIO;AACL,aAAOd,mBAAmB,CAACM,GAApB,CAAwB,OAAxB,CAAP;AACD;AACF,GAX2B;AAY5BS,EAAAA,UAAU,EAAGC,MAAD,IAAoB;AAC9B,WAAOhB,mBAAmB,CAACS,IAApB,CAA0B,UAASO,MAAO,EAA1C,CAAP;AACD,GAd2B;AAe5BC,EAAAA,YAAY,EAAGD,MAAD,IAAoB;AAChC,WAAOhB,mBAAmB,CAACkB,MAApB,CAA4B,UAASF,MAAO,EAA5C,CAAP;AACD,GAjB2B;AAmB5B;AACAG,EAAAA,cAAc,EAAGH,MAAD,IAAoB;AAClC,WAAOhB,mBAAmB,CAACM,GAApB,CAAyB,WAAUU,MAAO,EAA1C,CAAP;AACD,GAtB2B;AAuB5BI,EAAAA,aAAa,EAAGJ,MAAD,IAAoB;AACjC,WAAOhB,mBAAmB,CAACM,GAApB,CAAyB,kBAAiBU,MAAO,EAAjD,CAAP;AACD;AAzB2B,CAAvB,C,CAmCP","sourcesContent":["import axios from \"axios\";\n\nconst socialMediaInstance = axios.create({\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  withCredentials: true,\n});\n\nexport const authApi = {\n  //получение данных о статусе пользователя\n  me: () => {\n    return socialMediaInstance.get(\"auth/me\")\n  },\n  login: (data: LoginDataType) => {\n    return socialMediaInstance.post(\"auth/login\", {...data})\n  },\n  logout: () => {\n    return socialMediaAPI\n  }\n}\n\nexport const socialMediaAPI = {\n\n  //user calls\n  getUsers: (currentPage?: number, pageSize?: number) => {\n    if (currentPage && pageSize) {\n      return socialMediaInstance.get(\n        `users?page=${currentPage}&count=${pageSize}`\n      );\n    } else {\n      return socialMediaInstance.get(\"users\");\n    }\n  },\n  followUser: (userId: number) => {\n    return socialMediaInstance.post(`follow/${userId}`)\n  },\n  unfollowUser: (userId: number) => {\n    return socialMediaInstance.delete(`follow/${userId}`)\n  },\n\n  //profile calls\n  getUserProfile: (userId: number) => {\n    return socialMediaInstance.get(`profile/${userId}`)\n  },\n  getUserStatus: (userId: number) => {\n    return socialMediaInstance.get(`profile/status/${userId}`)\n  }\n};\n\n\nexport type LoginDataType = {\n  email: string,\n  password: string,\n  rememberMe?: boolean,\n  captcha?: boolean\n}\n//TODO: типизация\n"]},"metadata":{},"sourceType":"module"}