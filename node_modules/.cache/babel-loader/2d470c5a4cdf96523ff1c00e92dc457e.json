{"ast":null,"code":"/**\n * Remove a class from a given element\n *\n * @param target The element to remove the class from\n * @param className The class to be removed\n *\n * @returns The target element\n */\nexport default function removeClass(target, className) {\n  if (className) {\n    if (target.classList) {\n      target.classList.remove(className);\n    } else {\n      target.className = target.className.replace(new RegExp(\"(^|\\\\s)\" + className + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ') // multiple spaces to one\n      .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n    }\n  }\n\n  return target;\n}","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/node_modules/dom-lib/esm/removeClass.js"],"names":["removeClass","target","className","classList","remove","replace","RegExp"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,SAA7B,EAAwC;AACrD,MAAIA,SAAJ,EAAe;AACb,QAAID,MAAM,CAACE,SAAX,EAAsB;AACpBF,MAAAA,MAAM,CAACE,SAAP,CAAiBC,MAAjB,CAAwBF,SAAxB;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,CAAiBG,OAAjB,CAAyB,IAAIC,MAAJ,CAAW,YAAYJ,SAAZ,GAAwB,WAAnC,EAAgD,GAAhD,CAAzB,EAA+E,IAA/E,EAAqFG,OAArF,CAA6F,MAA7F,EAAqG,GAArG,EAA0G;AAA1G,OAClBA,OADkB,CACV,YADU,EACI,EADJ,CAAnB,CADK,CAEuB;AAC7B;AACF;;AAED,SAAOJ,MAAP;AACD","sourcesContent":["/**\n * Remove a class from a given element\n *\n * @param target The element to remove the class from\n * @param className The class to be removed\n *\n * @returns The target element\n */\nexport default function removeClass(target, className) {\n  if (className) {\n    if (target.classList) {\n      target.classList.remove(className);\n    } else {\n      target.className = target.className.replace(new RegExp(\"(^|\\\\s)\" + className + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ') // multiple spaces to one\n      .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n    }\n  }\n\n  return target;\n}"]},"metadata":{},"sourceType":"module"}