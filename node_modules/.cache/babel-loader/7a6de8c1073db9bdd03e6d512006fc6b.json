{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport s from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currentPageChangerAC, followUserTC, getUsersTC, nextPagesPaginationAC, previousPagesPaginationAC, unfollowUserTC } from \"../../store/reducers/usersReducer\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport Preloader from \"../../shared/Preloader\";\nimport { SideBar } from \"../../components/SideBar/SideBar\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersPage = () => {\n  _s();\n\n  //getting data from redux\n  const usersPageData = useSelector(state => state.usersPage);\n  const isAuthorized = useAppSelector(state => state.auth.isAuthorized);\n  const dispatch = useDispatch(); //API \"get\" call for users\n\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]);\n  const usersForRender = usersPageData.users.items.map(user => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.userPageUserCardContainer,\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: `profile/${user.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.photos.large ? user.photos.large : \"https://uxwing.com/wp-content/themes/uxwing/download/peoples-avatars/corporate-user-icon.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.userPageCardButtonsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.followButton,\n          onClick: () => followButtonHandler(user.followed, user.id),\n          disabled: user.followed && !isAuthorized ? true : false,\n          children: \"Follow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.unfollowButton,\n          onClick: () => unfollowButtonHandler(user.followed, user.id),\n          disabled: user.followed ? false : true,\n          children: \"Unfollow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }); //pagination\n\n  const pagesForRender = usersPageData.paginationCount.map(page => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.userPagePaginationItem,\n      onClick: () => changePageHandler(page),\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  });\n  const pagesCount = Math.ceil(usersPageData.totalUsersCount / usersPageData.pageSize);\n\n  const changePageHandler = page => {\n    dispatch(currentPageChangerAC(page));\n  };\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n\n  const previousPages = () => {\n    dispatch(previousPagesPaginationAC(pagesCount));\n  }; //follow / unfollow\n\n\n  const followButtonHandler = (isFollowed, userId) => {\n    dispatch(followUserTC(userId));\n  };\n\n  const unfollowButtonHandler = (isFollowed, userId) => {\n    dispatch(unfollowUserTC(userId));\n  };\n\n  return usersPageData.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.userPageContainer,\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.userPageUsersListContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: usersForRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.userPagePaginationContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.userPagePaginationChangeButton,\n          onClick: previousPages,\n          children: /*#__PURE__*/_jsxDEV(UilArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), pagesForRender, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.userPagePaginationChangeButton,\n          onClick: nextPages,\n          children: /*#__PURE__*/_jsxDEV(UilArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersPage, \"1ZfOtGmMOr5NRh0EmYNTPtjr50o=\", false, function () {\n  return [useSelector, useAppSelector, useDispatch];\n});\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx"],"names":["React","useEffect","s","useDispatch","useSelector","currentPageChangerAC","followUserTC","getUsersTC","nextPagesPaginationAC","previousPagesPaginationAC","unfollowUserTC","UilArrowLeft","UilArrowRight","NavLink","Preloader","SideBar","useAppSelector","UsersPage","usersPageData","state","usersPage","isAuthorized","auth","dispatch","currentPage","pageSize","usersForRender","users","items","map","user","userPageUserCardContainer","id","photos","large","name","userPageCardButtonsContainer","followButton","followButtonHandler","followed","unfollowButton","unfollowButtonHandler","pagesForRender","paginationCount","page","userPagePaginationItem","changePageHandler","pagesCount","Math","ceil","totalUsersCount","nextPages","previousPages","isFollowed","userId","isFetching","userPageContainer","userPageUsersListContainer","userPagePaginationContainer","userPagePaginationChangeButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAEEC,oBAFF,EAIEC,YAJF,EAKEC,UALF,EAMEC,qBANF,EAOEC,yBAPF,EAWEC,cAXF,QAYO,mCAZP;AAgBA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,0BAA5C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,cAAT,QAA+B,kCAA/B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB;AACA,QAAMC,aAAa,GAAGd,WAAW,CAC9Be,KAAD,IAAWA,KAAK,CAACC,SADc,CAAjC;AAGA,QAAMC,YAAY,GAAGL,cAAc,CAAEG,KAAD,IAAWA,KAAK,CAACG,IAAN,CAAWD,YAAvB,CAAnC;AACA,QAAME,QAAQ,GAAGpB,WAAW,EAA5B,CANsB,CAQtB;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAAChB,UAAU,CAACW,aAAa,CAACM,WAAf,EAA4BN,aAAa,CAACO,QAA1C,CAAX,CAAR;AACD,GAFQ,EAEN,CAACF,QAAD,EAAWL,aAAa,CAACM,WAAzB,EAAsCN,aAAa,CAACO,QAApD,CAFM,CAAT;AAIA,QAAMC,cAAc,GAAGR,aAAa,CAACS,KAAd,CAAoBC,KAApB,CAA0BC,GAA1B,CAA+BC,IAAD,IAAU;AAC7D,wBACE;AAAK,MAAA,SAAS,EAAE5B,CAAC,CAAC6B,yBAAlB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAG,WAAUD,IAAI,CAACE,EAAG,EAAhC;AAAA,+BACE;AACE,UAAA,GAAG,EACDF,IAAI,CAACG,MAAL,CAAYC,KAAZ,GACIJ,IAAI,CAACG,MAAL,CAAYC,KADhB,GAEI,8FAJR;AAME,UAAA,GAAG,EAAC;AANN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAK,QAAA,SAAS,EAAEjC,CAAC,CAACkC,4BAAlB;AAAA,gCACE;AACE,UAAA,SAAS,EAAElC,CAAC,CAACmC,YADf;AAEE,UAAA,OAAO,EAAE,MAAMC,mBAAmB,CAACR,IAAI,CAACS,QAAN,EAAgBT,IAAI,CAACE,EAArB,CAFpC;AAGE,UAAA,QAAQ,EAAEF,IAAI,CAACS,QAAL,IAAiB,CAAClB,YAAlB,GAAiC,IAAjC,GAAwC,KAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACE,UAAA,SAAS,EAAEnB,CAAC,CAACsC,cADf;AAEE,UAAA,OAAO,EAAE,MAAMC,qBAAqB,CAACX,IAAI,CAACS,QAAN,EAAgBT,IAAI,CAACE,EAArB,CAFtC;AAGE,UAAA,QAAQ,EAAEF,IAAI,CAACS,QAAL,GAAgB,KAAhB,GAAwB,IAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD,GAhCsB,CAAvB,CAbsB,CA+CtB;;AACA,QAAMG,cAAc,GAAGxB,aAAa,CAACyB,eAAd,CAA8Bd,GAA9B,CAAmCe,IAAD,IAAU;AACjE,wBACE;AACE,MAAA,SAAS,EAAE1C,CAAC,CAAC2C,sBADf;AAEE,MAAA,OAAO,EAAE,MAAMC,iBAAiB,CAACF,IAAD,CAFlC;AAAA,gBAIGA;AAJH;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATsB,CAAvB;AAWA,QAAMG,UAAU,GAAGC,IAAI,CAACC,IAAL,CACjB/B,aAAa,CAACgC,eAAd,GAAgChC,aAAa,CAACO,QAD7B,CAAnB;;AAIA,QAAMqB,iBAAiB,GAAIF,IAAD,IAAkB;AAC1CrB,IAAAA,QAAQ,CAAClB,oBAAoB,CAACuC,IAAD,CAArB,CAAR;AACD,GAFD;;AAIA,QAAMO,SAAS,GAAG,MAAM;AACtB5B,IAAAA,QAAQ,CAACf,qBAAqB,CAACuC,UAAD,CAAtB,CAAR;AACD,GAFD;;AAGA,QAAMK,aAAa,GAAG,MAAM;AAC1B7B,IAAAA,QAAQ,CAACd,yBAAyB,CAACsC,UAAD,CAA1B,CAAR;AACD,GAFD,CAtEsB,CA0EtB;;;AACA,QAAMT,mBAAmB,GAAG,CAACe,UAAD,EAAsBC,MAAtB,KAAyC;AACnE/B,IAAAA,QAAQ,CAACjB,YAAY,CAACgD,MAAD,CAAb,CAAR;AACD,GAFD;;AAGA,QAAMb,qBAAqB,GAAG,CAACY,UAAD,EAAsBC,MAAtB,KAAyC;AACrE/B,IAAAA,QAAQ,CAACb,cAAc,CAAC4C,MAAD,CAAf,CAAR;AACD,GAFD;;AAIA,SAAOpC,aAAa,CAACqC,UAAd,gBACL,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL;AAAK,IAAA,SAAS,EAAErD,CAAC,CAACsD,iBAAlB;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEtD,CAAC,CAACuD,0BAAlB;AAAA,8BACE;AAAA,kBAAM/B;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAExB,CAAC,CAACwD,2BAAlB;AAAA,gCACE;AACE,UAAA,SAAS,EAAExD,CAAC,CAACyD,8BADf;AAEE,UAAA,OAAO,EAAEP,aAFX;AAAA,iCAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGV,cAPH,eAQE;AAAK,UAAA,SAAS,EAAExC,CAAC,CAACyD,8BAAlB;AAAkD,UAAA,OAAO,EAAER,SAA3D;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAsBD,CAxGD;;GAAMlC,S;UAEkBb,W,EAGDY,c,EACJb,W;;;KANbc,S;AA0GN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport s from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UserPageType,\n  currentPageChangerAC,\n  followUserAC,\n  followUserTC,\n  getUsersTC,\n  nextPagesPaginationAC,\n  previousPagesPaginationAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n  unfollowUserTC,\n} from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSessionStorage } from \"usehooks-ts\";\nimport Preloader from \"../../shared/Preloader\";\nimport { SideBar } from \"../../components/SideBar/SideBar\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const isAuthorized = useAppSelector((state) => state.auth.isAuthorized);\n  const dispatch = useDispatch();\n\n  //API \"get\" call for users\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]);\n\n  const usersForRender = usersPageData.users.items.map((user) => {\n    return (\n      <div className={s.userPageUserCardContainer}>\n        <NavLink to={`profile/${user.id}`}>\n          <img\n            src={\n              user.photos.large\n                ? user.photos.large\n                : \"https://uxwing.com/wp-content/themes/uxwing/download/peoples-avatars/corporate-user-icon.png\"\n            }\n            alt=\"\"\n          />\n        </NavLink>\n        <h3>{user.name}</h3>\n        <div className={s.userPageCardButtonsContainer}>\n          <button\n            className={s.followButton}\n            onClick={() => followButtonHandler(user.followed, user.id)}\n            disabled={user.followed && !isAuthorized ? true : false}\n          >\n            Follow\n          </button>\n          <button\n            className={s.unfollowButton}\n            onClick={() => unfollowButtonHandler(user.followed, user.id)}\n            disabled={user.followed ? false : true}\n          >\n            Unfollow\n          </button>\n        </div>\n      </div>\n    );\n  });\n\n  //pagination\n  const pagesForRender = usersPageData.paginationCount.map((page) => {\n    return (\n      <div\n        className={s.userPagePaginationItem}\n        onClick={() => changePageHandler(page)}\n      >\n        {page}\n      </div>\n    );\n  });\n\n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n\n  const changePageHandler = (page: number) => {\n    dispatch(currentPageChangerAC(page));\n  };\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n  const previousPages = () => {\n    dispatch(previousPagesPaginationAC(pagesCount));\n  };\n\n  //follow / unfollow\n  const followButtonHandler = (isFollowed: boolean, userId: number) => {\n    dispatch(followUserTC(userId));\n  };\n  const unfollowButtonHandler = (isFollowed: boolean, userId: number) => {\n    dispatch(unfollowUserTC(userId));\n  };\n\n  return usersPageData.isFetching ? (\n    <Preloader />\n  ) : (\n    <div className={s.userPageContainer}>\n      <SideBar />\n      <div className={s.userPageUsersListContainer}>\n        <div>{usersForRender}</div>\n        <div className={s.userPagePaginationContainer}>\n          <div\n            className={s.userPagePaginationChangeButton}\n            onClick={previousPages}\n          >\n            <UilArrowLeft />\n          </div>\n          {pagesForRender}\n          <div className={s.userPagePaginationChangeButton} onClick={nextPages}>\n            <UilArrowRight />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}