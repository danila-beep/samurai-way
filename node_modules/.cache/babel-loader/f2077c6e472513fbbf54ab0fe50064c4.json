{"ast":null,"code":"const usersState = {\n  users: []\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : usersState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"usersPage/followUser\":\n      return { ...state,\n        users: state.users.items.map(user => {\n          if (user.id === action.userId) {\n            console.log(user);\n            return { ...user,\n              isFollowed: true\n            };\n          }\n\n          return { ...user\n          };\n        })\n      };\n\n    case \"usersPage/unFollowUser\":\n      return { ...state,\n        users: state.users.map(user => {\n          if (user.id === action.userId) {\n            return { ...user,\n              isFollowed: false\n            };\n          }\n\n          return { ...user\n          };\n        })\n      };\n\n    case \"usersPage/setUsers\":\n      const newUsersState = { ...state.users\n      };\n      return;\n\n    default:\n      return state;\n  }\n};\n\nexport const followUserAC = userId => {\n  return {\n    type: \"usersPage/followUser\",\n    userId\n  };\n};\nexport const unfollowUserAC = userId => {\n  return {\n    type: \"usersPage/unFollowUser\",\n    userId\n  };\n};\nexport const setUsersAC = users => {\n  return {\n    type: \"usersPage/setUsers\",\n    users\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/usersReducer.ts"],"names":["usersState","users","usersReducer","state","action","type","items","map","user","id","userId","console","log","isFollowed","newUsersState","followUserAC","unfollowUserAC","setUsersAC"],"mappings":"AAAA,MAAMA,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAAnB;;AA8BA,MAAMC,YAAY,GAAG,YAGhB;AAAA,MAFHC,KAEG,uEAFmBH,UAEnB;AAAA,MADHI,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,IAAU;AACrC,cAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,MAAvB,EAA+B;AAC7BC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,mBAAO,EAAE,GAAGA,IAAL;AAAWK,cAAAA,UAAU,EAAE;AAAvB,aAAP;AACD;;AACD,iBAAO,EAAE,GAAGL;AAAL,WAAP;AACD,SAPM;AAFF,OAAP;;AAWF,SAAK,wBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,GAAZ,CAAiBC,IAAD,IAAU;AAC/B,cAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,MAAvB,EAA+B;AAC7B,mBAAO,EAAE,GAAGF,IAAL;AAAWK,cAAAA,UAAU,EAAE;AAAvB,aAAP;AACD;;AACD,iBAAO,EAAE,GAAGL;AAAL,WAAP;AACD,SALM;AAFF,OAAP;;AASF,SAAK,oBAAL;AACE,YAAMM,aAAa,GAAG,EAAC,GAAGX,KAAK,CAACF;AAAV,OAAtB;AACA;;AACF;AACE,aAAOE,KAAP;AA3BJ;AA6BD,CAjCD;;AAmCA,OAAO,MAAMY,YAAY,GAAIL,MAAD,IAAoB;AAC9C,SAAO;AAAEL,IAAAA,IAAI,EAAE,sBAAR;AAAgCK,IAAAA;AAAhC,GAAP;AACD,CAFM;AAGP,OAAO,MAAMM,cAAc,GAAIN,MAAD,IAAoB;AAChD,SAAO;AAAEL,IAAAA,IAAI,EAAE,wBAAR;AAAkCK,IAAAA;AAAlC,GAAP;AACD,CAFM;AAGP,OAAO,MAAMO,UAAU,GAAIhB,KAAD,IAAuB;AAC/C,SAAO;AAAEI,IAAAA,IAAI,EAAE,oBAAR;AAA8BJ,IAAAA;AAA9B,GAAP;AACD,CAFM;AAIP,eAAeC,YAAf","sourcesContent":["const usersState = {\n  users: [],\n};\n\nexport type UserPageType = {\n  users: {\n    items: {\n      name: string;\n      id: number;\n      photos: {\n        small: string | null;\n        large: string | null;\n      };\n      status: string | null;\n      followed: boolean;\n    }[];\n    totalCount: number;\n    error: string | null;\n  };\n};\n\nexport type UserType = {\n\n};\n\ntype ActionsType =\n  | ReturnType<typeof followUserAC>\n  | ReturnType<typeof unfollowUserAC>\n  | ReturnType<typeof setUsersAC>;\n\nconst usersReducer = (\n  state: UserPageType = usersState,\n  action: ActionsType\n) => {\n  switch (action.type) {\n    case \"usersPage/followUser\":\n      return {\n        ...state,\n        users: state.users.items.map((user) => {\n          if (user.id === action.userId) {\n            console.log(user);\n\n            return { ...user, isFollowed: true };\n          }\n          return { ...user };\n        }),\n      };\n    case \"usersPage/unFollowUser\":\n      return {\n        ...state,\n        users: state.users.map((user) => {\n          if (user.id === action.userId) {\n            return { ...user, isFollowed: false };\n          }\n          return { ...user };\n        }),\n      };\n    case \"usersPage/setUsers\":\n      const newUsersState = {...state.users, }\n      return ;\n    default:\n      return state;\n  }\n};\n\nexport const followUserAC = (userId: number) => {\n  return { type: \"usersPage/followUser\", userId } as const;\n};\nexport const unfollowUserAC = (userId: number) => {\n  return { type: \"usersPage/unFollowUser\", userId } as const;\n};\nexport const setUsersAC = (users: UserType[]) => {\n  return { type: \"usersPage/setUsers\", users } as const;\n};\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}