{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\nimport profileReducer from \"./reducers/profileReducer\";\nimport sideBarReducer from \"./reducers/sideBarReducer\";\nimport dialogsReducer from \"./reducers/dialogsReducer\";\nimport usersReducer from \"./reducers/usersReducer\";\nconst reducers = combineReducers({\n  sideBar: sideBarReducer,\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer\n});\nconst store = createStore(reducers);\nconsole.log(store.getState()); // Infer the `RootState` and `AppDispatch` types from the store itself\n\nexport default store;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/store.ts"],"names":["combineReducers","createStore","profileReducer","sideBarReducer","dialogsReducer","usersReducer","reducers","sideBar","profilePage","dialogsPage","usersPage","store","console","log","getState"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,MAAMC,QAAQ,GAAGN,eAAe,CAAC;AAC7BO,EAAAA,OAAO,EAAEJ,cADoB;AAE7BK,EAAAA,WAAW,EAAEN,cAFgB;AAG7BO,EAAAA,WAAW,EAAEL,cAHgB;AAI7BM,EAAAA,SAAS,EAAEL;AAJkB,CAAD,CAAhC;AAOA,MAAMM,KAAK,GAAGV,WAAW,CAACK,QAAD,CAAzB;AAEAM,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ,E,CAEA;;AAKA,eAAeH,KAAf","sourcesContent":["import { combineReducers, createStore } from \"redux\";\nimport profileReducer from \"./reducers/profileReducer\";\nimport sideBarReducer from \"./reducers/sideBarReducer\";\nimport dialogsReducer from \"./reducers/dialogsReducer\";\nimport usersReducer from \"./reducers/usersReducer\";\n\nconst reducers = combineReducers({\n    sideBar: sideBarReducer,\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n})\n\nconst store = createStore(reducers)\n\nconsole.log(store.getState());\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store"]},"metadata":{},"sourceType":"module"}