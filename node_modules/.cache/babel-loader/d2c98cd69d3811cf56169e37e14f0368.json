{"ast":null,"code":"import { postsAPI } from \"../../api/postsAPI\";\nconst initialState = [];\nexport const feedReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"feedPage/setPosts\":\n      return [...state, ...action.data];\n\n    default:\n      return state;\n  }\n};\nexport const setPostsAC = data => {\n  return {\n    type: \"feedPage/setPosts\",\n    data\n  };\n};\nexport const setImageAC = image => {\n  return {\n    type: \"feedPage/setImage\",\n    image\n  };\n};\nexport const getPostsTC = () => dispatch => {\n  postsAPI.getPosts().then(res => {\n    dispatch(setPostsAC(res.data));\n  });\n};","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/feedReducer.ts"],"names":["postsAPI","initialState","feedReducer","state","action","type","data","setPostsAC","setImageAC","image","getPostsTC","dispatch","getPosts","then","res"],"mappings":"AACA,SAASA,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,YAA+B,GAAG,EAAxC;AAEA,OAAO,MAAMC,WAAW,GAAG,YAA8C;AAAA,MAA7CC,KAA6C,uEAArCF,YAAqC;AAAA,MAAvBG,MAAuB;;AACvE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,CACL,GAAGF,KADE,EAEL,GAAGC,MAAM,CAACE,IAFL,CAAP;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVM;AAYP,OAAO,MAAMI,UAAU,GAAID,IAAD,IAAsB;AAC9C,SAAO;AAAED,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA;AAA7B,GAAP;AACD,CAFM;AAGP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAmB;AACzC,SAAO;AAACJ,IAAAA,IAAI,EAAE,mBAAP;AAA4BI,IAAAA;AAA5B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAD,IAAwB;AACpDX,EAAAA,QAAQ,CAACY,QAAT,GACKC,IADL,CACUC,GAAG,IAAI;AACTH,IAAAA,QAAQ,CAACJ,UAAU,CAACO,GAAG,CAACR,IAAL,CAAX,CAAR;AACH,GAHL;AAIH,CALM","sourcesContent":["import { Dispatch } from \"redux\";\nimport { postsAPI } from \"../../api/postsAPI\";\n\nconst initialState: FeedPageStateType = [];\n\nexport const feedReducer = (state = initialState, action: ActionType) => {\n  switch (action.type) {\n    case \"feedPage/setPosts\":\n      return [\n        ...state,\n        ...action.data\n      ]\n    default:\n      return state;\n  }\n};\n\nexport const setPostsAC = (data: PostType[]) => {\n  return { type: \"feedPage/setPosts\", data } as const;\n};\nexport const setImageAC = (image: string) => {\n    return {type: \"feedPage/setImage\", image} as const \n}\n\nexport const getPostsTC = () => (dispatch: Dispatch) => {\n    postsAPI.getPosts()\n        .then(res => {\n            dispatch(setPostsAC(res.data))\n        })\n}\n\ntype ActionType = ReturnType<typeof setPostsAC>;\n\ntype FeedPageStateType = PostType[];\n\ntype PostType = {\n  userId: number;\n  id: number;\n  title: string;\n  body: string;\n};\n"]},"metadata":{},"sourceType":"module"}