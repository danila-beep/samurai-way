{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport profileReducer from \"./reducers/profileReducer\";\nimport sideBarReducer from \"./reducers/sideBarReducer\";\nimport dialogsReducer from \"./reducers/dialogsReducer\";\nimport usersReducer from \"./reducers/usersReducer\";\nimport thunk from \"redux-thunk\";\nimport { authReducer } from \"./reducers/authReducer\";\nimport { appReducer } from \"./reducers/appReducer\";\nconst reducers = combineReducers({\n  app: appReducer,\n  auth: authReducer,\n  sideBar: sideBarReducer,\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer\n});\nconst store = createStore(reducers, applyMiddleware(thunk)); //@ts-ignore\n\nwindow.store = store; // Infer the `RootState` and `AppDispatch` types from the store itself\n\nexport default store;","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/store.ts"],"names":["applyMiddleware","combineReducers","createStore","profileReducer","sideBarReducer","dialogsReducer","usersReducer","thunk","authReducer","appReducer","reducers","app","auth","sideBar","profilePage","dialogsPage","usersPage","store","window"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,MAAMC,QAAQ,GAAGT,eAAe,CAAC;AAC/BU,EAAAA,GAAG,EAAEF,UAD0B;AAE/BG,EAAAA,IAAI,EAAEJ,WAFyB;AAG/BK,EAAAA,OAAO,EAAET,cAHsB;AAI/BU,EAAAA,WAAW,EAAEX,cAJkB;AAK/BY,EAAAA,WAAW,EAAEV,cALkB;AAM/BW,EAAAA,SAAS,EAAEV;AANoB,CAAD,CAAhC;AASA,MAAMW,KAAK,GAAGf,WAAW,CAACQ,QAAD,EAAWV,eAAe,CAACO,KAAD,CAA1B,CAAzB,C,CAEA;;AACAW,MAAM,CAACD,KAAP,GAAeA,KAAf,C,CAEA;;AAKA,eAAeA,KAAf","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport profileReducer from \"./reducers/profileReducer\";\nimport sideBarReducer from \"./reducers/sideBarReducer\";\nimport dialogsReducer from \"./reducers/dialogsReducer\";\nimport usersReducer from \"./reducers/usersReducer\";\nimport thunk from \"redux-thunk\";\nimport { authReducer } from \"./reducers/authReducer\";\nimport { appReducer } from \"./reducers/appReducer\";\n\nconst reducers = combineReducers({\n  app: appReducer,\n  auth: authReducer,\n  sideBar: sideBarReducer,\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\n//@ts-ignore\nwindow.store = store;\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}