{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/LoginPage/LoginPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport s from \"./loginPage.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { createPortal } from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const isAuthorized = useSelector(state => state.auth.isAuthorized);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  if (isAuthorized) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.loginPageWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => {\n        handleSubmit(data => {\n          alert(JSON.stringify(data));\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"E-Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n          required: true,\n          minLength: 4\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.rememberMeCheckBox,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Remember Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.submitButton,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), document.body);\n};\n\n_s(LoginPage, \"vCIX0APCw8zUW7LlT+/tSScVuwc=\", false, function () {\n  return [useSelector, useForm];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/LoginPage/LoginPage.tsx"],"names":["React","s","useSelector","Redirect","createPortal","useForm","LoginPage","isAuthorized","state","auth","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","loginPageWrapper","alert","JSON","stringify","required","minLength","rememberMeCheckBox","submitButton","document","body"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AASA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,YAAY,GAAGL,WAAW,CAC7BM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,YADQ,CAAhC;AAGA,QAAM;AACJG,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFT,OAAO,EALX;;AAMA,QAAMU,QAA+B,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAlD;;AAEA,MAAIT,YAAJ,EAAkB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAOH,YAAY,eACjB;AAAK,IAAA,SAAS,EAAEH,CAAC,CAACkB,gBAAlB;AAAA,2BACE;AACE,MAAA,QAAQ,EAAE,MAAM;AACdR,QAAAA,YAAY,CAAEK,IAAD,IAAU;AACrBI,UAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAD,CAAL;AACD,SAFW,CAAZ;AAGD,OALH;AAAA,8BAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,sBAAWN,QAAQ,CAAC,OAAD,EAAU;AAAEa,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAnB;AAAA;AAAA;AAAA;AAAA,cATF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,sBAAWb,QAAQ,CAAC,UAAD,EAAa;AAAEa,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAb;AAAnB;AAAA;AAAA;AAAA;AAAA,cAZF,eAcE;AAAK,QAAA,SAAS,EAAEvB,CAAC,CAACwB,kBAAlB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAmBE;AAAK,QAAA,SAAS,EAAExB,CAAC,CAACyB,YAAlB;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADiB,EA0BjBC,QAAQ,CAACC,IA1BQ,CAAnB;AA4BD,CA5CD;;GAAMtB,S;UACiBJ,W,EAQjBG,O;;;KATAC,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport s from \"./loginPage.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { Redirect } from \"react-router-dom\";\nimport { createPortal } from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { SubmitHandler } from \"redux-form\";\n\ntype Inputs = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n};\n\nconst LoginPage = () => {\n  const isAuthorized = useSelector<RootState, boolean>(\n    (state) => state.auth.isAuthorized\n  );\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<Inputs>();\n  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);\n\n  if (isAuthorized) {\n    return <Redirect to={\"/\"} />;\n  }\n\n  return createPortal(\n    <div className={s.loginPageWrapper}>\n      <form\n        onSubmit={() => {\n          handleSubmit((data) => {\n            alert(JSON.stringify(data));\n          });\n        }}\n      >\n        <h1>Login</h1>\n        <label>E-Mail</label>\n        <input {...register(\"email\", { required: true })} />\n\n        <label>Password</label>\n        <input {...register(\"password\", { required: true, minLength: 4 })} />\n\n        <div className={s.rememberMeCheckBox}>\n          <label>Remember Me</label>\n          <input type=\"checkbox\" />\n        </div>\n\n        <div className={s.submitButton}>\n          <input type=\"submit\" />\n        </div>\n      </form>\n    </div>,\n    document.body\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}