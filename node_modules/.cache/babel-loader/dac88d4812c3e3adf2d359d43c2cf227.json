{"ast":null,"code":"const initialState = {\n  isAuthorized: false\n};\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"auth/me\":\n      return { ...state,\n        ...action.data\n      };\n\n    default:\n      break;\n  }\n};\nexport const meAC = (userId, email, login) => {\n  return {\n    type: \"auth/me\",\n    data: {\n      userId,\n      email,\n      login\n    }\n  };\n};","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/authReducer.ts"],"names":["initialState","isAuthorized","authReducer","state","action","type","data","meAC","userId","email","login"],"mappings":"AAAA,MAAMA,YAA2B,GAAG;AAClCC,EAAAA,YAAY,EAAE;AADoB,CAApC;AAIA,OAAO,MAAMC,WAAW,GAAG,YAA+C;AAAA,MAA9CC,KAA8C,uEAAtCH,YAAsC;AAAA,MAAxBI,MAAwB;;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO,EACL,GAAGF,KADE;AAEL,WAAGC,MAAM,CAACE;AAFL,OAAP;;AAKF;AACE;AARJ;AAUD,CAXM;AAaP,OAAO,MAAMC,IAAI,GAAG,CAACC,MAAD,EAAiBC,KAAjB,EAAgCC,KAAhC,KAAkD;AACpE,SAAO;AAAEL,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE;AAAEE,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB;AAAzB,GAAP;AACD,CAFM","sourcesContent":["const initialState: authStateType = {\n  isAuthorized: false,\n};\n\nexport const authReducer = (state = initialState, action: ActionsType) => {\n  switch (action.type) {\n    case \"auth/me\":\n      return {\n        ...state,\n        ...action.data,\n      };\n\n    default:\n      break;\n  }\n};\n\nexport const meAC = (userId: number, email: string, login: string) => {\n  return { type: \"auth/me\", data: { userId, email, login } } as const;\n};\n\ntype authStateType = {\n  isAuthorized: boolean;\n};\n\ntype MeActionType = ReturnType<typeof meAC>;\n\ntype ActionsType = MeActionType;\n"]},"metadata":{},"sourceType":"module"}