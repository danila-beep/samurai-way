{"ast":null,"code":"import { postsAPI } from \"../../api/postsAPI\";\nconst initialState = [];\nexport const feedReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"feedPage/setPosts\":\n      return [...state, ...action.data];\n\n    default:\n      return state;\n  }\n};\nexport const setPostsAC = data => {\n  return {\n    type: \"feedPage/setPosts\",\n    data\n  };\n};\nexport const getPostsTC = () => dispatch => {\n  postsAPI.getPosts().then(res => {\n    dispatch(setPostsAC(res.data));\n  });\n};","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/feedReducer.ts"],"names":["postsAPI","initialState","feedReducer","state","action","type","data","setPostsAC","getPostsTC","dispatch","getPosts","then","res"],"mappings":"AACA,SAASA,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,YAA+B,GAAG,EAAxC;AAEA,OAAO,MAAMC,WAAW,GAAG,YAA8C;AAAA,MAA7CC,KAA6C,uEAArCF,YAAqC;AAAA,MAAvBG,MAAuB;;AACvE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAW,GAAGC,MAAM,CAACE,IAArB,CAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMI,UAAU,GAAID,IAAD,IAAsB;AAC9C,SAAO;AAAED,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA;AAA7B,GAAP;AACD,CAFM;AAIP,OAAO,MAAME,UAAU,GAAG,MAAOC,QAAD,IAAwB;AACtDT,EAAAA,QAAQ,CAACU,QAAT,GAAoBC,IAApB,CAA0BC,GAAD,IAAS;AAChCH,IAAAA,QAAQ,CAACF,UAAU,CAACK,GAAG,CAACN,IAAL,CAAX,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import { Dispatch } from \"redux\";\nimport { postsAPI } from \"../../api/postsAPI\";\n\nconst initialState: FeedPageStateType = [];\n\nexport const feedReducer = (state = initialState, action: ActionType) => {\n  switch (action.type) {\n    case \"feedPage/setPosts\":\n      return [...state, ...action.data];\n    default:\n      return state;\n  }\n};\n\nexport const setPostsAC = (data: PostType[]) => {\n  return { type: \"feedPage/setPosts\", data } as const;\n};\n\nexport const getPostsTC = () => (dispatch: Dispatch) => {\n  postsAPI.getPosts().then((res) => {\n    dispatch(setPostsAC(res.data));\n  });\n};\n\ntype ActionType = ReturnType<typeof setPostsAC>;\n\ntype FeedPageStateType = PostType[];\n\nexport type PostType = {\n  userId: number;\n  id: number;\n  title: string;\n  body: string;\n  image: string;\n};\n"]},"metadata":{},"sourceType":"module"}