{"ast":null,"code":"var _jsxFileName = \"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currentPageChengerAC, followUserAC, setTotalUsersCount, setUsersAC, unfollowUserAC } from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersPage = () => {\n  _s();\n\n  //getting data from redux\n  const usersPageData = useSelector(state => state.usersPage);\n  const dispatch = useDispatch(); //API call\n\n  useEffect(() => {\n    const getUsersFromApi = async () => {\n      try {\n        axios.get(`${baseURL}/users?page=${usersPageData.currentPage}&count=${usersPageData.pageSize}`).then(response => {\n          const data = response.data;\n          dispatch(setUsersAC(data));\n          dispatch(setTotalUsersCount(data.totalCount));\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getUsersFromApi();\n  }, [usersPageData.currentPage, usersPageData.pageSize]); //pagination logic\n\n  const pagesCount = Math.ceil(usersPageData.totalUsersCount / usersPageData.pageSize);\n  const [pagesForRender, setPagesForRender] = useState([1, 2, 3, 4, 5]);\n\n  const nextPages = () => {\n    const nextPagesArray = [...pagesForRender];\n\n    if (nextPagesArray[4] >= pagesCount) {\n      setPagesForRender(nextPagesArray);\n    } else {\n      nextPagesArray.push(nextPagesArray[4] + 1);\n      nextPagesArray.shift();\n      setPagesForRender(nextPagesArray);\n    }\n  };\n\n  const previousPages = () => {\n    const previousPagesArray = [...pagesForRender];\n\n    if (previousPagesArray[0] <= 1) {\n      setPagesForRender(previousPagesArray);\n    } else {\n      previousPagesArray.pop();\n      previousPagesArray.unshift(previousPagesArray[0] - 1);\n      setPagesForRender(previousPagesArray);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.usersPageWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.usersList,\n      children: usersPageData.users.items.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardHeader,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNJywAxz6Z9hzwF0VZ3FdVkZ9o1I1_7wN72w&usqp=CAU\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardUserInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.photos.small ? user.photos.small : \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\",\n              width: 100,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.userCardFollowButtons,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => dispatch(followUserAC(user.id)),\n              children: \"Follow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => dispatch(unfollowUserAC(user.id)),\n              children: \"Unfollow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: previousPages,\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), pagesForRender.map((p, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            dispatch(currentPageChengerAC(p));\n          },\n          children: p\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: nextPages,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersPage, \"ttLhUdfWsPcwN2KqwS1jCej05EE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UsersPage;\nexport default UsersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersPage\");","map":{"version":3,"sources":["/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx"],"names":["React","useEffect","useState","styles","useDispatch","useSelector","currentPageChengerAC","followUserAC","setTotalUsersCount","setUsersAC","unfollowUserAC","Button","axios","baseURL","UsersPage","usersPageData","state","usersPage","dispatch","getUsersFromApi","get","currentPage","pageSize","then","response","data","totalCount","error","console","log","pagesCount","Math","ceil","totalUsersCount","pagesForRender","setPagesForRender","nextPages","nextPagesArray","push","shift","previousPages","previousPagesArray","pop","unshift","usersPageWrapper","usersList","users","items","map","user","userCard","userCardHeader","userCardUserInfo","photos","small","name","userCardFollowButtons","id","p","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UserPageType,\n  currentPageChengerAC,\n  followUserAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n} from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../constants\";\nimport styled from \"styled-components\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const dispatch = useDispatch();\n\n  //API call\n  useEffect(() => {\n    const getUsersFromApi = async () => {\n      try {\n        axios\n          .get(\n            `${baseURL}/users?page=${usersPageData.currentPage}&count=${usersPageData.pageSize}`\n          )\n          .then((response) => {\n            const data = response.data;\n            dispatch(setUsersAC(data));\n            dispatch(setTotalUsersCount(data.totalCount));\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUsersFromApi();\n  }, [usersPageData.currentPage, usersPageData.pageSize]);\n\n  //pagination logic\n\n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n\n  const [pagesForRender, setPagesForRender] = useState<Array<number>>([\n    1, 2, 3, 4, 5,\n  ]);\n\n  const nextPages = () => {\n    const nextPagesArray: Array<number> = [...pagesForRender];\n    if (nextPagesArray[4] >= pagesCount) {\n      setPagesForRender(nextPagesArray);\n    } else {\n      nextPagesArray.push(nextPagesArray[4] + 1);\n      nextPagesArray.shift();\n      setPagesForRender(nextPagesArray);\n    }\n  };\n  const previousPages = () => {\n    const previousPagesArray: Array<number> = [...pagesForRender];\n    if (previousPagesArray[0] <= 1) {\n      setPagesForRender(previousPagesArray);\n    } else {\n      previousPagesArray.pop();\n      previousPagesArray.unshift(previousPagesArray[0] - 1);\n      setPagesForRender(previousPagesArray);\n    }\n  };\n\n  return (\n    <div className={styles.usersPageWrapper}>\n      <div className={styles.usersList}>\n        {usersPageData.users.items.map((user) => {\n          return (\n            <div key={user.id} className={styles.userCard}>\n              <div className={styles.userCardHeader}>\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRNJywAxz6Z9hzwF0VZ3FdVkZ9o1I1_7wN72w&usqp=CAU\" alt=\"\" />\n              </div>\n              <div className={styles.userCardUserInfo}>\n                <img\n                  src={\n                    user.photos.small\n                      ? user.photos.small\n                      : \"https://cdn-icons-png.flaticon.com/512/3135/3135715.png\"\n                  }\n                  width={100}\n                  alt=\"\"\n                />\n                <span>{user.name}</span>\n              </div>\n              <div className={styles.userCardFollowButtons}>\n                <Button onClick={() => dispatch(followUserAC(user.id))}>\n                  Follow\n                </Button>\n                <Button onClick={() => dispatch(unfollowUserAC(user.id))}>\n                  Unfollow\n                </Button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        <span onClick={previousPages}>back</span>\n        {pagesForRender.map((p, index) => {\n          return (\n            <span\n              key={index}\n              onClick={() => {\n                dispatch(currentPageChengerAC(p));\n              }}\n            >\n              {p}\n            </span>\n          );\n        })}\n        <span onClick={nextPages}>next</span>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersPage;\n"]},"metadata":{},"sourceType":"module"}