[{"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/index.tsx":"1","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/App.tsx":"2","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Footer.tsx":"3","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/store.ts":"4","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/dialogsReducer.ts":"5","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/profileReducer.ts":"6","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/TextArea.tsx":"7","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/Button.tsx":"8","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/usersReducer.ts":"9","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Header/Header.tsx":"10","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/SideBar/SideBar.tsx":"11","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx":"12","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx":"13","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/DialogsPage/DialogsPage.tsx":"14","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/DialogItem.tsx":"15","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Message.tsx":"16","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Post/Post.tsx":"17","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/api/socialMediaAPI.ts":"18","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/Preloader.tsx":"19","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/ProfilePage/ProfilePage.tsx":"20","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/authReducer.ts":"21","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hoc/LoginRedirect.tsx":"22","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/LoginPage/LoginPage.tsx":"23","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/ProfileStatus/ProfileStatus.tsx":"24","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hooks/useAppDispatch.ts":"25","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hooks/useAppSelector.ts":"26","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/appReducer.ts":"27","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/sideBarReducer.tsx":"28","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/FeedPosts/FeedPosts.tsx":"29","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/FeedRightSideBar/FeedRightSideBar.tsx":"30","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/feedReducer.ts":"31","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/api/postsAPI.ts":"32","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/AddPostContainer/AddPostContainer.tsx":"33","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/RequestUserCard/RequestUserCard.tsx":"34","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/FriendMiniature/FriendMiniature.tsx":"35","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/userNameGenerator.ts":"36"},{"size":384,"mtime":1691435388047,"results":"37","hashOfConfig":"38"},{"size":2191,"mtime":1692813203542,"results":"39","hashOfConfig":"38"},{"size":96,"mtime":1689349593974,"results":"40","hashOfConfig":"38"},{"size":1084,"mtime":1692221833876,"results":"41","hashOfConfig":"38"},{"size":1044,"mtime":1689446249243,"results":"42","hashOfConfig":"38"},{"size":2069,"mtime":1692282503749,"results":"43","hashOfConfig":"38"},{"size":453,"mtime":1689442790427,"results":"44","hashOfConfig":"38"},{"size":391,"mtime":1689442321075,"results":"45","hashOfConfig":"38"},{"size":5229,"mtime":1692813303198,"results":"46","hashOfConfig":"38"},{"size":2546,"mtime":1692260221939,"results":"47","hashOfConfig":"38"},{"size":1847,"mtime":1692534087467,"results":"48","hashOfConfig":"38"},{"size":506,"mtime":1692532852857,"results":"49","hashOfConfig":"38"},{"size":3998,"mtime":1692281223710,"results":"50","hashOfConfig":"38"},{"size":978,"mtime":1691528887566,"results":"51","hashOfConfig":"38"},{"size":500,"mtime":1689355832675,"results":"52","hashOfConfig":"38"},{"size":325,"mtime":1689356077283,"results":"53","hashOfConfig":"38"},{"size":2675,"mtime":1692530975412,"results":"54","hashOfConfig":"38"},{"size":1392,"mtime":1692260054890,"results":"55","hashOfConfig":"38"},{"size":1013,"mtime":1691528723779,"results":"56","hashOfConfig":"38"},{"size":2847,"mtime":1692206005607,"results":"57","hashOfConfig":"38"},{"size":2361,"mtime":1692260186740,"results":"58","hashOfConfig":"38"},{"size":815,"mtime":1692200686573,"results":"59","hashOfConfig":"38"},{"size":1784,"mtime":1692211732131,"results":"60","hashOfConfig":"38"},{"size":882,"mtime":1692200443003,"results":"61","hashOfConfig":"38"},{"size":313,"mtime":1692204246922,"results":"62","hashOfConfig":"38"},{"size":189,"mtime":1692204244085,"results":"63","hashOfConfig":"38"},{"size":896,"mtime":1692205834871,"results":"64","hashOfConfig":"38"},{"size":685,"mtime":1692220157346,"results":"65","hashOfConfig":"38"},{"size":1000,"mtime":1692532427469,"results":"66","hashOfConfig":"38"},{"size":1365,"mtime":1692282288626,"results":"67","hashOfConfig":"38"},{"size":11050,"mtime":1692283409459,"results":"68","hashOfConfig":"38"},{"size":470,"mtime":1692283436998,"results":"69","hashOfConfig":"38"},{"size":2075,"mtime":1692283251143,"results":"70","hashOfConfig":"38"},{"size":841,"mtime":1692281538272,"results":"71","hashOfConfig":"38"},{"size":438,"mtime":1692282228118,"results":"72","hashOfConfig":"38"},{"size":2309,"mtime":1692283718707,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"5rhgh5",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"77"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"77"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/index.tsx",[],[],["198","199"],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/App.tsx",["200","201"],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Footer.tsx",[],[],["202","203"],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/store.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/dialogsReducer.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/profileReducer.ts",["204"],[],"import { Dispatch } from \"redux\";\nimport { v1 } from \"uuid\";\nimport { socialMediaAPI } from \"../../api/socialMediaAPI\";\n\nconst profilePageState = {\n  profile: {},\n};\n\nconst profileReducer = (\n  state: ProfilePageStateType = profilePageState,\n  action: ActionsType\n) => {\n  switch (action.type) {\n    case \"profilePage/SetUserProfile\": {\n      return {\n        ...state,\n        profile: action.profile,\n      };\n    }\n    case \"profilePage/SetUserStatus\": {\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          status: action.status,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n\n//action creators\nexport const setUserProfileAC = (profile: ProfileInfoType) => {\n  return { type: \"profilePage/SetUserProfile\", profile } as const;\n};\nexport const setUserStatusAC = (status: string) => {\n  return { type: \"profilePage/SetUserStatus\", status } as const;\n};\n\n//thunk creators\nexport const setUserProfileTC =\n  (userId: number) => async (dispatch: Dispatch) => {\n    socialMediaAPI.getUserProfile(userId).then((res) => {\n      dispatch(setUserProfileAC(res.data));\n    });\n  };\nexport const getUserStatusTC = (userId: number) => (dispatch: Dispatch) => {\n  socialMediaAPI\n    .getUserStatus(userId)\n    .then((res) => {\n      dispatch(setUserStatusAC(res.data));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n//types\ntype ProfilePageStateType = {\n  profile: ProfileInfoType;\n};\n\nexport type ProfileInfoType = {\n  userId?: number;\n  lookingForAJob?: boolean;\n  lookingForAJobDescription?: string;\n  fullName?: string;\n  contacts?: {\n    github: string;\n    vk: string;\n    facebook: string;\n    instagram: string;\n    twitter: string;\n    website: string;\n    youtube: string;\n    mainLink: string;\n  };\n  photos?: {\n    small: string;\n    large: string;\n  };\n  status?: string;\n};\n\ntype SetUserProfileType = ReturnType<typeof setUserProfileAC>;\ntype SetUserStatusType = ReturnType<typeof setUserStatusAC>;\n\ntype ActionsType = SetUserProfileType | SetUserStatusType;\n\nexport default profileReducer;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/TextArea.tsx",[],[],["205","206"],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/Button.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/usersReducer.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Header/Header.tsx",["207","208","209"],[],"import React, { useEffect, useState } from \"react\";\nimport s from \"./header.module.css\";\nimport {\n  UilBell,\n  UilEnvelope,\n  UilHome,\n  UilMessage,\n  UilNewspaper,\n  UilPlay,\n  UilSearch,\n  UilSetting,\n  UilUser,\n  UilUsersAlt,\n  UilYinYang,\n} from \"@iconscout/react-unicons\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { NavLink } from \"react-router-dom\";\nimport useSelection from \"antd/lib/table/hooks/useSelection\";\nimport { RootState } from \"../../store/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutTC, meTC } from \"../../store/reducers/authReducer\";\n\nexport const Header = () => {\n  const isAuthorized = useSelector<RootState, boolean>(\n    (state) => state.auth.isAuthorized\n  );\n  const dispatch = useDispatch();\n\n  const [logoutMenu, setLogoutMenu] = useState<boolean>(false)\n\n  useEffect(() => {\n    dispatch(meTC());\n  }, [dispatch]);\n\n  return (\n    <header className={s.headerWrapper}>\n      <div className={s.headerContainer}>\n        <div className={s.headerLeftSideContainer}>\n          <div className={s.headerIconContainer}>\n            <UilYinYang size={50} />\n          </div>\n          <div className={s.headerSearchContainer}>\n            <UilSearch />\n            <input type=\"text\" placeholder=\"Search...\" />\n          </div>\n        </div>\n        <div className={s.headerNavigation}>\n          <ul>\n            <li>\n              <NavLink to={\"/\"}>\n                <UilHome size={30} />\n              </NavLink>\n            </li>\n            <li>\n              <UilNewspaper size={30} />\n            </li>\n            <li>\n              <UilUsersAlt size={30} />\n            </li>\n            <li>\n              <UilPlay size={30} />\n            </li>\n          </ul>\n        </div>\n        <div className={s.headerProfileSettings}>\n          <ul>\n            <li>\n              <UilEnvelope />\n            </li>\n            <li>\n              <UilBell />\n            </li>\n            {isAuthorized ? (\n              <li className={s.headerUserImage} onClick={() => setLogoutMenu(prev => !prev)} onBlur={() => setLogoutMenu(false)} tabIndex={0}>\n                <img src={miniAva} alt=\"\" />\n                {logoutMenu && <div onClick={() => dispatch(logoutTC())}>logout</div>}\n              </li>\n            ) : (\n              <li className={s.headerLoginButton}>\n                <NavLink to={\"/login\"}>\n                  <UilUser />\n                </NavLink>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </header>\n  );\n};\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/SideBar/SideBar.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx",["210","211","212","213","214","215","216","217","218"],[],"import React, { useEffect, useState } from \"react\";\nimport s from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UserPageType,\n  currentPageChangerAC,\n  followUserAC,\n  followUserTC,\n  getUsersTC,\n  nextPagesPaginationAC,\n  previousPagesPaginationAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n  unfollowUserTC,\n} from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSessionStorage } from \"usehooks-ts\";\nimport Preloader from \"../../shared/Preloader\";\nimport { SideBar } from \"../../components/SideBar/SideBar\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const isAuthorized = useAppSelector((state) => state.auth.isAuthorized);\n  const dispatch = useDispatch();\n\n  //API \"get\" call for users\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]);\n\n  const usersForRender = usersPageData.users.items.map((user) => {\n    return (\n      <div className={s.userPageUserCardContainer}>\n        <NavLink to={`profile/${user.id}`}>\n          <img\n            src={\n              user.photos.large\n                ? user.photos.large\n                : \"https://uxwing.com/wp-content/themes/uxwing/download/peoples-avatars/corporate-user-icon.png\"\n            }\n            alt=\"\"\n          />\n        </NavLink>\n        <h3>{user.name}</h3>\n        <div className={s.userPageCardButtonsContainer}>\n          <button\n            className={s.followButton}\n            onClick={() => followButtonHandler(user.followed, user.id)}\n            disabled={!isAuthorized && !user.followed ? true : false}\n          >\n            Follow\n          </button>\n          <button\n            className={s.unfollowButton}\n            onClick={() => unfollowButtonHandler(user.followed, user.id)}\n            disabled={!isAuthorized && user.followed ? false : true}\n          >\n            Unfollow\n          </button>\n        </div>\n      </div>\n    );\n  });\n\n  //pagination\n  const pagesForRender = usersPageData.paginationCount.map((page) => {\n    return (\n      <div\n        className={s.userPagePaginationItem}\n        onClick={() => changePageHandler(page)}\n      >\n        {page}\n      </div>\n    );\n  });\n\n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n\n  const changePageHandler = (page: number) => {\n    dispatch(currentPageChangerAC(page));\n  };\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n  const previousPages = () => {\n    dispatch(previousPagesPaginationAC(pagesCount));\n  };\n\n  //follow / unfollow\n  const followButtonHandler = (isFollowed: boolean, userId: number) => {\n    dispatch(followUserTC(userId));\n  };\n  const unfollowButtonHandler = (isFollowed: boolean, userId: number) => {\n    dispatch(unfollowUserTC(userId));\n  };\n\n  return usersPageData.isFetching ? (\n    <Preloader />\n  ) : (\n    <div className={s.userPageContainer}>\n      <SideBar />\n      <div className={s.userPageUsersListContainer}>\n        <div>{usersForRender}</div>\n        <div className={s.userPagePaginationContainer}>\n          <div\n            className={s.userPagePaginationChangeButton}\n            onClick={previousPages}\n          >\n            <UilArrowLeft />\n          </div>\n          {pagesForRender}\n          <div className={s.userPagePaginationChangeButton} onClick={nextPages}>\n            <UilArrowRight />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersPage;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/DialogsPage/DialogsPage.tsx",["219","220","221","222","223","224","225","226"],[],"import React, { FC, useState } from \"react\";\nimport s from \"./dialogPage.module.css\";\nimport DialogItem from \"../../components/DialogItem\";\nimport Message from \"../../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  DialogPageType,\n  DialogType,\n  MessageType,\n  addMessageAC,\n} from \"../../store/reducers/dialogsReducer\";\nimport TextArea from \"../../shared/TextArea\";\nimport { Button } from \"../../shared/Button\";\n\ntype DialogsPageProps = {};\n\nexport const DialogsPage: FC<DialogsPageProps> = (props) => {\n  const dialogsState = useSelector<RootState, DialogPageType>(\n    (state) => state.dialogsPage\n  );\n  const dispatch = useDispatch();\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addMessage = () => {\n    dispatch(addMessageAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  return <div className={s.dialogPageContainer}>\n    Dialog Page\n  </div>;\n};\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/DialogItem.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Message.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Post/Post.tsx",["227","228","229","230","231","232"],[],"import React, { FC, useEffect, useState } from \"react\";\nimport s from \"./post.module.css\";\nimport {\n  UilComment,\n  UilElipsisDoubleVAlt,\n  UilThumbsDown,\n  UilThumbsUp,\n  UilUser,\n} from \"@iconscout/react-unicons\";\nimport { useAppDispatch } from \"../../utils/hooks/useAppDispatch\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\nimport { socialMediaAPI } from \"../../api/socialMediaAPI\";\nimport { ProfileInfoType } from \"../../store/reducers/profileReducer\";\nimport { NavLink } from \"react-router-dom\";\nimport { getRandomName } from \"../../utils/userNameGenerator\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { AvatarGenerator } from \"random-avatar-generator\";\n\ntype PostProps = {\n  postText: string;\n  postId: number;\n  userId: number;\n};\n\nconst Post: FC<PostProps> = (props) => {\n  const { postText } = props;\n  const imagesForPosts = useAppSelector<string[]>((state) => state.feed.images);\n  const avatarGenerator = new AvatarGenerator();\n  const loggedUserId = useAppSelector((state) => state.app.userId);\n  const loggedUserName = useAppSelector((state) => state.app.fullName);\n\n  //НЕВОЗМОЖНО РЕАЛИЗОВАТЬ ТАК КАК ЕСТЬ ОГРАНИЧЕНИЕ НА КОЛИЧЕСТВО ЗАПРОСОВ\n\n  // const [localPostData, setLocalPostData] = useState<ProfileInfoType>();\n\n  // useEffect(() => {\n  //   socialMediaAPI.getUserProfile(props.userId).then((res) => {\n  //     setLocalPostData(res.data);\n  //   });\n  // }, [props.userId]);\n\n  // console.log(localPostData);\n\n  return (\n    <div className={s.postWrapper}>\n      <div className={s.postHeader}>\n        {props.userId === loggedUserId ? (\n          <NavLink\n            to={`/profile/${loggedUserId}`}\n            className={s.postHeaderUserName}\n          >\n            <img src={miniAva} alt=\"\" />\n            <h3>{loggedUserName}</h3>\n          </NavLink>\n        ) : (\n          <NavLink\n            to={`/profile/${Math.floor(Math.random() * 29826)}`}\n            className={s.postHeaderUserName}\n          >\n            <img src={avatarGenerator.generateRandomAvatar()} alt=\"\" />\n            <h3>{getRandomName()}</h3>\n          </NavLink>\n        )}\n        <div className={s.postHeaderOptions}>\n          <UilElipsisDoubleVAlt />\n        </div>\n      </div>\n      <div className={s.postBody}>\n        <p>{postText}</p>\n        <img\n          src={\n            imagesForPosts[Math.floor(Math.random() * imagesForPosts.length)]\n          }\n          alt=\"\"\n        />\n      </div>\n      <div className={s.postShare}>\n        <UilComment />\n        <UilThumbsUp />\n        <UilThumbsDown />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n",["233","234"],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/api/socialMediaAPI.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/Preloader.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/ProfilePage/ProfilePage.tsx",["235","236","237","238","239"],[],"import React, { useEffect } from \"react\";\nimport s from \"./profilePage.module.css\";\nimport {\n  UilCommentDots,\n  UilDraggabledots,\n  UilEdit,\n  UilSliderHRange,\n  UilUser,\n} from \"@iconscout/react-unicons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { setUserProfileTC } from \"../../store/reducers/profileReducer\";\nimport { authStateType } from \"../../store/reducers/authReducer\";\nimport ProfileStatus from \"../../components/ProfileStatus/ProfileStatus\";\n\nconst ProfilePage = () => {\n  const dispatch = useDispatch();\n  const profilePageData = useSelector((state: RootState) => state.profilePage);\n  const { userId } = useParams<{ userId: string }>();\n  let myId = useSelector<RootState, number | undefined>(\n    (state) => state.auth.data?.id\n  );\n\n  useEffect(() => {\n    if (!userId) {\n      if (myId) {\n        dispatch(setUserProfileTC(myId));\n      }\n    } else {\n      dispatch(setUserProfileTC(Number(userId)));\n    }\n  }, [dispatch, userId, myId]);\n\n  return (\n    <div className={s.profilePageContainer}>\n      <div className={s.profilePageHeaderContainer}>\n        <img\n          src={\n            \"https://images.unsplash.com/photo-1620121692029-d088224ddc74?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8bWFjJTIwb3MlMjB3YWxscGFwZXJ8ZW58MHx8MHx8fDA%3D&w=1000&q=80\"\n          }\n          alt=\"\"\n        />\n        <div className={s.profilePageHeaderProfileInfo}>\n          <div className={s.profilePageHeaderProfileInfoLeftContainer}>\n            <div className={s.profilePageHeaderProfileInfoUserImage}>\n              <img\n                src={\n                  profilePageData.profile.photos?.large\n                    ? profilePageData.profile.photos?.large\n                    : \"https://www.pngmart.com/files/22/User-Avatar-Profile-PNG.png\"\n                }\n                alt=\"\"\n              />\n            </div>\n            <div className={s.profilePageHeaderProfileInfoUserName}>\n              <h2>{profilePageData.profile.fullName}</h2>\n              <p>followers: nnn</p>\n            </div>\n          </div>\n          <div className={s.profilePageHeaderProfileInfoRightContainer}>\n            <button className={s.editButton}>\n              <UilEdit />\n              Edit Profile\n            </button>\n            <button className={s.moreActionsButton}>\n              <UilSliderHRange />\n            </button>\n          </div>\n        </div>\n        <ProfileStatus userId={profilePageData.profile.userId}/>\n        <hr />\n        <div className={s.profilePageHeaderNavigation}>\n          <ul>\n            <li>Posts</li>\n            <li>About</li>\n            <li>Photos</li>\n            <li>Events</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/authReducer.ts",["240","241","242","243"],[],"import { Dispatch } from \"redux\";\nimport {\n  LoginDataType,\n  authApi,\n  socialMediaAPI,\n} from \"../../api/socialMediaAPI\";\nimport {\n  SetLoggedUserDataActionType,\n  getLoggedUserDataTC,\n  setLoggedUserDataAC,\n} from \"./appReducer\";\n\nconst initialState: authStateType = {\n  isAuthorized: false,\n  data: {},\n};\n\nexport const authReducer = (state = initialState, action: ActionsType) => {\n  switch (action.type) {\n    case \"auth/me\":\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...action.data,\n        },\n        isAuthorized: true,\n      };\n    case \"auth/login\": {\n      return {\n        ...state,\n        isAuthorized: action.isAuthorized,\n      };\n    }\n    case \"auth/logout\": {\n      return {\n        ...state,\n        isAuthorized: action.isAuthorized,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const meAC = (data: {\n  userId: number;\n  email: string;\n  login: string;\n}) => {\n  return { type: \"auth/me\", data } as const;\n};\nexport const loginAC = () => {\n  return { type: \"auth/login\", isAuthorized: true } as const;\n};\nexport const logoutAC = () => {\n  return { type: \"auth/logout\", isAuthorized: false } as const;\n};\n\nexport const meTC = () => (dispatch: Dispatch<ActionsType>) => {\n  authApi\n    .me()\n    .then((res) => {\n      if (res.data.resultCode === 0) {\n        dispatch(meAC(res.data.data));\n      } else {\n        console.log(res.data.messages);\n      }\n    })\n    .catch((err) => {\n      console.log((err as { message: string }).message);\n    });\n};\n\nexport const loginTC = (data: LoginDataType) => (dispatch: Dispatch) => {\n  authApi\n    .login(data)\n    .then((res) => {\n      if (res.data.resultCode === 0) {\n        dispatch(loginAC());\n      } else {\n        console.log(res.data.messages);\n      }\n    })\n    .catch((err) => {\n      console.log((err as { message: string }).message);\n    });\n};\nexport const logoutTC = () => (dispatch: Dispatch) => {\n  authApi.logout().then((res) => {\n    dispatch(logoutAC());\n  });\n};\n\nexport type authStateType = {\n  isAuthorized: boolean;\n  data: {\n    id?: number;\n    email?: string;\n    login?: string;\n  };\n};\n\ntype MeActionType = ReturnType<typeof meAC>;\ntype LoginActionType = ReturnType<typeof loginAC>;\ntype LogoutActionType = ReturnType<typeof logoutAC>;\n\ntype ActionsType = MeActionType | LoginActionType | LogoutActionType;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hoc/LoginRedirect.tsx",["244","245","246","247","248","249"],[],"import useSelection from \"antd/lib/table/hooks/useSelection\";\nimport React, {\n  JSXElementConstructor,\n  ReactChild,\n  ReactElement,\n  ReactFragment,\n  ReactPortal,\n  useEffect,\n} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { Redirect } from \"react-router-dom\";\n\ntype ReactNode = ReactElement<any, string | JSXElementConstructor<any>>;\n\ntype LoginRedirectProps = {\n  children: ReactNode;\n};\n\nfunction LoginRedirect(props: LoginRedirectProps): ReactNode {\n  const { children, ...rest } = props;\n\n  const isAuthorized = useSelector<RootState, boolean>(\n    (state) => state.auth.isAuthorized\n  );\n\n  console.log(isAuthorized);\n  \n\n  if (!isAuthorized) {\n    return <Redirect to={`/login`} />;\n  }\n\n  return children;\n}\n\nexport default LoginRedirect;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/LoginPage/LoginPage.tsx",["250","251","252"],[],"import React from \"react\";\nimport s from \"./loginPage.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { Redirect } from \"react-router-dom\";\nimport { createPortal } from \"react-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { SubmitHandler } from \"redux-form\";\nimport { spawn } from \"child_process\";\nimport { useAppDispatch } from \"../../utils/hooks/useAppDispatch\";\nimport { loginTC } from \"../../store/reducers/authReducer\";\n\ntype Inputs = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n};\n\nconst LoginPage = () => {\n  const isAuthorized = useSelector<RootState, boolean>(\n    (state) => state.auth.isAuthorized\n  );\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<Inputs>();\n\n  if (isAuthorized) {\n    return <Redirect to={\"/\"} />;\n  }\n\n  return createPortal(\n    <div className={s.loginPageWrapper}>\n      <form\n        onSubmit={handleSubmit((data) => {\n          dispatch(loginTC(data));\n        })}\n      >\n        <h1>Login</h1>\n        <label>E-Mail</label>\n        <input {...register(\"email\", { required: true })} />\n        {errors.email && <span>{errors.email.message}</span>}\n\n        <label>Password</label>\n        <input\n          {...register(\"password\", { required: true, minLength: 4 })}\n          type=\"password\"\n        />\n        {errors.password && <span>{errors.password.message}</span>}\n\n        <div className={s.rememberMeCheckBox}>\n          <label>Remember Me</label>\n          <input type=\"checkbox\" {...register(\"rememberMe\")} />\n        </div>\n\n        <input type=\"submit\" className={s.submitButton} />\n      </form>\n    </div>,\n    document.body\n  );\n};\n\nexport default LoginPage;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/ProfileStatus/ProfileStatus.tsx",["253","254"],[],"import React, { useState, MouseEvent, useEffect } from \"react\";\nimport s from \"./profileStatus.module.css\";\nimport { UilCommentAltEdit } from \"@iconscout/react-unicons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { getUserStatusTC } from \"../../store/reducers/profileReducer\";\n\nconst ProfileStatus = (props: { userId?: number }) => {\n  const dispatch = useDispatch();\n\n  const userStatus = useSelector<RootState, string>((state) =>\n    state.profilePage.profile.status ? state.profilePage.profile.status : \"\"\n  );\n\n  useEffect(() => {\n    if (props.userId) {\n      dispatch(getUserStatusTC(props.userId));\n    }\n  }, [props.userId, dispatch]);\n\n  return (\n    <div className={s.profileStatusWrapper}>\n      <UilCommentAltEdit size={40} />\n      <p>{userStatus}</p>\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hooks/useAppDispatch.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hooks/useAppSelector.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/appReducer.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/sideBarReducer.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/FeedPosts/FeedPosts.tsx",["255"],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/FeedRightSideBar/FeedRightSideBar.tsx",["256","257"],[],"import React from \"react\";\nimport s from \"./feedRightSideBar.module.css\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { UilPlus } from \"@iconscout/react-unicons\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\nimport RequestUserCard from \"../RequestUserCard/RequestUserCard\";\nimport FriendMiniature from \"../FriendMiniature/FriendMiniature\";\n\nconst FeedRightSideBar = () => {\n  const isAuthorized = useAppSelector((state) => state.auth.isAuthorized);\n\n  return (\n    <div className={s.feedPageRightSideBarContainer}>\n      <div className={s.feedPageRightSideBarRequestsContainer}>\n        <h4>Requests</h4>\n        {isAuthorized ? (\n          <div>\n            <RequestUserCard />\n            <RequestUserCard />\n            <RequestUserCard />\n            <RequestUserCard />\n            <RequestUserCard />\n            <RequestUserCard />\n          </div>\n        ) : (\n          \"...\"\n        )}\n      </div>\n      <div className={s.feedPageRightSideBarFriendsContainer}>\n        <h4>Friends</h4>\n        {isAuthorized ? (\n          <div>\n            <FriendMiniature />\n            <FriendMiniature />\n            <FriendMiniature />\n            <FriendMiniature />\n            <FriendMiniature />\n          </div>\n        ) : (\n          \"...\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FeedRightSideBar;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/feedReducer.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/api/postsAPI.ts",["258","259"],[],"import axios from \"axios\";\nimport { PostType } from \"../store/reducers/feedReducer\";\nimport { v1 } from \"uuid\";\n\nconst postsApiInstance = axios.create({\n  baseURL: \"https://jsonplaceholder.typicode.com/\",\n  headers: {},\n});\n\nexport const postsAPI = {\n  getPosts: () => {\n    return postsApiInstance.get(\"posts\");\n  },\n  addPost: (id: number, userId: number, title: string, body: string) => {\n    return postsApiInstance.post(\"posts\", {id, userId, title, body});\n  },\n};\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/AddPostContainer/AddPostContainer.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/RequestUserCard/RequestUserCard.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/FriendMiniature/FriendMiniature.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/userNameGenerator.ts",[],[],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":17},{"ruleId":"264","severity":1,"message":"268","line":4,"column":17,"nodeType":"266","messageId":"267","endLine":4,"endColumn":26},{"ruleId":"260","replacedBy":"269"},{"ruleId":"262","replacedBy":"270"},{"ruleId":"264","severity":1,"message":"271","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":12},{"ruleId":"260","replacedBy":"272"},{"ruleId":"262","replacedBy":"273"},{"ruleId":"264","severity":1,"message":"274","line":7,"column":3,"nodeType":"266","messageId":"267","endLine":7,"endColumn":13},{"ruleId":"264","severity":1,"message":"275","line":11,"column":3,"nodeType":"266","messageId":"267","endLine":11,"endColumn":13},{"ruleId":"264","severity":1,"message":"276","line":18,"column":8,"nodeType":"266","messageId":"267","endLine":18,"endColumn":20},{"ruleId":"264","severity":1,"message":"277","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"278","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":15},{"ruleId":"264","severity":1,"message":"279","line":13,"column":3,"nodeType":"266","messageId":"267","endLine":13,"endColumn":21},{"ruleId":"264","severity":1,"message":"280","line":14,"column":3,"nodeType":"266","messageId":"267","endLine":14,"endColumn":13},{"ruleId":"264","severity":1,"message":"281","line":15,"column":3,"nodeType":"266","messageId":"267","endLine":15,"endColumn":17},{"ruleId":"264","severity":1,"message":"282","line":18,"column":10,"nodeType":"266","messageId":"267","endLine":18,"endColumn":16},{"ruleId":"264","severity":1,"message":"283","line":19,"column":8,"nodeType":"266","messageId":"267","endLine":19,"endColumn":13},{"ruleId":"264","severity":1,"message":"284","line":20,"column":8,"nodeType":"266","messageId":"267","endLine":20,"endColumn":14},{"ruleId":"264","severity":1,"message":"285","line":23,"column":10,"nodeType":"266","messageId":"267","endLine":23,"endColumn":27},{"ruleId":"264","severity":1,"message":"286","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":18},{"ruleId":"264","severity":1,"message":"287","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":15},{"ruleId":"264","severity":1,"message":"288","line":9,"column":3,"nodeType":"266","messageId":"267","endLine":9,"endColumn":13},{"ruleId":"264","severity":1,"message":"289","line":10,"column":3,"nodeType":"266","messageId":"267","endLine":10,"endColumn":14},{"ruleId":"264","severity":1,"message":"290","line":13,"column":8,"nodeType":"266","messageId":"267","endLine":13,"endColumn":16},{"ruleId":"264","severity":1,"message":"282","line":14,"column":10,"nodeType":"266","messageId":"267","endLine":14,"endColumn":16},{"ruleId":"264","severity":1,"message":"291","line":19,"column":9,"nodeType":"266","messageId":"267","endLine":19,"endColumn":21},{"ruleId":"264","severity":1,"message":"292","line":26,"column":9,"nodeType":"266","messageId":"267","endLine":26,"endColumn":19},{"ruleId":"264","severity":1,"message":"293","line":1,"column":21,"nodeType":"266","messageId":"267","endLine":1,"endColumn":30},{"ruleId":"264","severity":1,"message":"277","line":1,"column":32,"nodeType":"266","messageId":"267","endLine":1,"endColumn":40},{"ruleId":"264","severity":1,"message":"294","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":10},{"ruleId":"264","severity":1,"message":"295","line":10,"column":10,"nodeType":"266","messageId":"267","endLine":10,"endColumn":24},{"ruleId":"264","severity":1,"message":"296","line":12,"column":10,"nodeType":"266","messageId":"267","endLine":12,"endColumn":24},{"ruleId":"264","severity":1,"message":"297","line":13,"column":10,"nodeType":"266","messageId":"267","endLine":13,"endColumn":25},{"ruleId":"260","replacedBy":"298"},{"ruleId":"262","replacedBy":"299"},{"ruleId":"264","severity":1,"message":"300","line":4,"column":3,"nodeType":"266","messageId":"267","endLine":4,"endColumn":17},{"ruleId":"264","severity":1,"message":"301","line":5,"column":3,"nodeType":"266","messageId":"267","endLine":5,"endColumn":19},{"ruleId":"264","severity":1,"message":"294","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":10},{"ruleId":"264","severity":1,"message":"302","line":12,"column":10,"nodeType":"266","messageId":"267","endLine":12,"endColumn":18},{"ruleId":"264","severity":1,"message":"303","line":14,"column":10,"nodeType":"266","messageId":"267","endLine":14,"endColumn":23},{"ruleId":"264","severity":1,"message":"296","line":5,"column":3,"nodeType":"266","messageId":"267","endLine":5,"endColumn":17},{"ruleId":"264","severity":1,"message":"304","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":30},{"ruleId":"264","severity":1,"message":"305","line":9,"column":3,"nodeType":"266","messageId":"267","endLine":9,"endColumn":22},{"ruleId":"264","severity":1,"message":"306","line":10,"column":3,"nodeType":"266","messageId":"267","endLine":10,"endColumn":22},{"ruleId":"264","severity":1,"message":"276","line":1,"column":8,"nodeType":"266","messageId":"267","endLine":1,"endColumn":20},{"ruleId":"264","severity":1,"message":"307","line":4,"column":3,"nodeType":"266","messageId":"267","endLine":4,"endColumn":13},{"ruleId":"264","severity":1,"message":"308","line":6,"column":3,"nodeType":"266","messageId":"267","endLine":6,"endColumn":16},{"ruleId":"264","severity":1,"message":"309","line":7,"column":3,"nodeType":"266","messageId":"267","endLine":7,"endColumn":14},{"ruleId":"264","severity":1,"message":"293","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":12},{"ruleId":"264","severity":1,"message":"310","line":21,"column":24,"nodeType":"266","messageId":"267","endLine":21,"endColumn":28},{"ruleId":"264","severity":1,"message":"311","line":8,"column":10,"nodeType":"266","messageId":"267","endLine":8,"endColumn":23},{"ruleId":"264","severity":1,"message":"312","line":9,"column":10,"nodeType":"266","messageId":"267","endLine":9,"endColumn":15},{"ruleId":"264","severity":1,"message":"313","line":27,"column":5,"nodeType":"266","messageId":"267","endLine":27,"endColumn":10},{"ruleId":"264","severity":1,"message":"277","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"264","severity":1,"message":"314","line":1,"column":27,"nodeType":"266","messageId":"267","endLine":1,"endColumn":37},{"ruleId":"264","severity":1,"message":"277","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"315","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":15},{"ruleId":"264","severity":1,"message":"316","line":4,"column":10,"nodeType":"266","messageId":"267","endLine":4,"endColumn":17},{"ruleId":"264","severity":1,"message":"317","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":18},{"ruleId":"264","severity":1,"message":"271","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":12},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"@typescript-eslint/no-unused-vars","'SideBar' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.",["318"],["319"],"'v1' is defined but never used.",["318"],["319"],"'UilMessage' is defined but never used.","'UilSetting' is defined but never used.","'useSelection' is defined but never used.","'useState' is defined but never used.","'followUserAC' is defined but never used.","'setTotalUsersCount' is defined but never used.","'setUsersAC' is defined but never used.","'unfollowUserAC' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'styled' is defined but never used.","'useSessionStorage' is defined but never used.","'DialogItem' is defined but never used.","'Message' is defined but never used.","'DialogType' is defined but never used.","'MessageType' is defined but never used.","'TextArea' is defined but never used.","'dialogsState' is assigned a value but never used.","'addMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'UilUser' is defined but never used.","'useAppDispatch' is defined but never used.","'socialMediaAPI' is defined but never used.","'ProfileInfoType' is defined but never used.",["318"],["319"],"'UilCommentDots' is defined but never used.","'UilDraggabledots' is defined but never used.","'Redirect' is defined but never used.","'authStateType' is defined but never used.","'SetLoggedUserDataActionType' is defined but never used.","'getLoggedUserDataTC' is defined but never used.","'setLoggedUserDataAC' is defined but never used.","'ReactChild' is defined but never used.","'ReactFragment' is defined but never used.","'ReactPortal' is defined but never used.","'rest' is assigned a value but never used.","'SubmitHandler' is defined but never used.","'spawn' is defined but never used.","'watch' is assigned a value but never used.","'MouseEvent' is defined but never used.","'miniAva' is defined but never used.","'UilPlus' is defined but never used.","'PostType' is defined but never used.","no-global-assign","no-unsafe-negation"]