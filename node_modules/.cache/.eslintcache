[{"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/index.tsx":"1","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/App.tsx":"2","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Footer.tsx":"3","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/store.ts":"4","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/sideBarReducer.ts":"5","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/dialogsReducer.ts":"6","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/profileReducer.ts":"7","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/TextArea.tsx":"8","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/Button.tsx":"9","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/usersReducer.ts":"10","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Header/Header.tsx":"11","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/SideBar/SideBar.tsx":"12","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx":"13","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx":"14","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/DialogsPage/DialogsPage.tsx":"15","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/DialogItem.tsx":"16","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Message.tsx":"17","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Post/Post.tsx":"18","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/api/socialMediaAPI.ts":"19","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/Preloader.tsx":"20","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/ProfilePage/ProfilePage.tsx":"21","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/authReducer.ts":"22","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hoc/LoginRedirect.tsx":"23","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/LoginPage/LoginPage.tsx":"24","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/ProfileStatus/ProfileStatus.tsx":"25","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hooks/useAppDispatch.ts":"26","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hooks/useAppSelector.ts":"27","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/appReducer.ts":"28"},{"size":384,"mtime":1691435388047,"results":"29","hashOfConfig":"30"},{"size":2191,"mtime":1692206207023,"results":"31","hashOfConfig":"30"},{"size":96,"mtime":1689349593974,"results":"32","hashOfConfig":"30"},{"size":1009,"mtime":1692205233558,"results":"33","hashOfConfig":"30"},{"size":400,"mtime":1691490226358,"results":"34","hashOfConfig":"30"},{"size":1044,"mtime":1689446249243,"results":"35","hashOfConfig":"30"},{"size":2512,"mtime":1692205031558,"results":"36","hashOfConfig":"30"},{"size":453,"mtime":1689442790427,"results":"37","hashOfConfig":"30"},{"size":391,"mtime":1689442321075,"results":"38","hashOfConfig":"30"},{"size":5229,"mtime":1691523313095,"results":"39","hashOfConfig":"30"},{"size":2281,"mtime":1692188407630,"results":"40","hashOfConfig":"30"},{"size":2007,"mtime":1692206921023,"results":"41","hashOfConfig":"30"},{"size":3807,"mtime":1692204482391,"results":"42","hashOfConfig":"30"},{"size":3682,"mtime":1691528518642,"results":"43","hashOfConfig":"30"},{"size":978,"mtime":1691528887566,"results":"44","hashOfConfig":"30"},{"size":500,"mtime":1689355832675,"results":"45","hashOfConfig":"30"},{"size":325,"mtime":1689356077283,"results":"46","hashOfConfig":"30"},{"size":1028,"mtime":1689801709995,"results":"47","hashOfConfig":"30"},{"size":1317,"mtime":1692211517617,"results":"48","hashOfConfig":"30"},{"size":1013,"mtime":1691528723779,"results":"49","hashOfConfig":"30"},{"size":2847,"mtime":1692206005607,"results":"50","hashOfConfig":"30"},{"size":1947,"mtime":1692211696669,"results":"51","hashOfConfig":"30"},{"size":815,"mtime":1692200686573,"results":"52","hashOfConfig":"30"},{"size":1784,"mtime":1692211732131,"results":"53","hashOfConfig":"30"},{"size":882,"mtime":1692200443003,"results":"54","hashOfConfig":"30"},{"size":313,"mtime":1692204246922,"results":"55","hashOfConfig":"30"},{"size":189,"mtime":1692204244085,"results":"56","hashOfConfig":"30"},{"size":896,"mtime":1692205834871,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"5rhgh5",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"61"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"61"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"61"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"61"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/index.tsx",[],[],["156","157"],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/App.tsx",["158","159"],[],"import React, { FC, useEffect } from \"react\";\nimport \"./App.css\";\nimport { SideBar } from \"./components/SideBar/SideBar\";\nimport { Route, useParams } from \"react-router-dom\";\nimport FeedPage from \"./pages/FeedPage/FeedPage\";\nimport { DialogsPage } from \"./pages/DialogsPage/DialogsPage\";\nimport UsersPage from \"./pages/UsersPage/UsersPage\";\nimport { Header } from \"./components/Header/Header\";\nimport ProfilePage from \"./pages/ProfilePage/ProfilePage\";\nimport LoginRedirect from \"./utils/hoc/LoginRedirect\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport { useDispatch } from \"react-redux\";\nimport { meTC } from \"./store/reducers/authReducer\";\nimport { useAppSelector } from \"./utils/hooks/useAppSelector\";\nimport { getLoggedUserDataTC } from \"./store/reducers/appReducer\";\n\ntype AppProps = {};\n\nconst App: FC<AppProps> = (props) => {\n  const dispatch = useDispatch();\n  const loggedUserId = useAppSelector((state) => state.auth.data.id);\n  const isAuthorized = useAppSelector((state) => state.auth.isAuthorized);\n\n  useEffect(() => {\n    dispatch(meTC());\n  }, [dispatch]);\n\n  if (isAuthorized && loggedUserId) {\n    dispatch(getLoggedUserDataTC(loggedUserId));\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Route exact path={\"/\"} render={() => <FeedPage />} />\n        <Route path={\"/feed\"} render={() => <FeedPage />} />\n        <Route\n          path={\"/profile/:userId\"}\n          render={() => (\n            <LoginRedirect>\n              <ProfilePage />\n            </LoginRedirect>\n          )}\n        />\n        <Route\n          exact\n          path={\"/profile\"}\n          render={() => (\n            <LoginRedirect>\n              <ProfilePage />\n            </LoginRedirect>\n          )}\n        />\n        <Route\n          path={\"/dialogs\"}\n          render={() => (\n            <LoginRedirect>\n              <DialogsPage />\n            </LoginRedirect>\n          )}\n        />\n        <Route path={\"/friends\"} render={() => <UsersPage />} />\n        <Route path={\"/login\"} render={() => <LoginPage />} />\n        {/* <Route path={\"/404\"} render={() => <GlbalAppError />} /> */}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Footer.tsx",[],[],["160","161"],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/store.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/sideBarReducer.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/dialogsReducer.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/profileReducer.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/TextArea.tsx",[],[],["162","163"],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/Button.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/usersReducer.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Header/Header.tsx",["164","165","166"],[],"import React, { useEffect } from \"react\";\nimport s from \"./header.module.css\";\nimport {\n  UilBell,\n  UilEnvelope,\n  UilHome,\n  UilMessage,\n  UilNewspaper,\n  UilPlay,\n  UilSearch,\n  UilSetting,\n  UilUser,\n  UilUsersAlt,\n  UilYinYang,\n} from \"@iconscout/react-unicons\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { NavLink } from \"react-router-dom\";\nimport useSelection from \"antd/lib/table/hooks/useSelection\";\nimport { RootState } from \"../../store/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { meTC } from \"../../store/reducers/authReducer\";\n\nexport const Header = () => {\n  const isAuthorized = useSelector<RootState, boolean>(\n    (state) => state.auth.isAuthorized\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(meTC());\n  }, [dispatch]);\n\n  return (\n    <header className={s.headerWrapper}>\n      <div className={s.headerContainer}>\n        <div className={s.headerLeftSideContainer}>\n          <div className={s.headerIconContainer}>\n            <UilYinYang size={50} />\n          </div>\n          <div className={s.headerSearchContainer}>\n            <UilSearch />\n            <input type=\"text\" placeholder=\"Search...\" />\n          </div>\n        </div>\n        <div className={s.headerNavigation}>\n          <ul>\n            <li>\n              <NavLink to={\"/\"}>\n                <UilHome size={30} />\n              </NavLink>\n            </li>\n            <li>\n              <UilNewspaper size={30} />\n            </li>\n            <li>\n              <UilUsersAlt size={30} />\n            </li>\n            <li>\n              <UilPlay size={30} />\n            </li>\n          </ul>\n        </div>\n        <div className={s.headerProfileSettings}>\n          <ul>\n            <li>\n              <UilEnvelope />\n            </li>\n            <li>\n              <UilBell />\n            </li>\n            {isAuthorized ? (\n              <li className={s.headerUserImage}>\n                <img src={miniAva} alt=\"\" />\n              </li>\n            ) : (\n              <li className={s.headerLoginButton}>\n                <NavLink to={\"/login\"}>\n                  <UilUser />\n                </NavLink>\n              </li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </header>\n  );\n};\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/SideBar/SideBar.tsx",["167","168","169","170"],[],"import React, { FC } from \"react\";\nimport s from \"./sideBar.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UilHome,\n  UilOperaAlt,\n  UilPolygon,\n  UilUser,\n} from \"@iconscout/react-unicons\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\n\ntype SideBarProps = {};\n\nexport const SideBar: FC<SideBarProps> = (props) => {\n  const sideBarData = useAppSelector((state) => state.sideBar);\n  const isAuthorized = useAppSelector((state) => state.auth.isAuthorized);\n  const loggedUserData = useAppSelector((state) => state.app);\n\n  const sideBarUserPhotoRender = () => {\n    return isAuthorized ? (\n      loggedUserData.photos?.small ? (\n        loggedUserData.photos.small\n      ) : (\n        <img src={miniAva} alt=\"\" />\n      )\n    ) : (\n      <UilUser />\n    );\n  };\n\n  const sideBarUserNameRender = () => {\n    return isAuthorized ? loggedUserData.fullName : \"login / create an accaunt\"\n  }\n\n  const sideBarUserLinkRender = () => {\n    return isAuthorized ? `@${loggedUserData.fullName}:${loggedUserData.userId}` : \"\"\n  }\n\n  const navigationItemsForRender = sideBarData.map((navI) => {\n    return (\n      <NavLink\n        to={`/${navI.link}`}\n        key={navI.link}\n        className={s.sideBarItem}\n        activeClassName={s.sideBarItemActive}\n      >\n        <UilHome size={30} />\n        {navI.title}\n      </NavLink>\n    );\n  });\n  return (\n    <div className={s.sideBarContainer}>\n      <div className={s.sideBarUserContainer}>\n        <div className={s.sideBarUserImage}>{sideBarUserPhotoRender()}</div>\n        <div className={s.sideBarUserInfo}>\n          <p>{sideBarUserNameRender()}</p>\n          <NavLink to={\"/profile\"}>{sideBarUserLinkRender()}</NavLink>\n        </div>\n      </div>\n      <hr className={s.separator} />\n      <div className={s.sideBarList}>{navigationItemsForRender}</div>\n    </div>\n  );\n};\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/FeedPage/FeedPage.tsx",["171"],[],"import React, { FC, useState } from \"react\";\nimport s from \"./feedPage.module.css\";\nimport Post from \"../../components/Post/Post\";\nimport {\n  addPostAC,\n} from \"../../store/reducers/profileReducer\";\nimport {\n  UilArrowRight,\n  UilEmoji,\n  UilImage,\n  UilPlus,\n  UilSmile,\n  UilUser,\n  UilVideo,\n} from \"@iconscout/react-unicons\";\nimport { SideBar } from \"../../components/SideBar/SideBar\";\nimport miniAva from \"../../assets/UserImageSample.jpg\";\nimport { useAppSelector } from \"../../utils/hooks/useAppSelector\";\nimport { useAppDispatch } from \"../../utils/hooks/useAppDispatch\";\n\ntype FeedPageProps = {};\n\nconst FeedPage: FC<FeedPageProps> = (props) => {\n  const profilePageData = useAppSelector(state => state.profilePage);\n  const dispatch = useAppDispatch();\n  const isAuthorized = useAppSelector(state => state.auth.isAuthorized)\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addPost = () => {\n    dispatch(addPostAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  \n\n  return (\n    <div className={s.feedPageWrapper}>\n      <div className={s.feedPageSideBar}>\n        <SideBar />\n      </div>\n      <div className={s.feedPageContainer}>\n        <div className={s.feedPageAddPostContainer}>\n          <div className={s.feedPageAddPostHeaderContainer}>\n            <div className={s.feedPageAddPostHeaderUserImage}>\n              <UilUser />\n            </div>\n            <div className={s.feedPageAddPostHeaderTextareaContainer}>\n              <textarea\n                placeholder=\"Write the new post...\"\n                value={textAreaValue}\n                onChange={(e) => setTextAreaValue(e.currentTarget.value)}\n              />\n              <div\n                className={s.feedPageAddPostHeaderTextAreaActionBtnsContainer}\n              >\n                <UilSmile />\n                <UilArrowRight onClick={addPost} />\n              </div>\n            </div>\n          </div>\n          <div className={s.feedPageAddPostReactionsContainer}>\n            <ul>\n              <li>\n                <UilVideo />\n                <p>Live</p>\n              </li>\n              <li>\n                <UilImage />\n                <p>Photo/Video</p>\n              </li>\n              <li>\n                <UilEmoji />\n                <p>Activity</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className={s.feedPagePostsListContainer}>\n          {profilePageData.posts.map((post) => [\n            <Post postText={post.postText} />,\n          ])}\n        </div>\n      </div>\n      <div className={s.feedPageRightSideBarContainer}>\n        <div className={s.feedPageRightSideBarRequestsContainer}>\n          <h4>Requests</h4>\n          <div className={s.feedPageRightSideBarRequestsUserCardContainer}>\n            <div className={s.feedPageRightSideBarRequestsUserCardInfo}>\n              <div className={s.feedPageRightSideBarRequestsUserCardImage}>\n                <img src={miniAva} alt=\"\" />\n              </div>\n              <div className={s.feedPageRightSideBarRequestsUserCardText}>\n                <p>User Name</p>\n                <p>@userlink</p>\n              </div>\n            </div>\n            <div className={s.feedPageRightSideBarRequestsUserCardButtons}>\n              <button className={s.confirmButton}>Confirm</button>\n              <button className={s.ignoreButton}>Ignore</button>\n            </div>\n          </div>\n        </div>\n        <div className={s.feedPageRightSideBarFriendsContainer}>\n          <h4>Friends</h4>\n          <div className={s.feedPageRightSideBarFriendCard}>\n            <div>\n              <img src={miniAva} alt=\"\" />\n              <p>User Name</p>\n            </div>\n            <UilPlus />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedPage;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/UsersPage/UsersPage.tsx",["172","173","174","175","176","177","178","179","180"],[],"import React, { useEffect, useState } from \"react\";\nimport s from \"./usersPage.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  UserPageType,\n  currentPageChangerAC,\n  followUserAC,\n  followUserTC,\n  getUsersTC,\n  nextPagesPaginationAC,\n  previousPagesPaginationAC,\n  setTotalUsersCount,\n  setUsersAC,\n  unfollowUserAC,\n  unfollowUserTC,\n} from \"../../store/reducers/usersReducer\";\nimport { Button } from \"../../shared/Button\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { UilArrowLeft, UilArrowRight } from \"@iconscout/react-unicons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSessionStorage } from \"usehooks-ts\";\nimport Preloader from \"../../shared/Preloader\";\n\nconst UsersPage = () => {\n  //getting data from redux\n  const usersPageData = useSelector<RootState, UserPageType>(\n    (state) => state.usersPage\n  );\n  const dispatch = useDispatch();\n\n  //API \"get\" call\n  useEffect(() => {\n    dispatch(getUsersTC(usersPageData.currentPage, usersPageData.pageSize));\n  }, [dispatch, usersPageData.currentPage, usersPageData.pageSize]);\n\n  const usersForRender = usersPageData.users.items.map((user) => {\n    return (\n      <div className={s.userPageUserCardContainer}>\n        <NavLink to={`profile/${user.id}`}>\n          <img\n            src={\n              user.photos.large\n                ? user.photos.large\n                : \"https://uxwing.com/wp-content/themes/uxwing/download/peoples-avatars/corporate-user-icon.png\"\n            }\n            alt=\"\"\n          />\n        </NavLink>\n        <h3>{user.name}</h3>\n        <div className={s.userPageCardButtonsContainer}>\n          <button\n            className={s.followButton}\n            onClick={() => followButtonHandler(user.followed, user.id)}\n            disabled={user.followed ? true : false}\n          >\n            Follow\n          </button>\n          <button\n            className={s.unfollowButton}\n            onClick={() => unfollowButtonHandler(user.followed, user.id)}\n            disabled={user.followed ? false : true}\n          >\n            Unfollow\n          </button>\n        </div>\n      </div>\n    );\n  });\n\n  //pagination\n  const pagesForRender = usersPageData.paginationCount.map((page) => {\n    return (\n      <div\n        className={s.userPagePaginationItem}\n        onClick={() => changePageHandler(page)}\n      >\n        {page}\n      </div>\n    );\n  });\n\n  const pagesCount = Math.ceil(\n    usersPageData.totalUsersCount / usersPageData.pageSize\n  );\n\n  const changePageHandler = (page: number) => {\n    dispatch(currentPageChangerAC(page));\n  };\n\n  const nextPages = () => {\n    dispatch(nextPagesPaginationAC(pagesCount));\n  };\n  const previousPages = () => {\n    dispatch(previousPagesPaginationAC(pagesCount));\n  };\n\n  //follow / unfollow\n  const followButtonHandler = (isFollowed: boolean, userId: number) => {\n    dispatch(followUserTC(userId));\n  };\n  const unfollowButtonHandler = (isFollowed: boolean, userId: number) => {\n    dispatch(unfollowUserTC(userId));\n  };\n\n  return usersPageData.isFetching ? (\n    <Preloader />\n  ) : (\n    <div className={s.userPageContainer}>\n      <div className={s.userPageUsersListContainer}>{usersForRender}</div>\n      <div className={s.userPagePaginationContainer}>\n        <div\n          className={s.userPagePaginationChangeButton}\n          onClick={previousPages}\n        >\n          <UilArrowLeft />\n        </div>\n        {pagesForRender}\n        <div className={s.userPagePaginationChangeButton} onClick={nextPages}>\n          <UilArrowRight />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersPage;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/DialogsPage/DialogsPage.tsx",["181","182","183","184","185","186","187","188"],[],"import React, { FC, useState } from \"react\";\nimport s from \"./dialogPage.module.css\";\nimport DialogItem from \"../../components/DialogItem\";\nimport Message from \"../../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport {\n  DialogPageType,\n  DialogType,\n  MessageType,\n  addMessageAC,\n} from \"../../store/reducers/dialogsReducer\";\nimport TextArea from \"../../shared/TextArea\";\nimport { Button } from \"../../shared/Button\";\n\ntype DialogsPageProps = {};\n\nexport const DialogsPage: FC<DialogsPageProps> = (props) => {\n  const dialogsState = useSelector<RootState, DialogPageType>(\n    (state) => state.dialogsPage\n  );\n  const dispatch = useDispatch();\n\n  const [textAreaValue, setTextAreaValue] = useState<string>(\"\");\n\n  const addMessage = () => {\n    dispatch(addMessageAC(textAreaValue));\n    setTextAreaValue(\"\");\n  };\n\n  return <div className={s.dialogPageContainer}>\n    Dialog Page\n  </div>;\n};\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/DialogItem.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Message.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/Post/Post.tsx",["189","190"],[],"import React, { FC } from 'react';\nimport s from \"./post.module.css\"\nimport { UilClosedCaptioningSlash, UilComment, UilElipsisDoubleVAlt, UilPresentationEdit, UilThumbsDown, UilThumbsUp, UilUser } from '@iconscout/react-unicons';\n\ntype PostProps = {\n    postText: string\n}\n\nconst Post: FC<PostProps> = (props) => {\n    const {postText} = props\n    return (\n        <div className={s.postWrapper}>\n            <div className={s.postHeader}>\n                <div className={s.postHeaderUserName}>\n                    <UilUser />\n                    <h3>User Name</h3>\n                </div>\n                <div className={s.postHeaderOptions}>\n                    <UilElipsisDoubleVAlt />\n                </div>\n            </div>\n            <div className={s.postBody}>\n                <p>{postText}</p>\n            </div>\n            <div className={s.postShare}>\n                <UilComment />\n                <UilThumbsUp />\n                <UilThumbsDown />\n            </div>\n        </div>\n    );\n};\n\nexport default Post;","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/api/socialMediaAPI.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/shared/Preloader.tsx",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/ProfilePage/ProfilePage.tsx",["191","192","193","194","195"],[],"import React, { useEffect } from \"react\";\nimport s from \"./profilePage.module.css\";\nimport {\n  UilCommentDots,\n  UilDraggabledots,\n  UilEdit,\n  UilSliderHRange,\n  UilUser,\n} from \"@iconscout/react-unicons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { setUserProfileTC } from \"../../store/reducers/profileReducer\";\nimport { authStateType } from \"../../store/reducers/authReducer\";\nimport ProfileStatus from \"../../components/ProfileStatus/ProfileStatus\";\n\nconst ProfilePage = () => {\n  const dispatch = useDispatch();\n  const profilePageData = useSelector((state: RootState) => state.profilePage);\n  const { userId } = useParams<{ userId: string }>();\n  let myId = useSelector<RootState, number | undefined>(\n    (state) => state.auth.data?.id\n  );\n\n  useEffect(() => {\n    if (!userId) {\n      if (myId) {\n        dispatch(setUserProfileTC(myId));\n      }\n    } else {\n      dispatch(setUserProfileTC(Number(userId)));\n    }\n  }, [dispatch, userId, myId]);\n\n  return (\n    <div className={s.profilePageContainer}>\n      <div className={s.profilePageHeaderContainer}>\n        <img\n          src={\n            \"https://images.unsplash.com/photo-1620121692029-d088224ddc74?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8bWFjJTIwb3MlMjB3YWxscGFwZXJ8ZW58MHx8MHx8fDA%3D&w=1000&q=80\"\n          }\n          alt=\"\"\n        />\n        <div className={s.profilePageHeaderProfileInfo}>\n          <div className={s.profilePageHeaderProfileInfoLeftContainer}>\n            <div className={s.profilePageHeaderProfileInfoUserImage}>\n              <img\n                src={\n                  profilePageData.profile.photos?.large\n                    ? profilePageData.profile.photos?.large\n                    : \"https://www.pngmart.com/files/22/User-Avatar-Profile-PNG.png\"\n                }\n                alt=\"\"\n              />\n            </div>\n            <div className={s.profilePageHeaderProfileInfoUserName}>\n              <h2>{profilePageData.profile.fullName}</h2>\n              <p>followers: nnn</p>\n            </div>\n          </div>\n          <div className={s.profilePageHeaderProfileInfoRightContainer}>\n            <button className={s.editButton}>\n              <UilEdit />\n              Edit Profile\n            </button>\n            <button className={s.moreActionsButton}>\n              <UilSliderHRange />\n            </button>\n          </div>\n        </div>\n        <ProfileStatus userId={profilePageData.profile.userId}/>\n        <hr />\n        <div className={s.profilePageHeaderNavigation}>\n          <ul>\n            <li>Posts</li>\n            <li>About</li>\n            <li>Photos</li>\n            <li>Events</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/authReducer.ts",["196","197","198","199"],[],"import { Dispatch } from \"redux\";\nimport {\n  LoginDataType,\n  authApi,\n  socialMediaAPI,\n} from \"../../api/socialMediaAPI\";\nimport {\n  SetLoggedUserDataActionType,\n  getLoggedUserDataTC,\n  setLoggedUserDataAC,\n} from \"./appReducer\";\n\nconst initialState: authStateType = {\n  isAuthorized: false,\n  data: {},\n};\n\nexport const authReducer = (state = initialState, action: ActionsType) => {\n  switch (action.type) {\n    case \"auth/me\":\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          ...action.data,\n        },\n        isAuthorized: true,\n      };\n    case \"auth/login\": {\n      return {\n        ...state,\n        isAuthorized: action.isAuthorized,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const meAC = (data: {\n  userId: number;\n  email: string;\n  login: string;\n}) => {\n  return { type: \"auth/me\", data } as const;\n};\nexport const loginAC = () => {\n  return { type: \"auth/login\", isAuthorized: true } as const;\n};\n\nexport const meTC = () => (dispatch: Dispatch<ActionsType>) => {\n  authApi\n    .me()\n    .then((res) => {\n      if (res.data.resultCode === 0) {\n        dispatch(meAC(res.data.data));\n      } else {\n        console.log(res.data.messages);\n      }\n    })\n    .catch((err) => {\n      console.log((err as { message: string }).message);\n    });\n};\n\nexport const loginTC = (data: LoginDataType) => (dispatch: Dispatch) => {\n  authApi\n    .login(data)\n    .then((res) => {\n      if (res.data.resultCode === 0) {\n        dispatch(loginAC());\n      } else {\n        console.log(res.data.messages);\n      }\n    })\n    .catch((err) => {\n      console.log((err as { message: string }).message);\n    });\n};\n\nexport type authStateType = {\n  isAuthorized: boolean;\n  data: {\n    id?: number;\n    email?: string;\n    login?: string;\n  };\n};\n\ntype MeActionType = ReturnType<typeof meAC>;\ntype LoginActionType = ReturnType<typeof loginAC>;\n\ntype ActionsType = MeActionType | LoginActionType;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hoc/LoginRedirect.tsx",["200","201","202","203","204","205"],[],"import useSelection from \"antd/lib/table/hooks/useSelection\";\nimport React, {\n  JSXElementConstructor,\n  ReactChild,\n  ReactElement,\n  ReactFragment,\n  ReactPortal,\n  useEffect,\n} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { Redirect } from \"react-router-dom\";\n\ntype ReactNode = ReactElement<any, string | JSXElementConstructor<any>>;\n\ntype LoginRedirectProps = {\n  children: ReactNode;\n};\n\nfunction LoginRedirect(props: LoginRedirectProps): ReactNode {\n  const { children, ...rest } = props;\n\n  const isAuthorized = useSelector<RootState, boolean>(\n    (state) => state.auth.isAuthorized\n  );\n\n  console.log(isAuthorized);\n  \n\n  if (!isAuthorized) {\n    return <Redirect to={`/login`} />;\n  }\n\n  return children;\n}\n\nexport default LoginRedirect;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/pages/LoginPage/LoginPage.tsx",["206","207","208"],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/components/ProfileStatus/ProfileStatus.tsx",["209","210"],[],"import React, { useState, MouseEvent, useEffect } from \"react\";\nimport s from \"./profileStatus.module.css\";\nimport { UilCommentAltEdit } from \"@iconscout/react-unicons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../store/store\";\nimport { getUserStatusTC } from \"../../store/reducers/profileReducer\";\n\nconst ProfileStatus = (props: { userId?: number }) => {\n  const dispatch = useDispatch();\n\n  const userStatus = useSelector<RootState, string>((state) =>\n    state.profilePage.profile.status ? state.profilePage.profile.status : \"\"\n  );\n\n  useEffect(() => {\n    if (props.userId) {\n      dispatch(getUserStatusTC(props.userId));\n    }\n  }, [props.userId, dispatch]);\n\n  return (\n    <div className={s.profileStatusWrapper}>\n      <UilCommentAltEdit size={40} />\n      <p>{userStatus}</p>\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hooks/useAppDispatch.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/utils/hooks/useAppSelector.ts",[],[],"/Users/danilnagovicyn/Desktop/reactprojects/Incubator/Samurai_way/samurai-way/src/store/reducers/appReducer.ts",[],[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":17},{"ruleId":"215","severity":1,"message":"219","line":4,"column":17,"nodeType":"217","messageId":"218","endLine":4,"endColumn":26},{"ruleId":"211","replacedBy":"220"},{"ruleId":"213","replacedBy":"221"},{"ruleId":"211","replacedBy":"222"},{"ruleId":"213","replacedBy":"223"},{"ruleId":"215","severity":1,"message":"224","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":13},{"ruleId":"215","severity":1,"message":"225","line":11,"column":3,"nodeType":"217","messageId":"218","endLine":11,"endColumn":13},{"ruleId":"215","severity":1,"message":"226","line":18,"column":8,"nodeType":"217","messageId":"218","endLine":18,"endColumn":20},{"ruleId":"215","severity":1,"message":"227","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":21},{"ruleId":"215","severity":1,"message":"228","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"229","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":14},{"ruleId":"215","severity":1,"message":"230","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":13},{"ruleId":"215","severity":1,"message":"231","line":26,"column":9,"nodeType":"217","messageId":"218","endLine":26,"endColumn":21},{"ruleId":"215","severity":1,"message":"232","line":1,"column":28,"nodeType":"217","messageId":"218","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"233","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":15},{"ruleId":"215","severity":1,"message":"234","line":13,"column":3,"nodeType":"217","messageId":"218","endLine":13,"endColumn":21},{"ruleId":"215","severity":1,"message":"235","line":14,"column":3,"nodeType":"217","messageId":"218","endLine":14,"endColumn":13},{"ruleId":"215","severity":1,"message":"236","line":15,"column":3,"nodeType":"217","messageId":"218","endLine":15,"endColumn":17},{"ruleId":"215","severity":1,"message":"237","line":18,"column":10,"nodeType":"217","messageId":"218","endLine":18,"endColumn":16},{"ruleId":"215","severity":1,"message":"238","line":19,"column":8,"nodeType":"217","messageId":"218","endLine":19,"endColumn":13},{"ruleId":"215","severity":1,"message":"239","line":20,"column":8,"nodeType":"217","messageId":"218","endLine":20,"endColumn":14},{"ruleId":"215","severity":1,"message":"240","line":23,"column":10,"nodeType":"217","messageId":"218","endLine":23,"endColumn":27},{"ruleId":"215","severity":1,"message":"241","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":18},{"ruleId":"215","severity":1,"message":"242","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":15},{"ruleId":"215","severity":1,"message":"243","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":13},{"ruleId":"215","severity":1,"message":"244","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":14},{"ruleId":"215","severity":1,"message":"245","line":13,"column":8,"nodeType":"217","messageId":"218","endLine":13,"endColumn":16},{"ruleId":"215","severity":1,"message":"237","line":14,"column":10,"nodeType":"217","messageId":"218","endLine":14,"endColumn":16},{"ruleId":"215","severity":1,"message":"246","line":19,"column":9,"nodeType":"217","messageId":"218","endLine":19,"endColumn":21},{"ruleId":"215","severity":1,"message":"247","line":26,"column":9,"nodeType":"217","messageId":"218","endLine":26,"endColumn":19},{"ruleId":"215","severity":1,"message":"248","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":34},{"ruleId":"215","severity":1,"message":"249","line":3,"column":70,"nodeType":"217","messageId":"218","endLine":3,"endColumn":89},{"ruleId":"215","severity":1,"message":"250","line":4,"column":3,"nodeType":"217","messageId":"218","endLine":4,"endColumn":17},{"ruleId":"215","severity":1,"message":"251","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":19},{"ruleId":"215","severity":1,"message":"252","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":10},{"ruleId":"215","severity":1,"message":"253","line":12,"column":10,"nodeType":"217","messageId":"218","endLine":12,"endColumn":18},{"ruleId":"215","severity":1,"message":"254","line":14,"column":10,"nodeType":"217","messageId":"218","endLine":14,"endColumn":23},{"ruleId":"215","severity":1,"message":"255","line":5,"column":3,"nodeType":"217","messageId":"218","endLine":5,"endColumn":17},{"ruleId":"215","severity":1,"message":"256","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":30},{"ruleId":"215","severity":1,"message":"257","line":9,"column":3,"nodeType":"217","messageId":"218","endLine":9,"endColumn":22},{"ruleId":"215","severity":1,"message":"258","line":10,"column":3,"nodeType":"217","messageId":"218","endLine":10,"endColumn":22},{"ruleId":"215","severity":1,"message":"226","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":20},{"ruleId":"215","severity":1,"message":"259","line":4,"column":3,"nodeType":"217","messageId":"218","endLine":4,"endColumn":13},{"ruleId":"215","severity":1,"message":"260","line":6,"column":3,"nodeType":"217","messageId":"218","endLine":6,"endColumn":16},{"ruleId":"215","severity":1,"message":"261","line":7,"column":3,"nodeType":"217","messageId":"218","endLine":7,"endColumn":14},{"ruleId":"215","severity":1,"message":"262","line":8,"column":3,"nodeType":"217","messageId":"218","endLine":8,"endColumn":12},{"ruleId":"215","severity":1,"message":"263","line":21,"column":24,"nodeType":"217","messageId":"218","endLine":21,"endColumn":28},{"ruleId":"215","severity":1,"message":"264","line":8,"column":10,"nodeType":"217","messageId":"218","endLine":8,"endColumn":23},{"ruleId":"215","severity":1,"message":"265","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":15},{"ruleId":"215","severity":1,"message":"266","line":27,"column":5,"nodeType":"217","messageId":"218","endLine":27,"endColumn":10},{"ruleId":"215","severity":1,"message":"232","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":25},{"ruleId":"215","severity":1,"message":"267","line":1,"column":27,"nodeType":"217","messageId":"218","endLine":1,"endColumn":37},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"@typescript-eslint/no-unused-vars","'SideBar' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.",["268"],["269"],["268"],["269"],"'UilMessage' is defined but never used.","'UilSetting' is defined but never used.","'useSelection' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'UilOperaAlt' is defined but never used.","'UilPolygon' is defined but never used.","'isAuthorized' is assigned a value but never used.","'useState' is defined but never used.","'followUserAC' is defined but never used.","'setTotalUsersCount' is defined but never used.","'setUsersAC' is defined but never used.","'unfollowUserAC' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'styled' is defined but never used.","'useSessionStorage' is defined but never used.","'DialogItem' is defined but never used.","'Message' is defined but never used.","'DialogType' is defined but never used.","'MessageType' is defined but never used.","'TextArea' is defined but never used.","'dialogsState' is assigned a value but never used.","'addMessage' is assigned a value but never used.","'UilClosedCaptioningSlash' is defined but never used.","'UilPresentationEdit' is defined but never used.","'UilCommentDots' is defined but never used.","'UilDraggabledots' is defined but never used.","'UilUser' is defined but never used.","'Redirect' is defined but never used.","'authStateType' is defined but never used.","'socialMediaAPI' is defined but never used.","'SetLoggedUserDataActionType' is defined but never used.","'getLoggedUserDataTC' is defined but never used.","'setLoggedUserDataAC' is defined but never used.","'ReactChild' is defined but never used.","'ReactFragment' is defined but never used.","'ReactPortal' is defined but never used.","'useEffect' is defined but never used.","'rest' is assigned a value but never used.","'SubmitHandler' is defined but never used.","'spawn' is defined but never used.","'watch' is assigned a value but never used.","'MouseEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]